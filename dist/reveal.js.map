{"version":3,"file":"reveal.js","sources":["../js/utils/util.js","../js/utils/device.js","../node_modules/.pnpm/fitty@2.3.0/node_modules/fitty/dist/fitty.module.js","../js/controllers/slidecontent.js","../js/controllers/slidenumber.js","../js/controllers/jumptoslide.js","../js/utils/color.js","../js/controllers/backgrounds.js","../js/utils/constants.js","../js/controllers/autoanimate.js","../js/controllers/fragments.js","../js/controllers/overview.js","../js/controllers/keyboard.js","../js/controllers/location.js","../js/controllers/controls.js","../js/controllers/progress.js","../js/controllers/pointer.js","../js/utils/loader.js","../js/controllers/plugins.js","../js/controllers/print.js","../js/controllers/touch.js","../js/controllers/focus.js","../js/controllers/notes.js","../js/components/playback.js","../js/config.js","../js/reveal.js","../js/index.js"],"sourcesContent":["/**\n * Extend object a with the properties of object b.\n * If there's a conflict, object b takes precedence.\n *\n * @param {object} a\n * @param {object} b\n */\nexport const extend = ( a, b ) => {\n\n\tfor( let i in b ) {\n\t\ta[ i ] = b[ i ];\n\t}\n\n\treturn a;\n\n}\n\n/**\n * querySelectorAll but returns an Array.\n */\nexport const queryAll = ( el, selector ) => {\n\n\treturn Array.from( el.querySelectorAll( selector ) );\n\n}\n\n/**\n * classList.toggle() with cross browser support\n */\nexport const toggleClass = ( el, className, value ) => {\n\tif( value ) {\n\t\tel.classList.add( className );\n\t}\n\telse {\n\t\tel.classList.remove( className );\n\t}\n}\n\n/**\n * Utility for deserializing a value.\n *\n * @param {*} value\n * @return {*}\n */\nexport const deserialize = ( value ) => {\n\n\tif( typeof value === 'string' ) {\n\t\tif( value === 'null' ) return null;\n\t\telse if( value === 'true' ) return true;\n\t\telse if( value === 'false' ) return false;\n\t\telse if( value.match( /^-?[\\d\\.]+$/ ) ) return parseFloat( value );\n\t}\n\n\treturn value;\n\n}\n\n/**\n * Measures the distance in pixels between point a\n * and point b.\n *\n * @param {object} a point with x/y properties\n * @param {object} b point with x/y properties\n *\n * @return {number}\n */\nexport const distanceBetween = ( a, b ) => {\n\n\tlet dx = a.x - b.x,\n\t\tdy = a.y - b.y;\n\n\treturn Math.sqrt( dx*dx + dy*dy );\n\n}\n\n/**\n * Applies a CSS transform to the target element.\n *\n * @param {HTMLElement} element\n * @param {string} transform\n */\nexport const transformElement = ( element, transform ) => {\n\n\telement.style.transform = transform;\n\n}\n\n/**\n * Element.matches with IE support.\n *\n * @param {HTMLElement} target The element to match\n * @param {String} selector The CSS selector to match\n * the element against\n *\n * @return {Boolean}\n */\nexport const matches = ( target, selector ) => {\n\n\tlet matchesMethod = target.matches || target.matchesSelector || target.msMatchesSelector;\n\n\treturn !!( matchesMethod && matchesMethod.call( target, selector ) );\n\n}\n\n/**\n * Find the closest parent that matches the given\n * selector.\n *\n * @param {HTMLElement} target The child element\n * @param {String} selector The CSS selector to match\n * the parents against\n *\n * @return {HTMLElement} The matched parent or null\n * if no matching parent was found\n */\nexport const closest = ( target, selector ) => {\n\n\t// Native Element.closest\n\tif( typeof target.closest === 'function' ) {\n\t\treturn target.closest( selector );\n\t}\n\n\t// Polyfill\n\twhile( target ) {\n\t\tif( matches( target, selector ) ) {\n\t\t\treturn target;\n\t\t}\n\n\t\t// Keep searching\n\t\ttarget = target.parentNode;\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Handling the fullscreen functionality via the fullscreen API\n *\n * @see http://fullscreen.spec.whatwg.org/\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n */\nexport const enterFullscreen = element => {\n\n\telement = element || document.documentElement;\n\n\t// Check which implementation is available\n\tlet requestMethod = element.requestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullScreen ||\n\t\t\t\t\t\telement.mozRequestFullScreen ||\n\t\t\t\t\t\telement.msRequestFullscreen;\n\n\tif( requestMethod ) {\n\t\trequestMethod.apply( element );\n\t}\n\n}\n\n/**\n * Creates an HTML element and returns a reference to it.\n * If the element already exists the existing instance will\n * be returned.\n *\n * @param {HTMLElement} container\n * @param {string} tagname\n * @param {string} classname\n * @param {string} innerHTML\n *\n * @return {HTMLElement}\n */\nexport const createSingletonNode = ( container, tagname, classname, innerHTML='' ) => {\n\n\t// Find all nodes matching the description\n\tlet nodes = container.querySelectorAll( '.' + classname );\n\n\t// Check all matches to find one which is a direct child of\n\t// the specified container\n\tfor( let i = 0; i < nodes.length; i++ ) {\n\t\tlet testNode = nodes[i];\n\t\tif( testNode.parentNode === container ) {\n\t\t\treturn testNode;\n\t\t}\n\t}\n\n\t// If no node was found, create it now\n\tlet node = document.createElement( tagname );\n\tnode.className = classname;\n\tnode.innerHTML = innerHTML;\n\tcontainer.appendChild( node );\n\n\treturn node;\n\n}\n\n/**\n * Injects the given CSS styles into the DOM.\n *\n * @param {string} value\n */\nexport const createStyleSheet = ( value ) => {\n\n\tlet tag = document.createElement( 'style' );\n\ttag.type = 'text/css';\n\n\tif( value && value.length > 0 ) {\n\t\tif( tag.styleSheet ) {\n\t\t\ttag.styleSheet.cssText = value;\n\t\t}\n\t\telse {\n\t\t\ttag.appendChild( document.createTextNode( value ) );\n\t\t}\n\t}\n\n\tdocument.head.appendChild( tag );\n\n\treturn tag;\n\n}\n\n/**\n * Returns a key:value hash of all query params.\n */\nexport const getQueryHash = () => {\n\n\tlet query = {};\n\n\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, a => {\n\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\n\t} );\n\n\t// Basic deserialization\n\tfor( let i in query ) {\n\t\tlet value = query[ i ];\n\n\t\tquery[ i ] = deserialize( unescape( value ) );\n\t}\n\n\t// Do not accept new dependencies via query config to avoid\n\t// the potential of malicious script injection\n\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\n\n\treturn query;\n\n}\n\n/**\n * Returns the remaining height within the parent of the\n * target element.\n *\n * remaining height = [ configured parent height ] - [ current parent height ]\n *\n * @param {HTMLElement} element\n * @param {number} [height]\n */\nexport const getRemainingHeight = ( element, height = 0 ) => {\n\n\tif( element ) {\n\t\tlet newHeight, oldHeight = element.style.height;\n\n\t\t// Change the .stretch element height to 0 in order find the height of all\n\t\t// the other elements\n\t\telement.style.height = '0px';\n\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\n\t\t// Restore it temporarily to its natural height.\n\t\telement.parentNode.style.height = 'auto';\n\n\t\tnewHeight = height - element.parentNode.offsetHeight;\n\n\t\t// Restore the old height, just in case\n\t\telement.style.height = oldHeight + 'px';\n\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\n\t\telement.parentNode.style.removeProperty('height');\n\n\t\treturn newHeight;\n\t}\n\n\treturn height;\n\n}\n\nconst fileExtensionToMimeMap = {\n\t'mp4': 'video/mp4',\n\t'm4a': 'video/mp4',\n\t'ogv': 'video/ogg',\n\t'mpeg': 'video/mpeg',\n\t'webm': 'video/webm'\n}\n\n/**\n * Guess the MIME type for common file formats.\n */\nexport const getMimeTypeFromFile = ( filename='' ) => {\n\treturn fileExtensionToMimeMap[filename.split('.').pop()]\n}\n\n/**\n * Encodes a string for RFC3986-compliant URL format.\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI#encoding_for_rfc3986\n *\n * @param {string} url\n */\nexport const encodeRFC3986URI = ( url='' ) => {\n\treturn encodeURI(url)\n\t  .replace(/%5B/g, \"[\")\n\t  .replace(/%5D/g, \"]\")\n\t  .replace(\n\t\t/[!'()*]/g,\n\t\t(c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`\n\t  );\n}","const UA = navigator.userAgent;\n\nexport const isMobile = /(iphone|ipod|ipad|android)/gi.test( UA ) ||\n\t\t\t\t\t\t( navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 ); // iPadOS\n\nexport const isChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\n\nexport const isAndroid = /android/gi.test( UA );","/*\n * fitty v2.3.0 - Snugly resizes text to fit its parent container\n * Copyright (c) 2020 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = function (w) {\n\n  // no window, early exit\n  if (!w) return;\n\n  // node list to array helper method\n  var toArray = function toArray(nl) {\n    return [].slice.call(nl);\n  };\n\n  // states\n  var DrawState = {\n    IDLE: 0,\n    DIRTY_CONTENT: 1,\n    DIRTY_LAYOUT: 2,\n    DIRTY: 3\n  };\n\n  // all active fitty elements\n  var fitties = [];\n\n  // group all redraw calls till next frame, we cancel each frame request when a new one comes in. If no support for request animation frame, this is an empty function and supports for fitty stops.\n  var redrawFrame = null;\n  var requestRedraw = 'requestAnimationFrame' in w ? function () {\n    w.cancelAnimationFrame(redrawFrame);\n    redrawFrame = w.requestAnimationFrame(function () {\n      return redraw(fitties.filter(function (f) {\n        return f.dirty && f.active;\n      }));\n    });\n  } : function () {};\n\n  // sets all fitties to dirty so they are redrawn on the next redraw loop, then calls redraw\n  var redrawAll = function redrawAll(type) {\n    return function () {\n      fitties.forEach(function (f) {\n        return f.dirty = type;\n      });\n      requestRedraw();\n    };\n  };\n\n  // redraws fitties so they nicely fit their parent container\n  var redraw = function redraw(fitties) {\n\n    // getting info from the DOM at this point should not trigger a reflow, let's gather as much intel as possible before triggering a reflow\n\n    // check if styles of all fitties have been computed\n    fitties.filter(function (f) {\n      return !f.styleComputed;\n    }).forEach(function (f) {\n      f.styleComputed = computeStyle(f);\n    });\n\n    // restyle elements that require pre-styling, this triggers a reflow, please try to prevent by adding CSS rules (see docs)\n    fitties.filter(shouldPreStyle).forEach(applyStyle);\n\n    // we now determine which fitties should be redrawn\n    var fittiesToRedraw = fitties.filter(shouldRedraw);\n\n    // we calculate final styles for these fitties\n    fittiesToRedraw.forEach(calculateStyles);\n\n    // now we apply the calculated styles from our previous loop\n    fittiesToRedraw.forEach(function (f) {\n      applyStyle(f);\n      markAsClean(f);\n    });\n\n    // now we dispatch events for all restyled fitties\n    fittiesToRedraw.forEach(dispatchFitEvent);\n  };\n\n  var markAsClean = function markAsClean(f) {\n    return f.dirty = DrawState.IDLE;\n  };\n\n  var calculateStyles = function calculateStyles(f) {\n\n    // get available width from parent node\n    f.availableWidth = f.element.parentNode.clientWidth;\n\n    // the space our target element uses\n    f.currentWidth = f.element.scrollWidth;\n\n    // remember current font size\n    f.previousFontSize = f.currentFontSize;\n\n    // let's calculate the new font size\n    f.currentFontSize = Math.min(Math.max(f.minSize, f.availableWidth / f.currentWidth * f.previousFontSize), f.maxSize);\n\n    // if allows wrapping, only wrap when at minimum font size (otherwise would break container)\n    f.whiteSpace = f.multiLine && f.currentFontSize === f.minSize ? 'normal' : 'nowrap';\n  };\n\n  // should always redraw if is not dirty layout, if is dirty layout, only redraw if size has changed\n  var shouldRedraw = function shouldRedraw(f) {\n    return f.dirty !== DrawState.DIRTY_LAYOUT || f.dirty === DrawState.DIRTY_LAYOUT && f.element.parentNode.clientWidth !== f.availableWidth;\n  };\n\n  // every fitty element is tested for invalid styles\n  var computeStyle = function computeStyle(f) {\n\n    // get style properties\n    var style = w.getComputedStyle(f.element, null);\n\n    // get current font size in pixels (if we already calculated it, use the calculated version)\n    f.currentFontSize = parseInt(style.getPropertyValue('font-size'), 10);\n\n    // get display type and wrap mode\n    f.display = style.getPropertyValue('display');\n    f.whiteSpace = style.getPropertyValue('white-space');\n  };\n\n  // determines if this fitty requires initial styling, can be prevented by applying correct styles through CSS\n  var shouldPreStyle = function shouldPreStyle(f) {\n\n    var preStyle = false;\n\n    // if we already tested for prestyling we don't have to do it again\n    if (f.preStyleTestCompleted) return false;\n\n    // should have an inline style, if not, apply\n    if (!/inline-/.test(f.display)) {\n      preStyle = true;\n      f.display = 'inline-block';\n    }\n\n    // to correctly calculate dimensions the element should have whiteSpace set to nowrap\n    if (f.whiteSpace !== 'nowrap') {\n      preStyle = true;\n      f.whiteSpace = 'nowrap';\n    }\n\n    // we don't have to do this twice\n    f.preStyleTestCompleted = true;\n\n    return preStyle;\n  };\n\n  // apply styles to single fitty\n  var applyStyle = function applyStyle(f) {\n\n    // remember original style, we need this to restore the fitty style when unsubscribing\n    if (!f.originalStyle) f.originalStyle = f.element.getAttribute('style') || '';\n\n    // set the new style to the original style plus the fitty styles\n    f.element.style.cssText = f.originalStyle + ';white-space:' + f.whiteSpace + ';display:' + f.display + ';font-size:' + f.currentFontSize + 'px';\n  };\n\n  // dispatch a fit event on a fitty\n  var dispatchFitEvent = function dispatchFitEvent(f) {\n    f.element.dispatchEvent(new CustomEvent('fit', {\n      detail: {\n        oldValue: f.previousFontSize,\n        newValue: f.currentFontSize,\n        scaleFactor: f.currentFontSize / f.previousFontSize\n      }\n    }));\n  };\n\n  // fit method, marks the fitty as dirty and requests a redraw (this will also redraw any other fitty marked as dirty)\n  var fit = function fit(f, type) {\n    return function () {\n      f.dirty = type;\n      if (!f.active) return;\n      requestRedraw();\n    };\n  };\n\n  var init = function init(f) {\n\n    // should we observe DOM mutations\n    observeMutations(f);\n\n    // this is a new fitty so we need to validate if it's styles are in order\n    f.newbie = true;\n\n    // because it's a new fitty it should also be dirty, we want it to redraw on the first loop\n    f.dirty = true;\n\n    // we want to be able to update this fitty\n    fitties.push(f);\n  };\n\n  var destroy = function destroy(f) {\n    return function () {\n\n      // remove from fitties array\n      fitties = fitties.filter(function (_) {\n        return _.element !== f.element;\n      });\n\n      // stop observing DOM\n      if (f.observeMutations) f.observer.disconnect();\n\n      // reset font size to inherited size\n      f.element.style.cssText = f.originalStyle;\n    };\n  };\n\n  // add a new fitty, does not redraw said fitty\n  var subscribe = function subscribe(f) {\n    return function () {\n      if (f.active) return;\n      f.active = true;\n      requestRedraw();\n    };\n  };\n\n  // remove an existing fitty\n  var unsubscribe = function unsubscribe(f) {\n    return function () {\n      return f.active = false;\n    };\n  };\n\n  var observeMutations = function observeMutations(f) {\n\n    // no observing?\n    if (!f.observeMutations) return;\n\n    // start observing mutations\n    f.observer = new MutationObserver(fit(f, DrawState.DIRTY_CONTENT));\n\n    // start observing\n    f.observer.observe(f.element, f.observeMutations);\n  };\n\n  // default mutation observer settings\n  var mutationObserverDefaultSetting = {\n    subtree: true,\n    childList: true,\n    characterData: true\n  };\n\n  // default fitty options\n  var defaultOptions = {\n    minSize: 16,\n    maxSize: 512,\n    multiLine: true,\n    observeMutations: 'MutationObserver' in w ? mutationObserverDefaultSetting : false\n  };\n\n  // array of elements in, fitty instances out\n  function fittyCreate(elements, options) {\n\n    // set options object\n    var fittyOptions = _extends({}, defaultOptions, options);\n\n    // create fitties\n    var publicFitties = elements.map(function (element) {\n\n      // create fitty instance\n      var f = _extends({}, fittyOptions, {\n\n        // internal options for this fitty\n        element: element,\n        active: true\n      });\n\n      // initialise this fitty\n      init(f);\n\n      // expose API\n      return {\n        element: element,\n        fit: fit(f, DrawState.DIRTY),\n        unfreeze: subscribe(f),\n        freeze: unsubscribe(f),\n        unsubscribe: destroy(f)\n      };\n    });\n\n    // call redraw on newly initiated fitties\n    requestRedraw();\n\n    // expose fitties\n    return publicFitties;\n  }\n\n  // fitty creation function\n  function fitty(target) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\n    // if target is a string\n    return typeof target === 'string' ?\n\n    // treat it as a querySelector\n    fittyCreate(toArray(document.querySelectorAll(target)), options) :\n\n    // create single fitty\n    fittyCreate([target], options)[0];\n  }\n\n  // handles viewport changes, redraws all fitties, but only does so after a timeout\n  var resizeDebounce = null;\n  var onWindowResized = function onWindowResized() {\n    w.clearTimeout(resizeDebounce);\n    resizeDebounce = w.setTimeout(redrawAll(DrawState.DIRTY_LAYOUT), fitty.observeWindowDelay);\n  };\n\n  // define observe window property, so when we set it to true or false events are automatically added and removed\n  var events = ['resize', 'orientationchange'];\n  Object.defineProperty(fitty, 'observeWindow', {\n    set: function set(enabled) {\n      var method = (enabled ? 'add' : 'remove') + 'EventListener';\n      events.forEach(function (e) {\n        w[method](e, onWindowResized);\n      });\n    }\n  });\n\n  // fitty global properties (by setting observeWindow to true the events above get added)\n  fitty.observeWindow = true;\n  fitty.observeWindowDelay = 100;\n\n  // public fit all method, will force redraw no matter what\n  fitty.fitAll = redrawAll(DrawState.DIRTY);\n\n  // export our fitty function, we don't want to keep it to our selves\n  return fitty;\n}(typeof window === 'undefined' ? null : window);","import { extend, queryAll, closest, getMimeTypeFromFile, encodeRFC3986URI } from '../utils/util.js'\nimport { isMobile } from '../utils/device.js'\n\nimport fitty from 'fitty';\n\n/**\n * Handles loading, unloading and playback of slide\n * content such as images, videos and iframes.\n */\nexport default class SlideContent {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind( this );\n\n\t}\n\n\t/**\n\t * Should the given element be preloaded?\n\t * Decides based on local element attributes and global config.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tshouldPreload( element ) {\n\n\t\t// Prefer an explicit global preload setting\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\n\n\t\t// If no global setting is available, fall back on the element's\n\t\t// own preload setting\n\t\tif( typeof preload !== 'boolean' ) {\n\t\t\tpreload = element.hasAttribute( 'data-preload' );\n\t\t}\n\n\t\treturn preload;\n\t}\n\n\t/**\n\t * Called when the given slide is within the configured view\n\t * distance. Shows the slide element and loads any content\n\t * that is set to load lazily (data-src).\n\t *\n\t * @param {HTMLElement} slide Slide to show\n\t */\n\tload( slide, options = {} ) {\n\n\t\t// Show the slide element\n\t\tslide.style.display = this.Reveal.getConfig().display;\n\n\t\t// Media elements with data-src attributes\n\t\tqueryAll( slide, 'img[data-src], video[data-src], audio[data-src], iframe[data-src]' ).forEach( element => {\n\t\t\tif( element.tagName !== 'IFRAME' || this.shouldPreload( element ) ) {\n\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\n\t\t\t\telement.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\telement.removeAttribute( 'data-src' );\n\t\t\t}\n\t\t} );\n\n\t\t// Media elements with <source> children\n\t\tqueryAll( slide, 'video, audio' ).forEach( media => {\n\t\t\tlet sources = 0;\n\n\t\t\tqueryAll( media, 'source[data-src]' ).forEach( source => {\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\n\t\t\t\tsource.removeAttribute( 'data-src' );\n\t\t\t\tsource.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\tsources += 1;\n\t\t\t} );\n\n\t\t\t// Enable inline video playback in mobile Safari\n\t\t\tif( isMobile && media.tagName === 'VIDEO' ) {\n\t\t\t\tmedia.setAttribute( 'playsinline', '' );\n\t\t\t}\n\n\t\t\t// If we rewrote sources for this video/audio element, we need\n\t\t\t// to manually tell it to load from its new origin\n\t\t\tif( sources > 0 ) {\n\t\t\t\tmedia.load();\n\t\t\t}\n\t\t} );\n\n\n\t\t// Show the corresponding background element\n\t\tlet background = slide.slideBackgroundElement;\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'block';\n\n\t\t\tlet backgroundContent = slide.slideBackgroundContentElement;\n\t\t\tlet backgroundIframe = slide.getAttribute( 'data-background-iframe' );\n\n\t\t\t// If the background contains media, load it\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\n\n\t\t\t\tlet backgroundImage = slide.getAttribute( 'data-background-image' ),\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' );\n\n\t\t\t\t// Images\n\t\t\t\tif( backgroundImage ) {\n\t\t\t\t\t// base64\n\t\t\t\t\tif(  /^data:/.test( backgroundImage.trim() ) ) {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = `url(${backgroundImage.trim()})`;\n\t\t\t\t\t}\n\t\t\t\t\t// URL(s)\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = backgroundImage.split( ',' ).map( background => {\n\t\t\t\t\t\t\t// Decode URL(s) that are already encoded first\n\t\t\t\t\t\t\tlet decoded = decodeURI(background.trim());\n\t\t\t\t\t\t\treturn `url(${encodeRFC3986URI(decoded)})`;\n\t\t\t\t\t\t}).join( ',' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Videos\n\t\t\t\telse if ( backgroundVideo && !this.Reveal.isSpeakerNotes() ) {\n\t\t\t\t\tlet video = document.createElement( 'video' );\n\n\t\t\t\t\tif( backgroundVideoLoop ) {\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( backgroundVideoMuted ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Enable inline playback in mobile Safari\n\t\t\t\t\t//\n\t\t\t\t\t// Mute is required for video to play when using\n\t\t\t\t\t// swipe gestures to navigate since they don't\n\t\t\t\t\t// count as direct user actions :'(\n\t\t\t\t\tif( isMobile ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support comma separated lists of video sources\n\t\t\t\t\tbackgroundVideo.split( ',' ).forEach( source => {\n\t\t\t\t\t\tlet type = getMimeTypeFromFile( source );\n\t\t\t\t\t\tif( type ) {\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\" type=\"${type}\">`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\">`;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t\tbackgroundContent.appendChild( video );\n\t\t\t\t}\n\t\t\t\t// Iframes\n\t\t\t\telse if( backgroundIframe && options.excludeIframes !== true ) {\n\t\t\t\t\tlet iframe = document.createElement( 'iframe' );\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'allow', 'autoplay' );\n\n\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\n\n\t\t\t\t\tiframe.style.width  = '100%';\n\t\t\t\t\tiframe.style.height = '100%';\n\t\t\t\t\tiframe.style.maxHeight = '100%';\n\t\t\t\t\tiframe.style.maxWidth = '100%';\n\n\t\t\t\t\tbackgroundContent.appendChild( iframe );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start loading preloadable iframes\n\t\t\tlet backgroundIframeElement = backgroundContent.querySelector( 'iframe[data-src]' );\n\t\t\tif( backgroundIframeElement ) {\n\n\t\t\t\t// Check if this iframe is eligible to be preloaded\n\t\t\t\tif( this.shouldPreload( background ) && !/autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\n\t\t\t\t\tif( backgroundIframeElement.getAttribute( 'src' ) !== backgroundIframe ) {\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute( 'src', backgroundIframe );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.layout( slide );\n\n\t}\n\n\t/**\n\t * Applies JS-dependent layout helpers for the scope.\n\t */\n\tlayout( scopeElement ) {\n\n\t\t// Autosize text with the r-fit-text class based on the\n\t\t// size of its container. This needs to happen after the\n\t\t// slide is visible in order to measure the text.\n\t\tArray.from( scopeElement.querySelectorAll( '.r-fit-text' ) ).forEach( element => {\n\t\t\tfitty( element, {\n\t\t\t\tminSize: 24,\n\t\t\t\tmaxSize: this.Reveal.getConfig().height * 0.8,\n\t\t\t\tobserveMutations: false,\n\t\t\t\tobserveWindow: false\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unloads and hides the given slide. This is called when the\n\t * slide is moved outside of the configured view distance.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tunload( slide ) {\n\n\t\t// Hide the slide element\n\t\tslide.style.display = 'none';\n\n\t\t// Hide the corresponding background element\n\t\tlet background = this.Reveal.getSlideBackground( slide );\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'none';\n\n\t\t\t// Unload any background iframes\n\t\t\tqueryAll( background, 'iframe[src]' ).forEach( element => {\n\t\t\t\telement.removeAttribute( 'src' );\n\t\t\t} );\n\t\t}\n\n\t\t// Reset lazy-loaded media elements with src attributes\n\t\tqueryAll( slide, 'video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]' ).forEach( element => {\n\t\t\telement.setAttribute( 'data-src', element.getAttribute( 'src' ) );\n\t\t\telement.removeAttribute( 'src' );\n\t\t} );\n\n\t\t// Reset lazy-loaded media elements with <source> children\n\t\tqueryAll( slide, 'video[data-lazy-loaded] source[src], audio source[src]' ).forEach( source => {\n\t\t\tsource.setAttribute( 'data-src', source.getAttribute( 'src' ) );\n\t\t\tsource.removeAttribute( 'src' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Enforces origin-specific format rules for embedded media.\n\t */\n\tformatEmbeddedContent() {\n\n\t\tlet _appendParamToIframeSource = ( sourceAttribute, sourceURL, param ) => {\n\t\t\tqueryAll( this.Reveal.getSlidesElement(), 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ).forEach( el => {\n\t\t\t\tlet src = el.getAttribute( sourceAttribute );\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// YouTube frames must include \"?enablejsapi=1\"\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\n\n\t\t// Vimeo frames must include \"?api=1\"\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\n\n\t}\n\n\t/**\n\t * Start playback of any embedded content inside of\n\t * the given element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstartEmbeddedContent( element ) {\n\n\t\tif( element && !this.Reveal.isSpeakerNotes() ) {\n\n\t\t\t// Restart GIFs\n\t\t\tqueryAll( element, 'img[src$=\".gif\"]' ).forEach( el => {\n\t\t\t\t// Setting the same unchanged source like this was confirmed\n\t\t\t\t// to work in Chrome, FF & Safari\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\n\t\t\t} );\n\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closest( el, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\n\n\t\t\t\t\t// If the media is ready, start playback\n\t\t\t\t\tif( el.readyState > 1 ) {\n\t\t\t\t\t\tthis.startEmbeddedMedia( { target: el } );\n\t\t\t\t\t}\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\n\t\t\t\t\t// of waiting, we initiate playback\n\t\t\t\t\telse if( isMobile ) {\n\t\t\t\t\t\tlet promise = el.play();\n\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\n\t\t\t\t\t\t// that the viewer can start the media on their own\n\t\t\t\t\t\tif( promise && typeof promise.catch === 'function' && el.controls === false ) {\n\t\t\t\t\t\t\tpromise.catch( () => {\n\t\t\t\t\t\t\t\tel.controls = true;\n\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\n\t\t\t\t\t\t\t\tel.addEventListener( 'play', () => {\n\t\t\t\t\t\t\t\t\tel.controls = false;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// If the media isn't loaded, wait before playing\n\t\t\t\t\telse {\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', this.startEmbeddedMedia ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', this.startEmbeddedMedia );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Normal iframes\n\t\t\tqueryAll( element, 'iframe[src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.startEmbeddedIframe( { target: el } );\n\t\t\t} );\n\n\t\t\t// Lazy loading iframes\n\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\n\t\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe ); // remove first to avoid dupes\n\t\t\t\t\tel.addEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Starts playing an embedded video/audio element after\n\t * it has finished loading.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedMedia( event ) {\n\n\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\tif( isAttachedToDOM && isVisible ) {\n\t\t\tevent.target.currentTime = 0;\n\t\t\tevent.target.play();\n\t\t}\n\n\t\tevent.target.removeEventListener( 'loadeddata', this.startEmbeddedMedia );\n\n\t}\n\n\t/**\n\t * \"Starts\" the content of an embedded iframe using the\n\t * postMessage API.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedIframe( event ) {\n\n\t\tlet iframe = event.target;\n\n\t\tif( iframe && iframe.contentWindow ) {\n\n\t\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\t\tif( isAttachedToDOM && isVisible ) {\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closest( iframe, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\t// YouTube postMessage API\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Vimeo postMessage API\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Generic postMessage API\n\t\t\t\telse {\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Stop playback of any embedded content inside of\n\t * the targeted slide.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstopEmbeddedContent( element, options = {} ) {\n\n\t\toptions = extend( {\n\t\t\t// Defaults\n\t\t\tunloadIframes: true\n\t\t}, options );\n\n\t\tif( element && element.parentNode ) {\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\n\t\t\t\t\tel.pause();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\n\t\t\tqueryAll( element, 'iframe' ).forEach( el => {\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\n\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t});\n\n\t\t\t// YouTube postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"youtube.com/embed/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Vimeo postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"player.vimeo.com/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif( options.unloadIframes === true ) {\n\t\t\t\t// Unload lazy-loaded iframes\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\n\t\t\t\t\tel.setAttribute( 'src', 'about:blank' );\n\t\t\t\t\tel.removeAttribute( 'src' );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n","/**\n * Handles the display of reveal.js' optional slide number.\n */\nexport default class SlideNumber {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'slide-number';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tlet slideNumberDisplay = 'none';\n\t\tif( config.slideNumber && !this.Reveal.isPrintingPDF() ) {\n\t\t\tif( config.showSlideNumber === 'all' ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t\telse if( config.showSlideNumber === 'speaker' && this.Reveal.isSpeakerNotes() ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t}\n\n\t\tthis.element.style.display = slideNumberDisplay;\n\n\t}\n\n\t/**\n\t * Updates the slide number to match the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update slide number if enabled\n\t\tif( this.Reveal.getConfig().slideNumber && this.element ) {\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the HTML string corresponding to the current slide\n\t * number, including formatting.\n\t */\n\tgetSlideNumber( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet value;\n\t\tlet format = 'h.v';\n\n\t\tif ( typeof config.slideNumber === 'function' ) {\n\t\t\tvalue = config.slideNumber( slide );\n\t\t} else {\n\t\t\t// Check if a custom number format is available\n\t\t\tif( typeof config.slideNumber === 'string' ) {\n\t\t\t\tformat = config.slideNumber;\n\t\t\t}\n\n\t\t\t// If there are ONLY vertical slides in this deck, always use\n\t\t\t// a flattened slide number\n\t\t\tif( !/c/.test( format ) && this.Reveal.getHorizontalSlides().length === 1 ) {\n\t\t\t\tformat = 'c';\n\t\t\t}\n\n\t\t\t// Offset the current slide number by 1 to make it 1-indexed\n\t\t\tlet horizontalOffset = slide && slide.dataset.visibility === 'uncounted' ? 0 : 1;\n\n\t\t\tvalue = [];\n\t\t\tswitch( format ) {\n\t\t\t\tcase 'c':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'c/t':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset, '/', this.Reveal.getTotalSlides() );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet indices = this.Reveal.getIndices( slide );\n\t\t\t\t\tvalue.push( indices.h + horizontalOffset );\n\t\t\t\t\tlet sep = format === 'h/v' ? '/' : '.';\n\t\t\t\t\tif( this.Reveal.isVerticalSlide( slide ) ) value.push( sep, indices.v + 1 );\n\t\t\t}\n\t\t}\n\n\t\tlet url = '#' + this.Reveal.location.getHash( slide );\n\t\treturn this.formatNumber( value[0], value[1], value[2], url );\n\n\t}\n\n\t/**\n\t * Applies HTML formatting to a slide number before it's\n\t * written to the DOM.\n\t *\n\t * @param {number} a Current slide\n\t * @param {string} delimiter Character to separate slide numbers\n\t * @param {(number|*)} b Total slides\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\n\t * @return {string} HTML string fragment\n\t */\n\tformatNumber( a, delimiter, b, url = '#' + this.Reveal.location.getHash() ) {\n\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\n\t\t\treturn  `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\t\telse {\n\t\t\treturn `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * Makes it possible to jump to a slide by entering its\n * slide number or id.\n */\nexport default class JumpToSlide {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onInput = this.onInput.bind( this );\n\t\tthis.onBlur = this.onBlur.bind( this );\n\t\tthis.onKeyDown = this.onKeyDown.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'jump-to-slide';\n\n    this.jumpInput = document.createElement( 'input' );\n    this.jumpInput.type = 'text';\n    this.jumpInput.className = 'jump-to-slide-input';\n    this.jumpInput.placeholder = 'Jump to slide';\n\t\tthis.jumpInput.addEventListener( 'input', this.onInput );\n\t\tthis.jumpInput.addEventListener( 'keydown', this.onKeyDown );\n\t\tthis.jumpInput.addEventListener( 'blur', this.onBlur );\n\n    this.element.appendChild( this.jumpInput );\n\n\t}\n\n\tshow() {\n\n\t\tthis.indicesOnShow = this.Reveal.getIndices();\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\t\tthis.jumpInput.focus();\n\n\t}\n\n\thide() {\n\n\t\tif( this.isVisible() ) {\n\t\t\tthis.element.remove();\n\t\t\tthis.jumpInput.value = '';\n\n\t\t\tclearTimeout( this.jumpTimeout );\n\t\t\tdelete this.jumpTimeout;\n\t\t}\n\n\t}\n\n\tisVisible() {\n\n\t\treturn !!this.element.parentNode;\n\n\t}\n\n\t/**\n\t * Parses the current input and jumps to the given slide.\n\t */\n\tjump() {\n\n\t\tclearTimeout( this.jumpTimeout );\n\t\tdelete this.jumpTimeout;\n\n\t\tconst query = this.jumpInput.value.trim( '' );\n\t\tlet indices = this.Reveal.location.getIndicesFromHash( query, { oneBasedIndex: true } );\n\n\t\t// If no valid index was found and the input query is a\n\t\t// string, fall back on a simple search\n\t\tif( !indices && /\\S+/i.test( query ) && query.length > 1 ) {\n\t\t\tindices = this.search( query );\n\t\t}\n\n\t\tif( indices && query !== '' ) {\n\t\t\tthis.Reveal.slide( indices.h, indices.v, indices.f );\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\n\t\t\treturn false;\n\t\t}\n\n\t}\n\n\tjumpAfter( delay ) {\n\n\t\tclearTimeout( this.jumpTimeout );\n\t\tthis.jumpTimeout = setTimeout( () => this.jump(), delay );\n\n\t}\n\n\t/**\n\t * A lofi search that looks for the given query in all\n\t * of our slides and returns the first match.\n\t */\n\tsearch( query ) {\n\n\t\tconst regex = new RegExp( '\\\\b' + query.trim() + '\\\\b', 'i' );\n\n\t\tconst slide = this.Reveal.getSlides().find( ( slide ) => {\n\t\t\treturn regex.test( slide.innerText );\n\t\t} );\n\n\t\tif( slide ) {\n\t\t\treturn this.Reveal.getIndices( slide );\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Reverts back to the slide we were on when jump to slide was\n\t * invoked.\n\t */\n\tcancel() {\n\n\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\n\t\tthis.hide();\n\n\t}\n\n\tconfirm() {\n\n\t\tthis.jump();\n\t\tthis.hide();\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.jumpInput.removeEventListener( 'input', this.onInput );\n\t\tthis.jumpInput.removeEventListener( 'keydown', this.onKeyDown );\n\t\tthis.jumpInput.removeEventListener( 'blur', this.onBlur );\n\n\t\tthis.element.remove();\n\n\t}\n\n\tonKeyDown( event ) {\n\n\t\tif( event.keyCode === 13 ) {\n\t\t\tthis.confirm();\n\t\t}\n\t\telse if( event.keyCode === 27 ) {\n\t\t\tthis.cancel();\n\n\t\t\tevent.stopImmediatePropagation();\n\t\t}\n\n\t}\n\n\tonInput( event ) {\n\n\t\tthis.jumpAfter( 200 );\n\n\t}\n\n\tonBlur() {\n\n\t\tsetTimeout( () => this.hide(), 1 );\n\n\t}\n\n}","/**\n * Converts various color input formats to an {r:0,g:0,b:0} object.\n *\n * @param {string} color The string representation of a color\n * @example\n * colorToRgb('#000');\n * @example\n * colorToRgb('#000000');\n * @example\n * colorToRgb('rgb(0,0,0)');\n * @example\n * colorToRgb('rgba(0,0,0)');\n *\n * @return {{r: number, g: number, b: number, [a]: number}|null}\n */\nexport const colorToRgb = ( color ) => {\n\n\tlet hex3 = color.match( /^#([0-9a-f]{3})$/i );\n\tif( hex3 && hex3[1] ) {\n\t\thex3 = hex3[1];\n\t\treturn {\n\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\n\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\n\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\n\t\t};\n\t}\n\n\tlet hex6 = color.match( /^#([0-9a-f]{6})$/i );\n\tif( hex6 && hex6[1] ) {\n\t\thex6 = hex6[1];\n\t\treturn {\n\t\t\tr: parseInt( hex6.slice( 0, 2 ), 16 ),\n\t\t\tg: parseInt( hex6.slice( 2, 4 ), 16 ),\n\t\t\tb: parseInt( hex6.slice( 4, 6 ), 16 )\n\t\t};\n\t}\n\n\tlet rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\n\tif( rgb ) {\n\t\treturn {\n\t\t\tr: parseInt( rgb[1], 10 ),\n\t\t\tg: parseInt( rgb[2], 10 ),\n\t\t\tb: parseInt( rgb[3], 10 )\n\t\t};\n\t}\n\n\tlet rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\n\tif( rgba ) {\n\t\treturn {\n\t\t\tr: parseInt( rgba[1], 10 ),\n\t\t\tg: parseInt( rgba[2], 10 ),\n\t\t\tb: parseInt( rgba[3], 10 ),\n\t\t\ta: parseFloat( rgba[4] )\n\t\t};\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Calculates brightness on a scale of 0-255.\n *\n * @param {string} color See colorToRgb for supported formats.\n * @see {@link colorToRgb}\n */\nexport const colorBrightness = ( color ) => {\n\n\tif( typeof color === 'string' ) color = colorToRgb( color );\n\n\tif( color ) {\n\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\n\t}\n\n\treturn null;\n\n}","import { queryAll } from '../utils/util.js'\nimport { colorToRgb, colorBrightness } from '../utils/color.js'\n\n/**\n * Creates and updates slide backgrounds.\n */\nexport default class Backgrounds {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'backgrounds';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Creates the slide background elements and appends them\n\t * to the background container. One element is created per\n\t * slide no matter if the given slide has visible background.\n\t */\n\tcreate() {\n\n\t\t// Clear prior backgrounds\n\t\tthis.element.innerHTML = '';\n\t\tthis.element.classList.add( 'no-transition' );\n\n\t\t// Iterate over all horizontal slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( slideh => {\n\n\t\t\tlet backgroundStack = this.createBackground( slideh, this.element );\n\n\t\t\t// Iterate over all vertical slides\n\t\t\tqueryAll( slideh, 'section' ).forEach( slidev => {\n\n\t\t\t\tthis.createBackground( slidev, backgroundStack );\n\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\n\n\t\t\t} );\n\n\t\t} );\n\n\t\t// Add parallax background if specified\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tthis.element.style.backgroundImage = 'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\n\t\t\tthis.element.style.backgroundSize = this.Reveal.getConfig().parallaxBackgroundSize;\n\t\t\tthis.element.style.backgroundRepeat = this.Reveal.getConfig().parallaxBackgroundRepeat;\n\t\t\tthis.element.style.backgroundPosition = this.Reveal.getConfig().parallaxBackgroundPosition;\n\n\t\t\t// Make sure the below properties are set on the element - these properties are\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\n\t\t\t// these properties after short time delay\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.add( 'has-parallax-background' );\n\t\t\t}, 1 );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.element.style.backgroundImage = '';\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'has-parallax-background' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a background for the given slide.\n\t *\n\t * @param {HTMLElement} slide\n\t * @param {HTMLElement} container The element that the background\n\t * should be appended to\n\t * @return {HTMLElement} New background div\n\t */\n\tcreateBackground( slide, container ) {\n\n\t\t// Main slide background element\n\t\tlet element = document.createElement( 'div' );\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\n\n\t\t// Inner background element that wraps images/videos/iframes\n\t\tlet contentElement = document.createElement( 'div' );\n\t\tcontentElement.className = 'slide-background-content';\n\n\t\telement.appendChild( contentElement );\n\t\tcontainer.appendChild( element );\n\n\t\tslide.slideBackgroundElement = element;\n\t\tslide.slideBackgroundContentElement = contentElement;\n\n\t\t// Syncs the background to reflect all current background settings\n\t\tthis.sync( slide );\n\n\t\treturn element;\n\n\t}\n\n\t/**\n\t * Renders all of the visual properties of a slide background\n\t * based on the various background attributes.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tsync( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement,\n\t\t\tcontentElement = slide.slideBackgroundContentElement;\n\n\t\tconst data = {\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\n\t\t\tbackgroundGradient: slide.getAttribute( 'data-background-gradient' ),\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' ),\n\t\t\tbackgroundOpacity: slide.getAttribute( 'data-background-opacity' ),\n\t\t};\n\n\t\tconst dataPreload = slide.hasAttribute( 'data-preload' );\n\n\t\t// Reset the prior background state in case this is not the\n\t\t// initial sync\n\t\tslide.classList.remove( 'has-dark-background' );\n\t\tslide.classList.remove( 'has-light-background' );\n\n\t\telement.removeAttribute( 'data-loaded' );\n\t\telement.removeAttribute( 'data-background-hash' );\n\t\telement.removeAttribute( 'data-background-size' );\n\t\telement.removeAttribute( 'data-background-transition' );\n\t\telement.style.backgroundColor = '';\n\n\t\tcontentElement.style.backgroundSize = '';\n\t\tcontentElement.style.backgroundRepeat = '';\n\t\tcontentElement.style.backgroundPosition = '';\n\t\tcontentElement.style.backgroundImage = '';\n\t\tcontentElement.style.opacity = '';\n\t\tcontentElement.innerHTML = '';\n\n\t\tif( data.background ) {\n\t\t\t// Auto-wrap image urls in url(...)\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp|webp)([?#\\s]|$)/gi.test( data.background ) ) {\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.background = data.background;\n\t\t\t}\n\t\t}\n\n\t\t// Create a hash for this combination of background settings.\n\t\t// This is used to determine when two slide backgrounds are\n\t\t// the same.\n\t\tif( data.background || data.backgroundColor || data.backgroundGradient || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundGradient +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundOpacity );\n\t\t}\n\n\t\t// Additional and optional background properties\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\n\t\tif( data.backgroundGradient ) element.style.backgroundImage = data.backgroundGradient;\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\n\n\t\tif( dataPreload ) element.setAttribute( 'data-preload', '' );\n\n\t\t// Background image options are set on the content wrapper\n\t\tif( data.backgroundSize ) contentElement.style.backgroundSize = data.backgroundSize;\n\t\tif( data.backgroundRepeat ) contentElement.style.backgroundRepeat = data.backgroundRepeat;\n\t\tif( data.backgroundPosition ) contentElement.style.backgroundPosition = data.backgroundPosition;\n\t\tif( data.backgroundOpacity ) contentElement.style.opacity = data.backgroundOpacity;\n\n\t\t// If this slide has a background color, we add a class that\n\t\t// signals if it is light or dark. If the slide has no background\n\t\t// color, no class will be added\n\t\tlet contrastColor = data.backgroundColor;\n\n\t\t// If no bg color was found, or it cannot be converted by colorToRgb, check the computed background\n\t\tif( !contrastColor || !colorToRgb( contrastColor ) ) {\n\t\t\tlet computedBackgroundStyle = window.getComputedStyle( element );\n\t\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\n\t\t\t}\n\t\t}\n\n\t\tif( contrastColor ) {\n\t\t\tconst rgb = colorToRgb( contrastColor );\n\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\n\t\t\t// an element with no background\n\t\t\tif( rgb && rgb.a !== 0 ) {\n\t\t\t\tif( colorBrightness( contrastColor ) < 128 ) {\n\t\t\t\t\tslide.classList.add( 'has-dark-background' );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslide.classList.add( 'has-light-background' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the background elements to reflect the current\n\t * slide.\n\t *\n\t * @param {boolean} includeAll If true, the backgrounds of\n\t * all vertical slides (not just the present) will be updated.\n\t */\n\tupdate( includeAll = false ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tlet currentBackground = null;\n\n\t\t// Reverse past/future classes when in RTL mode\n\t\tlet horizontalPast = this.Reveal.getConfig().rtl ? 'future' : 'past',\n\t\t\thorizontalFuture = this.Reveal.getConfig().rtl ? 'past' : 'future';\n\n\t\t// Update the classes of all backgrounds to match the\n\t\t// states of their slides (past/present/future)\n\t\tArray.from( this.element.childNodes ).forEach( ( backgroundh, h ) => {\n\n\t\t\tbackgroundh.classList.remove( 'past', 'present', 'future' );\n\n\t\t\tif( h < indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\n\t\t\t}\n\t\t\telse if ( h > indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundh.classList.add( 'present' );\n\n\t\t\t\t// Store a reference to the current background element\n\t\t\t\tcurrentBackground = backgroundh;\n\t\t\t}\n\n\t\t\tif( includeAll || h === indices.h ) {\n\t\t\t\tqueryAll( backgroundh, '.slide-background' ).forEach( ( backgroundv, v ) => {\n\n\t\t\t\t\tbackgroundv.classList.remove( 'past', 'present', 'future' );\n\n\t\t\t\t\tif( v < indices.v ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( v > indices.v ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\n\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\n\t\t\t\t\t\tif( h === indices.h ) currentBackground = backgroundv;\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\n\t\t} );\n\n\t\t// Stop content inside of previous backgrounds\n\t\tif( this.previousBackground ) {\n\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( this.previousBackground, { unloadIframes: !this.Reveal.slideContent.shouldPreload( this.previousBackground ) } );\n\n\t\t}\n\n\t\t// Start content in the current background\n\t\tif( currentBackground ) {\n\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent( currentBackground );\n\n\t\t\tlet currentBackgroundContent = currentBackground.querySelector( '.slide-background-content' );\n\t\t\tif( currentBackgroundContent ) {\n\n\t\t\t\tlet backgroundImageURL = currentBackgroundContent.style.backgroundImage || '';\n\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\n\t\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = '';\n\t\t\t\t\twindow.getComputedStyle( currentBackgroundContent ).opacity;\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Don't transition between identical backgrounds. This\n\t\t\t// prevents unwanted flicker.\n\t\t\tlet previousBackgroundHash = this.previousBackground ? this.previousBackground.getAttribute( 'data-background-hash' ) : null;\n\t\t\tlet currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== this.previousBackground ) {\n\t\t\t\tthis.element.classList.add( 'no-transition' );\n\t\t\t}\n\n\t\t\tthis.previousBackground = currentBackground;\n\n\t\t}\n\n\t\t// If there's a background brightness flag for this slide,\n\t\t// bubble it to the .reveal container\n\t\tif( currentSlide ) {\n\t\t\t[ 'has-light-background', 'has-dark-background' ].forEach( classToBubble => {\n\t\t\t\tif( currentSlide.classList.contains( classToBubble ) ) {\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.add( classToBubble );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.remove( classToBubble );\n\t\t\t\t}\n\t\t\t}, this );\n\t\t}\n\n\t\t// Allow the first background to apply without transition\n\t\tsetTimeout( () => {\n\t\t\tthis.element.classList.remove( 'no-transition' );\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Updates the position of the parallax background based\n\t * on the current slide index.\n\t */\n\tupdateParallax() {\n\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tlet horizontalSlides = this.Reveal.getHorizontalSlides(),\n\t\t\t\tverticalSlides = this.Reveal.getVerticalSlides();\n\n\t\t\tlet backgroundSize = this.element.style.backgroundSize.split( ' ' ),\n\t\t\t\tbackgroundWidth, backgroundHeight;\n\n\t\t\tif( backgroundSize.length === 1 ) {\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\n\t\t\t}\n\n\t\t\tlet slideWidth = this.element.offsetWidth,\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\n\t\t\t\thorizontalOffsetMultiplier,\n\t\t\t\thorizontalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === 'number' ) {\n\t\t\t\thorizontalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundHorizontal;\n\t\t\t}\n\t\t\telse {\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\n\t\t\t}\n\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\n\n\t\t\tlet slideHeight = this.element.offsetHeight,\n\t\t\t\tverticalSlideCount = verticalSlides.length,\n\t\t\t\tverticalOffsetMultiplier,\n\t\t\t\tverticalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundVertical === 'number' ) {\n\t\t\t\tverticalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundVertical;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\n\t\t\t}\n\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indices.v : 0;\n\n\t\t\tthis.element.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\n\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}\n","\nexport const SLIDES_SELECTOR = '.slides section';\nexport const HORIZONTAL_SLIDES_SELECTOR = '.slides>section';\nexport const VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section';\n\n// Methods that may not be invoked via the postMessage API\nexport const POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener|showPreview/;\n\n// Regex for retrieving the fragment style from a class attribute\nexport const FRAGMENT_STYLE_REGEX = /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;","import { queryAll, extend, createStyleSheet, matches, closest } from '../utils/util.js'\nimport { FRAGMENT_STYLE_REGEX } from '../utils/constants.js'\n\n// Counter used to generate unique IDs for auto-animated elements\nlet autoAnimateCounter = 0;\n\n/**\n * Automatically animates matching elements across\n * slides with the [data-auto-animate] attribute.\n */\nexport default class AutoAnimate {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Runs an auto-animation between the given slides.\n\t *\n\t * @param  {HTMLElement} fromSlide\n\t * @param  {HTMLElement} toSlide\n\t */\n\trun( fromSlide, toSlide ) {\n\n\t\t// Clean up after prior animations\n\t\tthis.reset();\n\n\t\tlet allSlides = this.Reveal.getSlides();\n\t\tlet toSlideIndex = allSlides.indexOf( toSlide );\n\t\tlet fromSlideIndex = allSlides.indexOf( fromSlide );\n\n\t\t// Ensure that both slides are auto-animate targets with the same data-auto-animate-id value\n\t\t// (including null if absent on both) and that data-auto-animate-restart isn't set on the\n\t\t// physically latter slide (independent of slide direction)\n\t\tif( fromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t&& fromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) \n\t\t\t\t&& !( toSlideIndex > fromSlideIndex ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t// Create a new auto-animate sheet\n\t\t\tthis.autoAnimateStyleSheet = this.autoAnimateStyleSheet || createStyleSheet();\n\n\t\t\tlet animationOptions = this.getAutoAnimateOptions( toSlide );\n\n\t\t\t// Set our starting state\n\t\t\tfromSlide.dataset.autoAnimate = 'pending';\n\t\t\ttoSlide.dataset.autoAnimate = 'pending';\n\n\t\t\t// Flag the navigation direction, needed for fragment buildup\n\t\t\tanimationOptions.slideDirection = toSlideIndex > fromSlideIndex ? 'forward' : 'backward';\n\n\t\t\t// If the from-slide is hidden because it has moved outside\n\t\t\t// the view distance, we need to temporarily show it while\n\t\t\t// measuring\n\t\t\tlet fromSlideIsHidden = fromSlide.style.display === 'none';\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = this.Reveal.getConfig().display;\n\n\t\t\t// Inject our auto-animate styles for this transition\n\t\t\tlet css = this.getAutoAnimatableElements( fromSlide, toSlide ).map( elements => {\n\t\t\t\treturn this.autoAnimateElements( elements.from, elements.to, elements.options || {}, animationOptions, autoAnimateCounter++ );\n\t\t\t} );\n\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = 'none';\n\n\t\t\t// Animate unmatched elements, if enabled\n\t\t\tif( toSlide.dataset.autoAnimateUnmatched !== 'false' && this.Reveal.getConfig().autoAnimateUnmatched === true ) {\n\n\t\t\t\t// Our default timings for unmatched elements\n\t\t\t\tlet defaultUnmatchedDuration = animationOptions.duration * 0.8,\n\t\t\t\t\tdefaultUnmatchedDelay = animationOptions.duration * 0.2;\n\n\t\t\t\tthis.getUnmatchedAutoAnimateElements( toSlide ).forEach( unmatchedElement => {\n\n\t\t\t\t\tlet unmatchedOptions = this.getAutoAnimateOptions( unmatchedElement, animationOptions );\n\t\t\t\t\tlet id = 'unmatched';\n\n\t\t\t\t\t// If there is a duration or delay set specifically for this\n\t\t\t\t\t// element our unmatched elements should adhere to those\n\t\t\t\t\tif( unmatchedOptions.duration !== animationOptions.duration || unmatchedOptions.delay !== animationOptions.delay ) {\n\t\t\t\t\t\tid = 'unmatched-' + autoAnimateCounter++;\n\t\t\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }` );\n\t\t\t\t\t}\n\n\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\n\n\t\t\t\t}, this );\n\n\t\t\t\t// Our default transition for unmatched elements\n\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }` );\n\n\t\t\t}\n\n\t\t\t// Setting the whole chunk of CSS at once is the most\n\t\t\t// efficient way to do this. Using sheet.insertRule\n\t\t\t// is multiple factors slower.\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join( '' );\n\n\t\t\t// Start the animation next cycle\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tif( this.autoAnimateStyleSheet ) {\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\n\t\t\t\t\tgetComputedStyle( this.autoAnimateStyleSheet ).fontWeight;\n\n\t\t\t\t\ttoSlide.dataset.autoAnimate = 'running';\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'autoanimate',\n\t\t\t\tdata: {\n\t\t\t\t\tfromSlide,\n\t\t\t\t\ttoSlide,\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Rolls back all changes that we've made to the DOM so\n\t * that as part of animating.\n\t */\n\treset() {\n\n\t\t// Reset slides\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate]:not([data-auto-animate=\"\"])' ).forEach( element => {\n\t\t\telement.dataset.autoAnimate = '';\n\t\t} );\n\n\t\t// Reset elements\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate-target]' ).forEach( element => {\n\t\t\tdelete element.dataset.autoAnimateTarget;\n\t\t} );\n\n\t\t// Remove the animation sheet\n\t\tif( this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode ) {\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild( this.autoAnimateStyleSheet );\n\t\t\tthis.autoAnimateStyleSheet = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a FLIP animation where the `to` element starts out\n\t * in the `from` element position and animates to its original\n\t * state.\n\t *\n\t * @param {HTMLElement} from\n\t * @param {HTMLElement} to\n\t * @param {Object} elementOptions Options for this element pair\n\t * @param {Object} animationOptions Options set at the slide level\n\t * @param {String} id Unique ID that we can use to identify this\n\t * auto-animate element in the DOM\n\t */\n\tautoAnimateElements( from, to, elementOptions, animationOptions, id ) {\n\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\n\t\tfrom.dataset.autoAnimateTarget = '';\n\t\tto.dataset.autoAnimateTarget = id;\n\n\t\t// Each element may override any of the auto-animate options\n\t\t// like transition easing, duration and delay via data-attributes\n\t\tlet options = this.getAutoAnimateOptions( to, animationOptions );\n\n\t\t// If we're using a custom element matcher the element options\n\t\t// may contain additional transition overrides\n\t\tif( typeof elementOptions.delay !== 'undefined' ) options.delay = elementOptions.delay;\n\t\tif( typeof elementOptions.duration !== 'undefined' ) options.duration = elementOptions.duration;\n\t\tif( typeof elementOptions.easing !== 'undefined' ) options.easing = elementOptions.easing;\n\n\t\tlet fromProps = this.getAutoAnimatableProperties( 'from', from, elementOptions ),\n\t\t\ttoProps = this.getAutoAnimatableProperties( 'to', to, elementOptions );\n\n\t\t// Maintain fragment visibility for matching elements when\n\t\t// we're navigating forwards, this way the viewer won't need\n\t\t// to step through the same fragments twice\n\t\tif( to.classList.contains( 'fragment' ) ) {\n\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\n\t\t\t// conflicts with fragment animations\n\t\t\tdelete toProps.styles['opacity'];\n\n\t\t\tif( from.classList.contains( 'fragment' ) ) {\n\n\t\t\t\tlet fromFragmentStyle = ( from.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\t\t\t\tlet toFragmentStyle = ( to.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\n\t\t\t\t// Only skip the fragment if the fragment animation style\n\t\t\t\t// remains unchanged\n\t\t\t\tif( fromFragmentStyle === toFragmentStyle && animationOptions.slideDirection === 'forward' ) {\n\t\t\t\t\tto.classList.add( 'visible', 'disabled' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// If translation and/or scaling are enabled, css transform\n\t\t// the 'to' element so that it matches the position and size\n\t\t// of the 'from' element\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\n\t\t\tlet presentationScale = this.Reveal.getScale();\n\n\t\t\tlet delta = {\n\t\t\t\tx: ( fromProps.x - toProps.x ) / presentationScale,\n\t\t\t\ty: ( fromProps.y - toProps.y ) / presentationScale,\n\t\t\t\tscaleX: fromProps.width / toProps.width,\n\t\t\t\tscaleY: fromProps.height / toProps.height\n\t\t\t};\n\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\n\t\t\tdelta.x = Math.round( delta.x * 1000 ) / 1000;\n\t\t\tdelta.y = Math.round( delta.y * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\n\t\t\tlet translate = elementOptions.translate !== false && ( delta.x !== 0 || delta.y !== 0 ),\n\t\t\t\tscale = elementOptions.scale !== false && ( delta.scaleX !== 0 || delta.scaleY !== 0 );\n\n\t\t\t// No need to transform if nothing's changed\n\t\t\tif( translate || scale ) {\n\n\t\t\t\tlet transform = [];\n\n\t\t\t\tif( translate ) transform.push( `translate(${delta.x}px, ${delta.y}px)` );\n\t\t\t\tif( scale ) transform.push( `scale(${delta.scaleX}, ${delta.scaleY})` );\n\n\t\t\t\tfromProps.styles['transform'] = transform.join( ' ' );\n\t\t\t\tfromProps.styles['transform-origin'] = 'top left';\n\n\t\t\t\ttoProps.styles['transform'] = 'none';\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Delete all unchanged 'to' styles\n\t\tfor( let propertyName in toProps.styles ) {\n\t\t\tconst toValue = toProps.styles[propertyName];\n\t\t\tconst fromValue = fromProps.styles[propertyName];\n\n\t\t\tif( toValue === fromValue ) {\n\t\t\t\tdelete toProps.styles[propertyName];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// If these property values were set via a custom matcher providing\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\n\t\t\t\tif( toValue.explicitValue === true ) {\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\n\t\t\t\t}\n\n\t\t\t\tif( fromValue.explicitValue === true ) {\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet css = '';\n\n\t\tlet toStyleProperties = Object.keys( toProps.styles );\n\n\t\t// Only create animate this element IF at least one style\n\t\t// property has changed\n\t\tif( toStyleProperties.length > 0 ) {\n\n\t\t\t// Instantly move to the 'from' state\n\t\t\tfromProps.styles['transition'] = 'none';\n\n\t\t\t// Animate towards the 'to' state\n\t\t\ttoProps.styles['transition'] = `all ${options.duration}s ${options.easing} ${options.delay}s`;\n\t\t\ttoProps.styles['transition-property'] = toStyleProperties.join( ', ' );\n\t\t\ttoProps.styles['will-change'] = toStyleProperties.join( ', ' );\n\n\t\t\t// Build up our custom CSS. We need to override inline styles\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\n\t\t\tlet fromCSS = Object.keys( fromProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + fromProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tlet toCSS = Object.keys( toProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + toProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tcss = \t'[data-auto-animate-target=\"'+ id +'\"] {'+ fromCSS +'}' +\n\t\t\t\t\t'[data-auto-animate=\"running\"] [data-auto-animate-target=\"'+ id +'\"] {'+ toCSS +'}';\n\n\t\t}\n\n\t\treturn css;\n\n\t}\n\n\t/**\n\t * Returns the auto-animate options for the given element.\n\t *\n\t * @param {HTMLElement} element Element to pick up options\n\t * from, either a slide or an animation target\n\t * @param {Object} [inheritedOptions] Optional set of existing\n\t * options\n\t */\n\tgetAutoAnimateOptions( element, inheritedOptions ) {\n\n\t\tlet options = {\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\n\t\t\tdelay: 0\n\t\t};\n\n\t\toptions = extend( options, inheritedOptions );\n\n\t\t// Inherit options from parent elements\n\t\tif( element.parentNode ) {\n\t\t\tlet autoAnimatedParent = closest( element.parentNode, '[data-auto-animate-target]' );\n\t\t\tif( autoAnimatedParent ) {\n\t\t\t\toptions = this.getAutoAnimateOptions( autoAnimatedParent, options );\n\t\t\t}\n\t\t}\n\n\t\tif( element.dataset.autoAnimateEasing ) {\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDuration ) {\n\t\t\toptions.duration = parseFloat( element.dataset.autoAnimateDuration );\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDelay ) {\n\t\t\toptions.delay = parseFloat( element.dataset.autoAnimateDelay );\n\t\t}\n\n\t\treturn options;\n\n\t}\n\n\t/**\n\t * Returns an object containing all of the properties\n\t * that can be auto-animated for the given element and\n\t * their current computed values.\n\t *\n\t * @param {String} direction 'from' or 'to'\n\t */\n\tgetAutoAnimatableProperties( direction, element, elementOptions ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\tlet properties = { styles: [] };\n\n\t\t// Position and size\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\t\t\tlet bounds;\n\n\t\t\t// Custom auto-animate may optionally return a custom tailored\n\t\t\t// measurement function\n\t\t\tif( typeof elementOptions.measure === 'function' ) {\n\t\t\t\tbounds = elementOptions.measure( element );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( config.center ) {\n\t\t\t\t\t// More precise, but breaks when used in combination\n\t\t\t\t\t// with zoom for scaling the deck ¯\\_(ツ)_/¯\n\t\t\t\t\tbounds = element.getBoundingClientRect();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet scale = this.Reveal.getScale();\n\t\t\t\t\tbounds = {\n\t\t\t\t\t\tx: element.offsetLeft * scale,\n\t\t\t\t\t\ty: element.offsetTop * scale,\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\n\t\t\t\t\t\theight: element.offsetHeight * scale\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproperties.x = bounds.x;\n\t\t\tproperties.y = bounds.y;\n\t\t\tproperties.width = bounds.width;\n\t\t\tproperties.height = bounds.height;\n\t\t}\n\n\t\tconst computedStyles = getComputedStyle( element );\n\n\t\t// CSS styles\n\t\t( elementOptions.styles || config.autoAnimateStyles ).forEach( style => {\n\t\t\tlet value;\n\n\t\t\t// `style` is either the property name directly, or an object\n\t\t\t// definition of a style property\n\t\t\tif( typeof style === 'string' ) style = { property: style };\n\n\t\t\tif( typeof style.from !== 'undefined' && direction === 'from' ) {\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\n\t\t\t}\n\t\t\telse if( typeof style.to !== 'undefined' && direction === 'to' ) {\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Use a unitless value for line-height so that it inherits properly\n\t\t\t\tif( style.property === 'line-height' ) {\n\t\t\t\t\tvalue = parseFloat( computedStyles['line-height'] ) / parseFloat( computedStyles['font-size'] );\n\t\t\t\t}\n\n\t\t\t\tif( isNaN(value) ) {\n\t\t\t\t\tvalue = computedStyles[style.property];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( value !== '' ) {\n\t\t\t\tproperties.styles[style.property] = value;\n\t\t\t}\n\t\t} );\n\n\t\treturn properties;\n\n\t}\n\n\t/**\n\t * Get a list of all element pairs that we can animate\n\t * between the given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t *\n\t * @return {Array} Each value is an array where [0] is\n\t * the element we're animating from and [1] is the\n\t * element we're animating to\n\t */\n\tgetAutoAnimatableElements( fromSlide, toSlide ) {\n\n\t\tlet matcher = typeof this.Reveal.getConfig().autoAnimateMatcher === 'function' ? this.Reveal.getConfig().autoAnimateMatcher : this.getAutoAnimatePairs;\n\n\t\tlet pairs = matcher.call( this, fromSlide, toSlide );\n\n\t\tlet reserved = [];\n\n\t\t// Remove duplicate pairs\n\t\treturn pairs.filter( ( pair, index ) => {\n\t\t\tif( reserved.indexOf( pair.to ) === -1 ) {\n\t\t\t\treserved.push( pair.to );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Identifies matching elements between slides.\n\t *\n\t * You can specify a custom matcher function by using\n\t * the `autoAnimateMatcher` config option.\n\t */\n\tgetAutoAnimatePairs( fromSlide, toSlide ) {\n\n\t\tlet pairs = [];\n\n\t\tconst codeNodes = 'pre';\n\t\tconst textNodes = 'h1, h2, h3, h4, h5, h6, p, li';\n\t\tconst mediaNodes = 'img, video, iframe';\n\n\t\t// Explicit matches via data-id\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, '[data-id]', node => {\n\t\t\treturn node.nodeName + ':::' + node.getAttribute( 'data-id' );\n\t\t} );\n\n\t\t// Text\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, textNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\t// Media\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, mediaNodes, node => {\n\t\t\treturn node.nodeName + ':::' + ( node.getAttribute( 'src' ) || node.getAttribute( 'data-src' ) );\n\t\t} );\n\n\t\t// Code\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, codeNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\tpairs.forEach( pair => {\n\t\t\t// Disable scale transformations on text nodes, we transition\n\t\t\t// each individual text property instead\n\t\t\tif( matches( pair.from, textNodes ) ) {\n\t\t\t\tpair.options = { scale: false };\n\t\t\t}\n\t\t\t// Animate individual lines of code\n\t\t\telse if( matches( pair.from, codeNodes ) ) {\n\n\t\t\t\t// Transition the code block's width and height instead of scaling\n\t\t\t\t// to prevent its content from being squished\n\t\t\t\tpair.options = { scale: false, styles: [ 'width', 'height' ] };\n\n\t\t\t\t// Lines of code\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-code', node => {\n\t\t\t\t\treturn node.textContent;\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t\t// Line numbers\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-numbers[data-line-number]', node => {\n\t\t\t\t\treturn node.getAttribute( 'data-line-number' );\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [ 'width' ],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\treturn pairs;\n\n\t}\n\n\t/**\n\t * Helper method which returns a bounding box based on\n\t * the given elements offset coordinates.\n\t *\n\t * @param {HTMLElement} element\n\t * @return {Object} x, y, width, height\n\t */\n\tgetLocalBoundingBox( element ) {\n\n\t\tconst presentationScale = this.Reveal.getScale();\n\n\t\treturn {\n\t\t\tx: Math.round( ( element.offsetLeft * presentationScale ) * 100 ) / 100,\n\t\t\ty: Math.round( ( element.offsetTop * presentationScale ) * 100 ) / 100,\n\t\t\twidth: Math.round( ( element.offsetWidth * presentationScale ) * 100 ) / 100,\n\t\t\theight: Math.round( ( element.offsetHeight * presentationScale ) * 100 ) / 100\n\t\t};\n\n\t}\n\n\t/**\n\t * Finds matching elements between two slides.\n\t *\n\t * @param {Array} pairs            \tList of pairs to push matches to\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\n\t * @param {HTMLElement} toScope     Scope within the to element exists\n\t * @param {String} selector         CSS selector of the element to match\n\t * @param {Function} serializer     A function that accepts an element and returns\n\t *                                  a stringified ID based on its contents\n\t * @param {Object} animationOptions Optional config options for this pair\n\t */\n\tfindAutoAnimateMatches( pairs, fromScope, toScope, selector, serializer, animationOptions ) {\n\n\t\tlet fromMatches = {};\n\t\tlet toMatches = {};\n\n\t\t[].slice.call( fromScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\tif( typeof key === 'string' && key.length ) {\n\t\t\t\tfromMatches[key] = fromMatches[key] || [];\n\t\t\t\tfromMatches[key].push( element );\n\t\t\t}\n\t\t} );\n\n\t\t[].slice.call( toScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\ttoMatches[key] = toMatches[key] || [];\n\t\t\ttoMatches[key].push( element );\n\n\t\t\tlet fromElement;\n\n\t\t\t// Retrieve the 'from' element\n\t\t\tif( fromMatches[key] ) {\n\t\t\t\tconst primaryIndex = toMatches[key].length - 1;\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\n\n\t\t\t\t// If there are multiple identical from elements, retrieve\n\t\t\t\t// the one at the same index as our to-element.\n\t\t\t\tif( fromMatches[key][ primaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ primaryIndex ];\n\t\t\t\t\tfromMatches[key][ primaryIndex ] = null;\n\t\t\t\t}\n\t\t\t\t// If there are no matching from-elements at the same index,\n\t\t\t\t// use the last one.\n\t\t\t\telse if( fromMatches[key][ secondaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ secondaryIndex ];\n\t\t\t\t\tfromMatches[key][ secondaryIndex ] = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we've got a matching pair, push it to the list of pairs\n\t\t\tif( fromElement ) {\n\t\t\t\tpairs.push({\n\t\t\t\t\tfrom: fromElement,\n\t\t\t\t\tto: element,\n\t\t\t\t\toptions: animationOptions\n\t\t\t\t});\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns a all elements within the given scope that should\n\t * be considered unmatched in an auto-animate transition. If\n\t * fading of unmatched elements is turned on, these elements\n\t * will fade when going between auto-animate slides.\n\t *\n\t * Note that parents of auto-animate targets are NOT considered\n\t * unmatched since fading them would break the auto-animation.\n\t *\n\t * @param {HTMLElement} rootElement\n\t * @return {Array}\n\t */\n\tgetUnmatchedAutoAnimateElements( rootElement ) {\n\n\t\treturn [].slice.call( rootElement.children ).reduce( ( result, element ) => {\n\n\t\t\tconst containsAnimatedElements = element.querySelector( '[data-auto-animate-target]' );\n\n\t\t\t// The element is unmatched if\n\t\t\t// - It is not an auto-animate target\n\t\t\t// - It does not contain any auto-animate targets\n\t\t\tif( !element.hasAttribute( 'data-auto-animate-target' ) && !containsAnimatedElements ) {\n\t\t\t\tresult.push( element );\n\t\t\t}\n\n\t\t\tif( element.querySelector( '[data-auto-animate-target]' ) ) {\n\t\t\t\tresult = result.concat( this.getUnmatchedAutoAnimateElements( element ) );\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}, [] );\n\n\t}\n\n}\n","import { extend, queryAll } from '../utils/util.js'\n\n/**\n * Handles sorting and navigation of slide fragments.\n * Fragments are elements within a slide that are\n * revealed/animated incrementally.\n */\nexport default class Fragments {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.fragments === false ) {\n\t\t\tthis.disable();\n\t\t}\n\t\telse if( oldConfig.fragments === false ) {\n\t\t\tthis.enable();\n\t\t}\n\n\t}\n\n\t/**\n\t * If fragments are disabled in the deck, they should all be\n\t * visible rather than stepped through.\n\t */\n\tdisable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.add( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Reverse of #disable(). Only called if fragments have\n\t * previously been disabled.\n\t */\n\tenable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.remove( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns an object describing the available fragment\n\t * directions.\n\t *\n\t * @return {{prev: boolean, next: boolean}}\n\t */\n\tavailableRoutes() {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\t\t\tlet fragments = currentSlide.querySelectorAll( '.fragment:not(.disabled)' );\n\t\t\tlet hiddenFragments = currentSlide.querySelectorAll( '.fragment:not(.disabled):not(.visible)' );\n\n\t\t\treturn {\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\n\t\t\t\tnext: !!hiddenFragments.length\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\treturn { prev: false, next: false };\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a sorted fragments list, ordered by an increasing\n\t * \"data-fragment-index\" attribute.\n\t *\n\t * Fragments will be revealed in the order that they are returned by\n\t * this function, so you can use the index attributes to control the\n\t * order of fragment appearance.\n\t *\n\t * To maintain a sensible default fragment order, fragments are presumed\n\t * to be passed in document order. This function adds a \"fragment-index\"\n\t * attribute to each node if such an attribute is not already present,\n\t * and sets that attribute to an integer value which is the position of\n\t * the fragment within the fragments list.\n\t *\n\t * @param {object[]|*} fragments\n\t * @param {boolean} grouped If true the returned array will contain\n\t * nested arrays for all fragments with the same index\n\t * @return {object[]} sorted Sorted array of fragments\n\t */\n\tsort( fragments, grouped = false ) {\n\n\t\tfragments = Array.from( fragments );\n\n\t\tlet ordered = [],\n\t\t\tunordered = [],\n\t\t\tsorted = [];\n\n\t\t// Group ordered and unordered elements\n\t\tfragments.forEach( fragment => {\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\tlet index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\n\n\t\t\t\tif( !ordered[index] ) {\n\t\t\t\t\tordered[index] = [];\n\t\t\t\t}\n\n\t\t\t\tordered[index].push( fragment );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tunordered.push( [ fragment ] );\n\t\t\t}\n\t\t} );\n\n\t\t// Append fragments without explicit indices in their\n\t\t// DOM order\n\t\tordered = ordered.concat( unordered );\n\n\t\t// Manually count the index up per group to ensure there\n\t\t// are no gaps\n\t\tlet index = 0;\n\n\t\t// Push all fragments in their sorted order to an array,\n\t\t// this flattens the groups\n\t\tordered.forEach( group => {\n\t\t\tgroup.forEach( fragment => {\n\t\t\t\tsorted.push( fragment );\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\n\t\t\t} );\n\n\t\t\tindex ++;\n\t\t} );\n\n\t\treturn grouped === true ? ordered : sorted;\n\n\t}\n\n\t/**\n\t * Sorts and formats all of fragments in the\n\t * presentation.\n\t */\n\tsortAll() {\n\n\t\tthis.Reveal.getHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tlet verticalSlides = queryAll( horizontalSlide, 'section' );\n\t\t\tverticalSlides.forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tthis.sort( verticalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\t}, this );\n\n\t\t\tif( verticalSlides.length === 0 ) this.sort( horizontalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Refreshes the fragments on the current slide so that they\n\t * have the appropriate classes (.visible + .current-fragment).\n\t *\n\t * @param {number} [index] The index of the current fragment\n\t * @param {array} [fragments] Array containing all fragments\n\t * in the current slide\n\t *\n\t * @return {{shown: array, hidden: array}}\n\t */\n\tupdate( index, fragments ) {\n\n\t\tlet changedFragments = {\n\t\t\tshown: [],\n\t\t\thidden: []\n\t\t};\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tfragments = fragments || this.sort( currentSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\tif( fragments.length ) {\n\n\t\t\t\tlet maxIndex = 0;\n\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet currentFragment = this.sort( currentSlide.querySelectorAll( '.fragment.visible' ) ).pop();\n\t\t\t\t\tif( currentFragment ) {\n\t\t\t\t\t\tindex = parseInt( currentFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tArray.from( fragments ).forEach( ( el, i ) => {\n\n\t\t\t\t\tif( el.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\t\ti = parseInt( el.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t\t}\n\n\t\t\t\t\tmaxIndex = Math.max( maxIndex, i );\n\n\t\t\t\t\t// Visible fragments\n\t\t\t\t\tif( i <= index ) {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.add( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( i === index ) {\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\n\t\t\t\t\t\t\tthis.Reveal.announceStatus( this.Reveal.getStatusText( el ) );\n\n\t\t\t\t\t\t\tel.classList.add( 'current-fragment' );\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent( el );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( !wasVisible ) {\n\t\t\t\t\t\t\tchangedFragments.shown.push( el )\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'visible',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Hidden fragments\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.remove( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( wasVisible ) {\n\t\t\t\t\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( el );\n\t\t\t\t\t\t\tchangedFragments.hidden.push( el );\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'hidden',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// Write the current fragment index to the slide <section>.\n\t\t\t\t// This can be used by end users to apply styles based on\n\t\t\t\t// the current fragment index.\n\t\t\t\tindex = typeof index === 'number' ? index : -1;\n\t\t\t\tindex = Math.max( Math.min( index, maxIndex ), -1 );\n\t\t\t\tcurrentSlide.setAttribute( 'data-fragment', index );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn changedFragments;\n\n\t}\n\n\t/**\n\t * Formats the fragments on the given slide so that they have\n\t * valid indices. Call this if fragments are changed in the DOM\n\t * after reveal.js has already initialized.\n\t *\n\t * @param {HTMLElement} slide\n\t * @return {Array} a list of the HTML fragments that were synced\n\t */\n\tsync( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\treturn this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t}\n\n\t/**\n\t * Navigate to the specified slide fragment.\n\t *\n\t * @param {?number} index The index of the fragment that\n\t * should be shown, -1 means all are invisible\n\t * @param {number} offset Integer offset to apply to the\n\t * fragment index\n\t *\n\t * @return {boolean} true if a change was made in any\n\t * fragments visibility as part of this call\n\t */\n\tgoto( index, offset = 0 ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tlet fragments = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tif( fragments.length ) {\n\n\t\t\t\t// If no index is specified, find the current\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet lastVisibleFragment = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled).visible' ) ).pop();\n\n\t\t\t\t\tif( lastVisibleFragment ) {\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tindex = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply the offset if there is one\n\t\t\t\tindex += offset;\n\n\t\t\t\tlet changedFragments = this.update( index, fragments );\n\n\t\t\t\tif( changedFragments.hidden.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmenthidden',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.hidden[0],\n\t\t\t\t\t\t\tfragments: changedFragments.hidden\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif( changedFragments.shown.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmentshown',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.shown[0],\n\t\t\t\t\t\t\tfragments: changedFragments.shown\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.Reveal.controls.update();\n\t\t\t\tthis.Reveal.progress.update();\n\n\t\t\t\tif( this.Reveal.getConfig().fragmentInURL ) {\n\t\t\t\t\tthis.Reveal.location.writeURL();\n\t\t\t\t}\n\n\t\t\t\treturn !!( changedFragments.shown.length || changedFragments.hidden.length );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Navigate to the next slide fragment.\n\t *\n\t * @return {boolean} true if there was a next fragment,\n\t * false otherwise\n\t */\n\tnext() {\n\n\t\treturn this.goto( null, 1 );\n\n\t}\n\n\t/**\n\t * Navigate to the previous slide fragment.\n\t *\n\t * @return {boolean} true if there was a previous fragment,\n\t * false otherwise\n\t */\n\tprev() {\n\n\t\treturn this.goto( null, -1 );\n\n\t}\n\n}","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { extend, queryAll, transformElement } from '../utils/util.js'\n\n/**\n * Handles all logic related to the overview mode\n * (birds-eye view of all slides).\n */\nexport default class Overview {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\n\t\tthis.onSlideClicked = this.onSlideClicked.bind( this );\n\n\t}\n\n\t/**\n\t * Displays the overview of slides (quick nav) by scaling\n\t * down and arranging all slide elements.\n\t */\n\tactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview && !this.isActive() ) {\n\n\t\t\tthis.active = true;\n\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview' );\n\n\t\t\t// Don't auto-slide while in overview mode\n\t\t\tthis.Reveal.cancelAutoSlide();\n\n\t\t\t// Move the backgrounds element into the slide container to\n\t\t\t// that the same scaling is applied\n\t\t\tthis.Reveal.getSlidesElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clicking on an overview slide navigates to it\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tslide.addEventListener( 'click', this.onSlideClicked, true );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Calculate slide sizes\n\t\t\tconst margin = 70;\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\n\n\t\t\t// Reverse in RTL mode\n\t\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\n\t\t\t}\n\n\t\t\tthis.Reveal.updateSlidesVisibility();\n\n\t\t\tthis.layout();\n\t\t\tthis.update();\n\n\t\t\tthis.Reveal.layout();\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\t// Notify observers of the overview showing\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewshown',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Uses CSS transforms to position all slides in a grid for\n\t * display inside of the overview mode.\n\t */\n\tlayout() {\n\n\t\t// Layout slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( ( hslide, h ) => {\n\t\t\thslide.setAttribute( 'data-index-h', h );\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\n\n\t\t\t\tqueryAll( hslide, 'section' ).forEach( ( vslide, v ) => {\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\n\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t\t} );\n\n\t\t\t}\n\t\t} );\n\n\t\t// Layout slide backgrounds\n\t\tArray.from( this.Reveal.getBackgroundsElement().childNodes ).forEach( ( hbackground, h ) => {\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tqueryAll( hbackground, '.slide-background' ).forEach( ( vbackground, v ) => {\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Moves the overview viewport to the current slides.\n\t * Called each time the current slide changes.\n\t */\n\tupdate() {\n\n\t\tconst vmin = Math.min( window.innerWidth, window.innerHeight );\n\t\tconst scale = Math.max( vmin / 5, 150 ) / vmin;\n\t\tconst indices = this.Reveal.getIndices();\n\n\t\tthis.Reveal.transformSlides( {\n\t\t\toverview: [\n\t\t\t\t'scale('+ scale +')',\n\t\t\t\t'translateX('+ ( -indices.h * this.overviewSlideWidth ) +'px)',\n\t\t\t\t'translateY('+ ( -indices.v * this.overviewSlideHeight ) +'px)'\n\t\t\t].join( ' ' )\n\t\t} );\n\n\t}\n\n\t/**\n\t * Exits the slide overview and enters the currently\n\t * active slide.\n\t */\n\tdeactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview ) {\n\n\t\t\tthis.active = false;\n\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview' );\n\n\t\t\t// Temporarily add a class so that transitions can do different things\n\t\t\t// depending on whether they are exiting/entering overview, or just\n\t\t\t// moving from slide to slide\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview-deactivating' );\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview-deactivating' );\n\t\t\t}, 1 );\n\n\t\t\t// Move the background element back out\n\t\t\tthis.Reveal.getRevealElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clean up changes made to slides\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\ttransformElement( slide, '' );\n\n\t\t\t\tslide.removeEventListener( 'click', this.onSlideClicked, true );\n\t\t\t} );\n\n\t\t\t// Clean up changes made to backgrounds\n\t\t\tqueryAll( this.Reveal.getBackgroundsElement(), '.slide-background' ).forEach( background => {\n\t\t\t\ttransformElement( background, '' );\n\t\t\t} );\n\n\t\t\tthis.Reveal.transformSlides( { overview: '' } );\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\tthis.Reveal.slide( indices.h, indices.v );\n\t\t\tthis.Reveal.layout();\n\t\t\tthis.Reveal.cueAutoSlide();\n\n\t\t\t// Notify observers of the overview hiding\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewhidden',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the slide overview mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * overview is open, false means it's closed.\n\t */\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the overview is currently active.\n\t *\n\t * @return {Boolean} true if the overview is active,\n\t * false otherwise\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Invoked when a slide is and we're in the overview.\n\t *\n\t * @param {object} event\n\t */\n\tonSlideClicked( event ) {\n\n\t\tif( this.isActive() ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tlet element = event.target;\n\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\n\n\t\t\t\tthis.deactivate();\n\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\n\t\t\t\t\tlet h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\n\n\t\t\t\t\tthis.Reveal.slide( h, v );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n}","import { enterFullscreen } from '../utils/util.js'\n\n/**\n * Handles all reveal.js keyboard interactions.\n */\nexport default class Keyboard {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// A key:value map of keyboard keys and descriptions of\n\t\t// the actions they trigger\n\t\tthis.shortcuts = {};\n\n\t\t// Holds custom key code mappings\n\t\tthis.bindings = {};\n\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind( this );\n\t\tthis.onDocumentKeyPress = this.onDocumentKeyPress.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.navigationMode === 'linear' ) {\n\t\t\tthis.shortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\n\t\t\tthis.shortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K']           = 'Previous slide';\n\t\t}\n\t\telse {\n\t\t\tthis.shortcuts['N  ,  SPACE']   = 'Next slide';\n\t\t\tthis.shortcuts['P  ,  Shift SPACE']             = 'Previous slide';\n\t\t\tthis.shortcuts['&#8592;  ,  H'] = 'Navigate left';\n\t\t\tthis.shortcuts['&#8594;  ,  L'] = 'Navigate right';\n\t\t\tthis.shortcuts['&#8593;  ,  K'] = 'Navigate up';\n\t\t\tthis.shortcuts['&#8595;  ,  J'] = 'Navigate down';\n\t\t}\n\n\t\tthis.shortcuts['Alt + &#8592;/&#8593/&#8594;/&#8595;']        = 'Navigate without fragments';\n\t\tthis.shortcuts['Shift + &#8592;/&#8593/&#8594;/&#8595;']      = 'Jump to first/last slide';\n\t\tthis.shortcuts['B  ,  .']                       = 'Pause';\n\t\tthis.shortcuts['F']                             = 'Fullscreen';\n\t\tthis.shortcuts['G']                             = 'Jump to slide';\n\t\tthis.shortcuts['ESC, O']                        = 'Slide overview';\n\n\t}\n\n\t/**\n\t * Starts listening for keyboard events.\n\t */\n\tbind() {\n\n\t\tdocument.addEventListener( 'keydown', this.onDocumentKeyDown, false );\n\t\tdocument.addEventListener( 'keypress', this.onDocumentKeyPress, false );\n\n\t}\n\n\t/**\n\t * Stops listening for keyboard events.\n\t */\n\tunbind() {\n\n\t\tdocument.removeEventListener( 'keydown', this.onDocumentKeyDown, false );\n\t\tdocument.removeEventListener( 'keypress', this.onDocumentKeyPress, false );\n\n\t}\n\n\t/**\n\t * Add a custom key binding with optional description to\n\t * be added to the help screen.\n\t */\n\taddKeyBinding( binding, callback ) {\n\n\t\tif( typeof binding === 'object' && binding.keyCode ) {\n\t\t\tthis.bindings[binding.keyCode] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: binding.key,\n\t\t\t\tdescription: binding.description\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tthis.bindings[binding] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: null,\n\t\t\t\tdescription: null\n\t\t\t};\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes the specified custom key binding.\n\t */\n\tremoveKeyBinding( keyCode ) {\n\n\t\tdelete this.bindings[keyCode];\n\n\t}\n\n\t/**\n\t * Programmatically triggers a keyboard event\n\t *\n\t * @param {int} keyCode\n\t */\n\ttriggerKey( keyCode ) {\n\n\t\tthis.onDocumentKeyDown( { keyCode } );\n\n\t}\n\n\t/**\n\t * Registers a new shortcut to include in the help overlay\n\t *\n\t * @param {String} key\n\t * @param {String} value\n\t */\n\tregisterKeyboardShortcut( key, value ) {\n\n\t\tthis.shortcuts[key] = value;\n\n\t}\n\n\tgetShortcuts() {\n\n\t\treturn this.shortcuts;\n\n\t}\n\n\tgetBindings() {\n\n\t\treturn this.bindings;\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keypress' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyPress( event ) {\n\n\t\t// Check if the pressed key is question mark\n\t\tif( event.shiftKey && event.charCode === 63 ) {\n\t\t\tthis.Reveal.toggleHelp();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keydown' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyDown( event ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// If there's a condition specified and it returns false,\n\t\t// ignore this event\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If keyboardCondition is set, only capture keyboard events\n\t\t// for embedded decks when they are focused\n\t\tif( config.keyboardCondition === 'focused' && !this.Reveal.isFocused() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Shorthand\n\t\tlet keyCode = event.keyCode;\n\n\t\t// Remember if auto-sliding was paused so we can toggle it\n\t\tlet autoSlideWasPaused = !this.Reveal.isAutoSliding();\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\t// Is there a focused element that could be using the keyboard?\n\t\tlet activeElementIsCE = document.activeElement && document.activeElement.isContentEditable === true;\n\t\tlet activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\n\t\tlet activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\n\n\t\t// Whitelist certain modifiers for slide navigation shortcuts\n\t\tlet isNavigationKey = [32, 37, 38, 39, 40, 78, 80].indexOf( event.keyCode ) !== -1;\n\n\t\t// Prevent all other events when a modifier is pressed\n\t\tlet unusedModifier = \t!( isNavigationKey && event.shiftKey || event.altKey ) &&\n\t\t\t\t\t\t\t\t( event.shiftKey || event.altKey || event.ctrlKey || event.metaKey );\n\n\t\t// Disregard the event if there's a focused element or a\n\t\t// keyboard modifier key is present\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier ) return;\n\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\n\t\tlet resumeKeyCodes = [66,86,190,191];\n\t\tlet key;\n\n\t\t// Custom key bindings for togglePause should be able to resume\n\t\tif( typeof config.keyboard === 'object' ) {\n\t\t\tfor( key in config.keyboard ) {\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( this.Reveal.isPaused() && resumeKeyCodes.indexOf( keyCode ) === -1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Use linear navigation if we're configured to OR if\n\t\t// the presentation is one-dimensional\n\t\tlet useLinearMode = config.navigationMode === 'linear' || !this.Reveal.hasHorizontalSlides() || !this.Reveal.hasVerticalSlides();\n\n\t\tlet triggered = false;\n\n\t\t// 1. User defined key bindings\n\t\tif( typeof config.keyboard === 'object' ) {\n\n\t\t\tfor( key in config.keyboard ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet value = config.keyboard[ key ];\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof value === 'function' ) {\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof value === 'string' && typeof this.Reveal[ value ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ value ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// 2. Registered custom key bindings\n\t\tif( triggered === false ) {\n\n\t\t\tfor( key in this.bindings ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet action = this.bindings[ key ].callback;\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof action === 'function' ) {\n\t\t\t\t\t\taction.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof action === 'string' && typeof this.Reveal[ action ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ action ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 3. System defined key bindings\n\t\tif( triggered === false ) {\n\n\t\t\t// Assume true and try to prove false\n\t\t\ttriggered = true;\n\n\t\t\t// P, PAGE UP\n\t\t\tif( keyCode === 80 || keyCode === 33 ) {\n\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// N, PAGE DOWN\n\t\t\telse if( keyCode === 78 || keyCode === 34 ) {\n\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// H, LEFT\n\t\t\telse if( keyCode === 72 || keyCode === 37 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.left({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// L, RIGHT\n\t\t\telse if( keyCode === 76 || keyCode === 39 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.right({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// K, UP\n\t\t\telse if( keyCode === 75 || keyCode === 38 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.up({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// J, DOWN\n\t\t\telse if( keyCode === 74 || keyCode === 40 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, Number.MAX_VALUE );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.down({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// HOME\n\t\t\telse if( keyCode === 36 ) {\n\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t}\n\t\t\t// END\n\t\t\telse if( keyCode === 35 ) {\n\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t}\n\t\t\t// SPACE\n\t\t\telse if( keyCode === 32 ) {\n\t\t\t\tif( this.Reveal.overview.isActive() ) {\n\t\t\t\t\tthis.Reveal.overview.deactivate();\n\t\t\t\t}\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\n\t\t\telse if( keyCode === 58 || keyCode === 59 || keyCode === 66 || keyCode === 86 || keyCode === 190 || keyCode === 191 ) {\n\t\t\t\tthis.Reveal.togglePause();\n\t\t\t}\n\t\t\t// F\n\t\t\telse if( keyCode === 70 ) {\n\t\t\t\tenterFullscreen( config.embedded ? this.Reveal.getViewportElement() : document.documentElement );\n\t\t\t}\n\t\t\t// A\n\t\t\telse if( keyCode === 65 ) {\n\t\t\t\tif ( config.autoSlideStoppable ) {\n\t\t\t\t\tthis.Reveal.toggleAutoSlide( autoSlideWasPaused );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// G\n\t\t\telse if( keyCode === 71 ) {\n\t\t\t\tif ( config.jumpToSlide ) {\n\t\t\t\t\tthis.Reveal.toggleJumpToSlide();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttriggered = false;\n\t\t\t}\n\n\t\t}\n\n\t\t// If the input resulted in a triggered action we should prevent\n\t\t// the browsers default behavior\n\t\tif( triggered ) {\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\t\t// ESC or O key\n\t\telse if( keyCode === 27 || keyCode === 79 ) {\n\t\t\tif( this.Reveal.closeOverlay() === false ) {\n\t\t\t\tthis.Reveal.overview.toggle();\n\t\t\t}\n\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\n\t\t// If auto-sliding is enabled we need to cue up\n\t\t// another timeout\n\t\tthis.Reveal.cueAutoSlide();\n\n\t}\n\n}","/**\n * Reads and writes the URL based on reveal.js' current state.\n */\nexport default class Location {\n\n\t// The minimum number of milliseconds that must pass between\n\t// calls to history.replaceState\n\tMAX_REPLACE_STATE_FREQUENCY = 1000\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\n\t\tthis.writeURLTimeout = 0;\n\n\t\tthis.replaceStateTimestamp = 0;\n\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind( this );\n\n\t}\n\n\tbind() {\n\n\t\twindow.addEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\tunbind() {\n\n\t\twindow.removeEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\t/**\n\t * Returns the slide indices for the given hash link.\n\t *\n\t * @param {string} [hash] the hash string that we want to\n\t * find the indices for\n\t *\n\t * @returns slide indices or null\n\t */\n\tgetIndicesFromHash( hash=window.location.hash, options={} ) {\n\n\t\t// Attempt to parse the hash as either an index or name\n\t\tlet name = hash.replace( /^#\\/?/, '' );\n\t\tlet bits = name.split( '/' );\n\n\t\t// If the first bit is not fully numeric and there is a name we\n\t\t// can assume that this is a named link\n\t\tif( !/^[0-9]*$/.test( bits[0] ) && name.length ) {\n\t\t\tlet slide;\n\n\t\t\tlet f;\n\n\t\t\t// Parse named links with fragments (#/named-link/2)\n\t\t\tif( /\\/[-\\d]+$/g.test( name ) ) {\n\t\t\t\tf = parseInt( name.split( '/' ).pop(), 10 );\n\t\t\t\tf = isNaN(f) ? undefined : f;\n\t\t\t\tname = name.split( '/' ).shift();\n\t\t\t}\n\n\t\t\t// Ensure the named link is a valid HTML ID attribute\n\t\t\ttry {\n\t\t\t\tslide = document\n\t\t\t\t\t.getElementById( decodeURIComponent( name ) )\n\t\t\t\t\t.closest('.slides>section, .slides>section>section');\n\t\t\t}\n\t\t\tcatch ( error ) { }\n\n\t\t\tif( slide ) {\n\t\t\t\treturn { ...this.Reveal.getIndices( slide ), f };\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst config = this.Reveal.getConfig();\n\t\t\tlet hashIndexBase = config.hashOneBasedIndex || options.oneBasedIndex ? 1 : 0;\n\n\t\t\t// Read the index components of the hash\n\t\t\tlet h = ( parseInt( bits[0], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tv = ( parseInt( bits[1], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tf;\n\n\t\t\tif( config.fragmentInURL ) {\n\t\t\t\tf = parseInt( bits[2], 10 );\n\t\t\t\tif( isNaN( f ) ) {\n\t\t\t\t\tf = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { h, v, f };\n\t\t}\n\n\t\t// The hash couldn't be parsed or no matching named link was found\n\t\treturn null\n\n\t}\n\n\t/**\n\t * Reads the current URL (hash) and navigates accordingly.\n\t */\n\treadURL() {\n\n\t\tconst currentIndices = this.Reveal.getIndices();\n\t\tconst newIndices = this.getIndicesFromHash();\n\n\t\tif( newIndices ) {\n\t\t\tif( ( newIndices.h !== currentIndices.h || newIndices.v !== currentIndices.v || newIndices.f !== undefined ) ) {\n\t\t\t\t\tthis.Reveal.slide( newIndices.h, newIndices.v, newIndices.f );\n\t\t\t}\n\t\t}\n\t\t// If no new indices are available, we're trying to navigate to\n\t\t// a slide hash that does not exist\n\t\telse {\n\t\t\tthis.Reveal.slide( currentIndices.h || 0, currentIndices.v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the page URL (hash) to reflect the current\n\t * state.\n\t *\n\t * @param {number} delay The time in ms to wait before\n\t * writing the hash\n\t */\n\twriteURL( delay ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\n\t\t// Make sure there's never more than one timeout running\n\t\tclearTimeout( this.writeURLTimeout );\n\n\t\t// If a delay is specified, timeout this call\n\t\tif( typeof delay === 'number' ) {\n\t\t\tthis.writeURLTimeout = setTimeout( this.writeURL, delay );\n\t\t}\n\t\telse if( currentSlide ) {\n\n\t\t\tlet hash = this.getHash();\n\n\t\t\t// If we're configured to push to history OR the history\n\t\t\t// API is not available.\n\t\t\tif( config.history ) {\n\t\t\t\twindow.location.hash = hash;\n\t\t\t}\n\t\t\t// If we're configured to reflect the current slide in the\n\t\t\t// URL without pushing to history.\n\t\t\telse if( config.hash ) {\n\t\t\t\t// If the hash is empty, don't add it to the URL\n\t\t\t\tif( hash === '/' ) {\n\t\t\t\t\tthis.debouncedReplaceState( window.location.pathname + window.location.search );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.debouncedReplaceState( '#' + hash );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\n\t\t\t// anchors on pages where reveal.js is running. Removed\n\t\t\t// in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\n\t\t\t//\n\t\t\t// If history and hash are both disabled, a hash may still\n\t\t\t// be added to the URL by clicking on a href with a hash\n\t\t\t// target. Counter this by always removing the hash.\n\t\t\t// else {\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n\t\t\t// }\n\n\t\t}\n\n\t}\n\n\treplaceState( url ) {\n\n\t\twindow.history.replaceState( null, null, url );\n\t\tthis.replaceStateTimestamp = Date.now();\n\n\t}\n\n\tdebouncedReplaceState( url ) {\n\n\t\tclearTimeout( this.replaceStateTimeout );\n\n\t\tif( Date.now() - this.replaceStateTimestamp > this.MAX_REPLACE_STATE_FREQUENCY ) {\n\t\t\tthis.replaceState( url );\n\t\t}\n\t\telse {\n\t\t\tthis.replaceStateTimeout = setTimeout( () => this.replaceState( url ), this.MAX_REPLACE_STATE_FREQUENCY );\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a hash URL that will resolve to the given slide location.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\n\t */\n\tgetHash( slide ) {\n\n\t\tlet url = '/';\n\n\t\t// Attempt to create a named link based on the slide's ID\n\t\tlet s = slide || this.Reveal.getCurrentSlide();\n\t\tlet id = s ? s.getAttribute( 'id' ) : null;\n\t\tif( id ) {\n\t\t\tid = encodeURIComponent( id );\n\t\t}\n\n\t\tlet index = this.Reveal.getIndices( slide );\n\t\tif( !this.Reveal.getConfig().fragmentInURL ) {\n\t\t\tindex.f = undefined;\n\t\t}\n\n\t\t// If the current slide has an ID, use that as a named link,\n\t\t// but we don't support named links with a fragment index\n\t\tif( typeof id === 'string' && id.length ) {\n\t\t\turl = '/' + id;\n\n\t\t\t// If there is also a fragment, append that at the end\n\t\t\t// of the named link, like: #/named-link/2\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\t\t// Otherwise use the /h/v index\n\t\telse {\n\t\t\tlet hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\n\t\t\tif( index.h > 0 || index.v > 0 || index.f >= 0 ) url += index.h + hashIndexBase;\n\t\t\tif( index.v > 0 || index.f >= 0 ) url += '/' + (index.v + hashIndexBase );\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\n\t\treturn url;\n\n\t}\n\n\t/**\n\t * Handler for the window level 'hashchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tonWindowHashChange( event ) {\n\n\t\tthis.readURL();\n\n\t}\n\n}","import { queryAll } from '../utils/util.js'\nimport { isAndroid } from '../utils/device.js'\n\n/**\n * Manages our presentation controls. This includes both\n * the built-in control arrows as well as event monitoring\n * of any elements within the presentation with either of the\n * following helper classes:\n * - .navigate-up\n * - .navigate-right\n * - .navigate-down\n * - .navigate-left\n * - .navigate-next\n * - .navigate-prev\n */\nexport default class Controls {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind( this );\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind( this );\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind( this );\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind( this );\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind( this );\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tconst rtl = this.Reveal.getConfig().rtl;\n\t\tconst revealElement = this.Reveal.getRevealElement();\n\n\t\tthis.element = document.createElement( 'aside' );\n\t\tthis.element.className = 'controls';\n\t\tthis.element.innerHTML =\n\t\t\t`<button class=\"navigate-left\" aria-label=\"${ rtl ? 'next slide' : 'previous slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-right\" aria-label=\"${ rtl ? 'previous slide' : 'next slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\t// There can be multiple instances of controls throughout the page\n\t\tthis.controlsLeft = queryAll( revealElement, '.navigate-left' );\n\t\tthis.controlsRight = queryAll( revealElement, '.navigate-right' );\n\t\tthis.controlsUp = queryAll( revealElement, '.navigate-up' );\n\t\tthis.controlsDown = queryAll( revealElement, '.navigate-down' );\n\t\tthis.controlsPrev = queryAll( revealElement, '.navigate-prev' );\n\t\tthis.controlsNext = queryAll( revealElement, '.navigate-next' );\n\n\t\t// The left, right and down arrows in the standard reveal.js controls\n\t\tthis.controlsRightArrow = this.element.querySelector( '.navigate-right' );\n\t\tthis.controlsLeftArrow = this.element.querySelector( '.navigate-left' );\n\t\tthis.controlsDownArrow = this.element.querySelector( '.navigate-down' );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.controls ? 'block' : 'none';\n\n\t\tthis.element.setAttribute( 'data-controls-layout', config.controlsLayout );\n\t\tthis.element.setAttribute( 'data-controls-back-arrows', config.controlsBackArrows );\n\n\t}\n\n\tbind() {\n\n\t\t// Listen to both touch and click events, in case the device\n\t\t// supports both\n\t\tlet pointerEvents = [ 'touchstart', 'click' ];\n\n\t\t// Only support touch for Android, fixes double navigations in\n\t\t// stock browser\n\t\tif( isAndroid ) {\n\t\t\tpointerEvents = [ 'touchstart' ];\n\t\t}\n\n\t\tpointerEvents.forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.addEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.addEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.addEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.addEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.addEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.addEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\tunbind() {\n\n\t\t[ 'touchstart', 'click' ].forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.removeEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.removeEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.removeEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.removeEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.removeEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.removeEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates the state of all control/navigation arrows.\n\t */\n\tupdate() {\n\n\t\tlet routes = this.Reveal.availableRoutes();\n\n\t\t// Remove the 'enabled' class from all directions\n\t\t[...this.controlsLeft, ...this.controlsRight, ...this.controlsUp, ...this.controlsDown, ...this.controlsPrev, ...this.controlsNext].forEach( node => {\n\t\t\tnode.classList.remove( 'enabled', 'fragmented' );\n\n\t\t\t// Set 'disabled' attribute on all directions\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\n\t\t} );\n\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n\t\tif( routes.left ) this.controlsLeft.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right ) this.controlsRight.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.up ) this.controlsUp.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.down ) this.controlsDown.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Prev/next buttons\n\t\tif( routes.left || routes.up ) this.controlsPrev.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right || routes.down ) this.controlsNext.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Highlight fragment directions\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide ) {\n\n\t\t\tlet fragmentsRoutes = this.Reveal.fragments.availableRoutes();\n\n\t\t\t// Always apply fragment decorator to prev/next buttons\n\t\t\tif( fragmentsRoutes.prev ) this.controlsPrev.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\tif( fragmentsRoutes.next ) this.controlsNext.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t\t// Apply fragment decorators to directional buttons based on\n\t\t\t// what slide axis they are in\n\t\t\tif( this.Reveal.isVerticalSlide( currentSlide ) ) {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsUp.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsDown.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsLeft.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsRight.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\n\t\t}\n\n\t\tif( this.Reveal.getConfig().controlsTutorial ) {\n\n\t\t\tlet indices = this.Reveal.getIndices();\n\n\t\t\t// Highlight control arrows with an animation to ensure\n\t\t\t// that the viewer knows how to navigate\n\t\t\tif( !this.Reveal.hasNavigatedVertically() && routes.down ) {\n\t\t\t\tthis.controlsDownArrow.classList.add( 'highlight' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.controlsDownArrow.classList.remove( 'highlight' );\n\n\t\t\t\tif( this.Reveal.getConfig().rtl ) {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.left && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.right && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy() {\n\n\t\tthis.unbind();\n\t\tthis.element.remove();\n\n\t}\n\n\t/**\n\t * Event handlers for navigation control buttons.\n\t */\n\tonNavigateLeftClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.prev();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.left();\n\t\t}\n\n\t}\n\n\tonNavigateRightClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.next();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.right();\n\t\t}\n\n\t}\n\n\tonNavigateUpClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.up();\n\n\t}\n\n\tonNavigateDownClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.down();\n\n\t}\n\n\tonNavigatePrevClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.prev();\n\n\t}\n\n\tonNavigateNextClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.next();\n\n\t}\n\n\n}","/**\n * Creates a visual progress bar for the presentation.\n */\nexport default class Progress {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onProgressClicked = this.onProgressClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'progress';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\tthis.bar = document.createElement( 'span' );\n\t\tthis.element.appendChild( this.bar );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.progress ? 'block' : 'none';\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.addEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tif ( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.removeEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the progress bar to reflect the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update progress if enabled\n\t\tif( this.Reveal.getConfig().progress && this.bar ) {\n\n\t\t\tlet scale = this.Reveal.getProgress();\n\n\t\t\t// Don't fill the progress bar if there's only one slide\n\t\t\tif( this.Reveal.getTotalSlides() < 2 ) {\n\t\t\t\tscale = 0;\n\t\t\t}\n\n\t\t\tthis.bar.style.transform = 'scaleX('+ scale +')';\n\n\t\t}\n\n\t}\n\n\tgetMaxWidth() {\n\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\n\n\t}\n\n\t/**\n\t * Clicking on the progress bar results in a navigation to the\n\t * closest approximate horizontal slide using this equation:\n\t *\n\t * ( clickX / presentationWidth ) * numberOfSlides\n\t *\n\t * @param {object} event\n\t */\n\tonProgressClicked( event ) {\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\tevent.preventDefault();\n\n\t\tlet slides = this.Reveal.getSlides();\n\t\tlet slidesTotal = slides.length;\n\t\tlet slideIndex = Math.floor( ( event.clientX / this.getMaxWidth() ) * slidesTotal );\n\n\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\tslideIndex = slidesTotal - slideIndex;\n\t\t}\n\n\t\tlet targetIndices = this.Reveal.getIndices(slides[slideIndex]);\n\t\tthis.Reveal.slide( targetIndices.h, targetIndices.v );\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * Handles hiding of the pointer/cursor when inactive.\n */\nexport default class Pointer {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Throttles mouse wheel navigation\n\t\tthis.lastMouseWheelStep = 0;\n\n\t\t// Is the mouse pointer currently hidden from view\n\t\tthis.cursorHidden = false;\n\n\t\t// Timeout used to determine when the cursor is inactive\n\t\tthis.cursorInactiveTimeout = 0;\n\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind( this );\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.mouseWheel ) {\n\t\t\tdocument.addEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.addEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\t}\n\t\telse {\n\t\t\tdocument.removeEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.removeEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\t}\n\n\t\t// Auto-hide the mouse pointer when its inactive\n\t\tif( config.hideInactiveCursor ) {\n\t\t\tdocument.addEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.addEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\t\telse {\n\t\t\tthis.showCursor();\n\n\t\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Shows the mouse pointer after it has been hidden with\n\t * #hideCursor.\n\t */\n\tshowCursor() {\n\n\t\tif( this.cursorHidden ) {\n\t\t\tthis.cursorHidden = false;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = '';\n\t\t}\n\n\t}\n\n\t/**\n\t * Hides the mouse pointer when it's on top of the .reveal\n\t * container.\n\t */\n\thideCursor() {\n\n\t\tif( this.cursorHidden === false ) {\n\t\t\tthis.cursorHidden = true;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = 'none';\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.showCursor();\n\n\t\tdocument.removeEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false );\n\t\tdocument.removeEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\n\t}\n\n\t/**\n\t * Called whenever there is mouse input at the document level\n\t * to determine if the cursor is active or not.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentCursorActive( event ) {\n\n\t\tthis.showCursor();\n\n\t\tclearTimeout( this.cursorInactiveTimeout );\n\n\t\tthis.cursorInactiveTimeout = setTimeout( this.hideCursor.bind( this ), this.Reveal.getConfig().hideCursorTime );\n\n\t}\n\n\t/**\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\n\t * multiple slides.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentMouseScroll( event ) {\n\n\t\tif( Date.now() - this.lastMouseWheelStep > 1000 ) {\n\n\t\t\tthis.lastMouseWheelStep = Date.now();\n\n\t\t\tlet delta = event.detail || -event.wheelDelta;\n\t\t\tif( delta > 0 ) {\n\t\t\t\tthis.Reveal.next();\n\t\t\t}\n\t\t\telse if( delta < 0 ) {\n\t\t\t\tthis.Reveal.prev();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}","/**\n * Loads a JavaScript file from the given URL and executes it.\n *\n * @param {string} url Address of the .js file to load\n * @param {function} callback Method to invoke when the script\n * has loaded and executed\n */\nexport const loadScript = ( url, callback ) => {\n\n\tconst script = document.createElement( 'script' );\n\tscript.type = 'text/javascript';\n\tscript.async = false;\n\tscript.defer = false;\n\tscript.src = url;\n\n\tif( typeof callback === 'function' ) {\n\n\t\t// Success callback\n\t\tscript.onload = script.onreadystatechange = event => {\n\t\t\tif( event.type === 'load' || /loaded|complete/.test( script.readyState ) ) {\n\n\t\t\t\t// Kill event listeners\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\t\tcallback();\n\n\t\t\t}\n\t\t};\n\n\t\t// Error callback\n\t\tscript.onerror = err => {\n\n\t\t\t// Kill event listeners\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\tcallback( new Error( 'Failed loading script: ' + script.src + '\\n' + err ) );\n\n\t\t};\n\n\t}\n\n\t// Append the script at the end of <head>\n\tconst head = document.querySelector( 'head' );\n\thead.insertBefore( script, head.lastChild );\n\n}","import { loadScript } from '../utils/loader.js'\n\n/**\n * Manages loading and registering of reveal.js plugins.\n */\nexport default class Plugins {\n\n\tconstructor( reveal ) {\n\n\t\tthis.Reveal = reveal;\n\n\t\t// Flags our current state (idle -> loading -> loaded)\n\t\tthis.state = 'idle';\n\n\t\t// An id:instance map of currently registered plugins\n\t\tthis.registeredPlugins = {};\n\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n\t/**\n\t * Loads reveal.js dependencies, registers and\n\t * initializes plugins.\n\t *\n\t * Plugins are direct references to a reveal.js plugin\n\t * object that we register and initialize after any\n\t * synchronous dependencies have loaded.\n\t *\n\t * Dependencies are defined via the 'dependencies' config\n\t * option and will be loaded prior to starting reveal.js.\n\t * Some dependencies may have an 'async' flag, if so they\n\t * will load after reveal.js has been started up.\n\t */\n\tload( plugins, dependencies ) {\n\n\t\tthis.state = 'loading';\n\n\t\tplugins.forEach( this.registerPlugin.bind( this ) );\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet scripts = [],\n\t\t\t\tscriptsToLoad = 0;\n\n\t\t\tdependencies.forEach( s => {\n\t\t\t\t// Load if there's no condition or the condition is truthy\n\t\t\t\tif( !s.condition || s.condition() ) {\n\t\t\t\t\tif( s.async ) {\n\t\t\t\t\t\tthis.asyncDependencies.push( s );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tscripts.push( s );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif( scripts.length ) {\n\t\t\t\tscriptsToLoad = scripts.length;\n\n\t\t\t\tconst scriptLoadedCallback = (s) => {\n\t\t\t\t\tif( s && typeof s.callback === 'function' ) s.callback();\n\n\t\t\t\t\tif( --scriptsToLoad === 0 ) {\n\t\t\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Load synchronous scripts\n\t\t\t\tscripts.forEach( s => {\n\t\t\t\t\tif( typeof s.id === 'string' ) {\n\t\t\t\t\t\tthis.registerPlugin( s );\n\t\t\t\t\t\tscriptLoadedCallback( s );\n\t\t\t\t\t}\n\t\t\t\t\telse if( typeof s.src === 'string' ) {\n\t\t\t\t\t\tloadScript( s.src, () => scriptLoadedCallback(s) );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconsole.warn( 'Unrecognized plugin format', s );\n\t\t\t\t\t\tscriptLoadedCallback();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Initializes our plugins and waits for them to be ready\n\t * before proceeding.\n\t */\n\tinitPlugins() {\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet pluginValues = Object.values( this.registeredPlugins );\n\t\t\tlet pluginsToInitialize = pluginValues.length;\n\n\t\t\t// If there are no plugins, skip this step\n\t\t\tif( pluginsToInitialize === 0 ) {\n\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t}\n\t\t\t// ... otherwise initialize plugins\n\t\t\telse {\n\n\t\t\t\tlet initNextPlugin;\n\n\t\t\t\tlet afterPlugInitialized = () => {\n\t\t\t\t\tif( --pluginsToInitialize === 0 ) {\n\t\t\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tinitNextPlugin();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tlet i = 0;\n\n\t\t\t\t// Initialize plugins serially\n\t\t\t\tinitNextPlugin = () => {\n\n\t\t\t\t\tlet plugin = pluginValues[i++];\n\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\n\t\t\t\t\tif( typeof plugin.init === 'function' ) {\n\t\t\t\t\t\tlet promise = plugin.init( this.Reveal );\n\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\n\t\t\t\t\t\tif( promise && typeof promise.then === 'function' ) {\n\t\t\t\t\t\t\tpromise.then( afterPlugInitialized );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tinitNextPlugin();\n\n\t\t\t}\n\n\t\t} )\n\n\t}\n\n\t/**\n\t * Loads all async reveal.js dependencies.\n\t */\n\tloadAsync() {\n\n\t\tthis.state = 'loaded';\n\n\t\tif( this.asyncDependencies.length ) {\n\t\t\tthis.asyncDependencies.forEach( s => {\n\t\t\t\tloadScript( s.src, s.callback );\n\t\t\t} );\n\t\t}\n\n\t\treturn Promise.resolve();\n\n\t}\n\n\t/**\n\t * Registers a new plugin with this reveal.js instance.\n\t *\n\t * reveal.js waits for all registered plugins to initialize\n\t * before considering itself ready, as long as the plugin\n\t * is registered before calling `Reveal.initialize()`.\n\t */\n\tregisterPlugin( plugin ) {\n\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\n\t\t// plugins work with reveal.js 4.0.0\n\t\tif( arguments.length === 2 && typeof arguments[0] === 'string' ) {\n\t\t\tplugin = arguments[1];\n\t\t\tplugin.id = arguments[0];\n\t\t}\n\t\t// Plugin can optionally be a function which we call\n\t\t// to create an instance of the plugin\n\t\telse if( typeof plugin === 'function' ) {\n\t\t\tplugin = plugin();\n\t\t}\n\n\t\tlet id = plugin.id;\n\n\t\tif( typeof id !== 'string' ) {\n\t\t\tconsole.warn( 'Unrecognized plugin format; can\\'t find plugin.id', plugin );\n\t\t}\n\t\telse if( this.registeredPlugins[id] === undefined ) {\n\t\t\tthis.registeredPlugins[id] = plugin;\n\n\t\t\t// If a plugin is registered after reveal.js is loaded,\n\t\t\t// initialize it right away\n\t\t\tif( this.state === 'loaded' && typeof plugin.init === 'function' ) {\n\t\t\t\tplugin.init( this.Reveal );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconsole.warn( 'reveal.js: \"'+ id +'\" plugin has already been registered' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if a specific plugin has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\thasPlugin( id ) {\n\n\t\treturn !!this.registeredPlugins[id];\n\n\t}\n\n\t/**\n\t * Returns the specific plugin instance, if a plugin\n\t * with the given ID has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\tgetPlugin( id ) {\n\n\t\treturn this.registeredPlugins[id];\n\n\t}\n\n\tgetRegisteredPlugins() {\n\n\t\treturn this.registeredPlugins;\n\n\t}\n\n\tdestroy() {\n\n\t\tObject.values( this.registeredPlugins ).forEach( plugin => {\n\t\t\tif( typeof plugin.destroy === 'function' ) {\n\t\t\t\tplugin.destroy();\n\t\t\t}\n\t\t} );\n\n\t\tthis.registeredPlugins = {};\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n}\n","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { queryAll, createStyleSheet } from '../utils/util.js'\n\n/**\n * Setups up our presentation for printing/exporting to PDF.\n */\nexport default class Print {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Configures the presentation for printing to a static\n\t * PDF.\n\t */\n\tasync setupPDF() {\n\n\t\tconst config = this.Reveal.getConfig();\n\t\tconst slides = queryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR )\n\n\t\t// Compute slide numbers now, before we start duplicating slides\n\t\tconst injectPageNumbers = config.slideNumber && /all|print/i.test( config.showSlideNumber );\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\n\t\t// Dimensions of the PDF pages\n\t\tconst pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\n\n\t\t// Dimensions of slides within the pages\n\t\tconst slideWidth = slideSize.width,\n\t\t\tslideHeight = slideSize.height;\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\t// Let the browser know what page size we want to print\n\t\tcreateStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\n\n\t\t// Limit the size of certain elements to the dimensions of the slide\n\t\tcreateStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\n\n\t\tdocument.documentElement.classList.add( 'print-pdf' );\n\t\tdocument.body.style.width = pageWidth + 'px';\n\t\tdocument.body.style.height = pageHeight + 'px';\n\n\t\tconst viewportElement = document.querySelector( '.reveal-viewport' );\n\t\tlet presentationBackground;\n\t\tif( viewportElement ) {\n\t\t\tconst viewportStyles = window.getComputedStyle( viewportElement );\n\t\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\t\tpresentationBackground = viewportStyles.background;\n\t\t\t}\n\t\t}\n\n\t\t// Make sure stretch elements fit on slide\n\t\tawait new Promise( requestAnimationFrame );\n\t\tthis.Reveal.layoutSlideContents( slideWidth, slideHeight );\n\n\t\t// Batch scrollHeight access to prevent layout thrashing\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tconst slideScrollHeights = slides.map( slide => slide.scrollHeight );\n\n\t\tconst pages = [];\n\t\tconst pageContainer = slides[0].parentNode;\n\t\tlet slideNumber = 1;\n\n\t\t// Slide and slide background layout\n\t\tslides.forEach( function( slide, index ) {\n\n\t\t\t// Vertical stacks are not centred since their section\n\t\t\t// children will be\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\n\t\t\t\tlet left = ( pageWidth - slideWidth ) / 2;\n\t\t\t\tlet top = ( pageHeight - slideHeight ) / 2;\n\n\t\t\t\tconst contentHeight = slideScrollHeights[ index ];\n\t\t\t\tlet numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\n\n\t\t\t\t// Adhere to configured pages per slide limit\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\n\n\t\t\t\t// Center slides vertically\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\n\t\t\t\t}\n\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpages.push( page );\n\n\t\t\t\tpage.className = 'pdf-page';\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\n\n\t\t\t\t// Copy the presentation-wide background to each individual\n\t\t\t\t// page when printing\n\t\t\t\tif( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tpage.appendChild( slide );\n\n\t\t\t\t// Position the slide inside of the page\n\t\t\t\tslide.style.left = left + 'px';\n\t\t\t\tslide.style.top = top + 'px';\n\t\t\t\tslide.style.width = slideWidth + 'px';\n\n\t\t\t\tthis.Reveal.slideContent.layout( slide );\n\n\t\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t\t}\n\n\t\t\t\t// Inject notes if `showNotes` is enabled\n\t\t\t\tif( config.showNotes ) {\n\n\t\t\t\t\t// Are there notes for this slide?\n\t\t\t\t\tconst notes = this.Reveal.getSlideNotes( slide );\n\t\t\t\t\tif( notes ) {\n\n\t\t\t\t\t\tconst notesSpacing = 8;\n\t\t\t\t\t\tconst notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\n\t\t\t\t\t\tconst notesElement = document.createElement( 'div' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\n\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\n\t\t\t\t\t\t\tpages.push( notesElement );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Inject page numbers if `slideNumbers` are enabled\n\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\tconst numberElement = document.createElement( 'div' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\n\t\t\t\t\tnumberElement.innerHTML = slideNumber++;\n\t\t\t\t\tpage.appendChild( numberElement );\n\t\t\t\t}\n\n\t\t\t\t// Copy page and show fragments one after another\n\t\t\t\tif( config.pdfSeparateFragments ) {\n\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\n\t\t\t\t\t// are part of the same group.\n\t\t\t\t\tconst fragmentGroups = this.Reveal.fragments.sort( page.querySelectorAll( '.fragment' ), true );\n\n\t\t\t\t\tlet previousFragmentStep;\n\n\t\t\t\t\tfragmentGroups.forEach( function( fragments, index ) {\n\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\n\t\t\t\t\t\tif( previousFragmentStep ) {\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach( function( fragment ) {\n\t\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Show the fragments for the current index\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.add( 'visible', 'current-fragment' );\n\t\t\t\t\t\t}, this );\n\n\t\t\t\t\t\t// Create a separate page for the current fragment state\n\t\t\t\t\t\tconst clonedPage = page.cloneNode( true );\n\n\t\t\t\t\t\t// Inject unique page numbers for fragments\n\t\t\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\t\t\tconst numberElement = clonedPage.querySelector( '.slide-number-pdf' );\n\t\t\t\t\t\t\tconst fragmentNumber = index + 1;\n\t\t\t\t\t\t\tnumberElement.innerHTML += '.' + fragmentNumber;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpages.push( clonedPage );\n\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\n\n\t\t\t\t\t}, this );\n\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\t\t\t\t// Show all fragments\n\t\t\t\telse {\n\t\t\t\t\tqueryAll( page, '.fragment:not(.fade-out)' ).forEach( function( fragment ) {\n\t\t\t\t\t\tfragment.classList.add( 'visible' );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tpages.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\n\n\t\t// Notify subscribers that the PDF layout is good to go\n\t\tthis.Reveal.dispatchEvent({ type: 'pdf-ready' });\n\n\t}\n\n\t/**\n\t * Checks if this instance is being used to print a PDF.\n\t */\n\tisPrintingPDF() {\n\n\t\treturn ( /print-pdf/gi ).test( window.location.search );\n\n\t}\n\n}\n","import { isAndroid } from '../utils/device.js'\nimport { matches } from '../utils/util.js'\n\nconst SWIPE_THRESHOLD = 40;\n\n/**\n * Controls all touch interactions and navigations for\n * a presentation.\n */\nexport default class Touch {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Holds information about the currently ongoing touch interaction\n\t\tthis.touchStartX = 0;\n\t\tthis.touchStartY = 0;\n\t\tthis.touchStartCount = 0;\n\t\tthis.touchCaptured = false;\n\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.onPointerMove = this.onPointerMove.bind( this );\n\t\tthis.onPointerUp = this.onPointerUp.bind( this );\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\n\t\tthis.onTouchMove = this.onTouchMove.bind( this );\n\t\tthis.onTouchEnd = this.onTouchEnd.bind( this );\n\n\t}\n\n\t/**\n\t *\n\t */\n\tbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\tif( 'onpointerdown' in window ) {\n\t\t\t// Use W3C pointer events\n\t\t\trevealElement.addEventListener( 'pointerdown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'pointermove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'pointerup', this.onPointerUp, false );\n\t\t}\n\t\telse if( window.navigator.msPointerEnabled ) {\n\t\t\t// IE 10 uses prefixed version of pointer events\n\t\t\trevealElement.addEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'MSPointerUp', this.onPointerUp, false );\n\t\t}\n\t\telse {\n\t\t\t// Fall back to touch events\n\t\t\trevealElement.addEventListener( 'touchstart', this.onTouchStart, false );\n\t\t\trevealElement.addEventListener( 'touchmove', this.onTouchMove, false );\n\t\t\trevealElement.addEventListener( 'touchend', this.onTouchEnd, false );\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t */\n\tunbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\trevealElement.removeEventListener( 'pointerdown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'pointermove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'pointerup', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'MSPointerUp', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'touchstart', this.onTouchStart, false );\n\t\trevealElement.removeEventListener( 'touchmove', this.onTouchMove, false );\n\t\trevealElement.removeEventListener( 'touchend', this.onTouchEnd, false );\n\n\t}\n\n\t/**\n\t * Checks if the target element prevents the triggering of\n\t * swipe navigation.\n\t */\n\tisSwipePrevented( target ) {\n\n\t\t// Prevent accidental swipes when scrubbing timelines\n\t\tif( matches( target, 'video, audio' ) ) return true;\n\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\n\t\t\ttarget = target.parentNode;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchstart' event, enables support for\n\t * swipe and pinch gestures.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchStart( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tthis.touchStartX = event.touches[0].clientX;\n\t\tthis.touchStartY = event.touches[0].clientY;\n\t\tthis.touchStartCount = event.touches.length;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchmove' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchMove( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// Each touch should only trigger one action\n\t\tif( !this.touchCaptured ) {\n\t\t\tthis.Reveal.onUserInput( event );\n\n\t\t\tlet currentX = event.touches[0].clientX;\n\t\t\tlet currentY = event.touches[0].clientY;\n\n\t\t\t// There was only one touch point, look for a swipe\n\t\t\tif( event.touches.length === 1 && this.touchStartCount !== 2 ) {\n\n\t\t\t\tlet availableRoutes = this.Reveal.availableRoutes({ includeFragments: true });\n\n\t\t\t\tlet deltaX = currentX - this.touchStartX,\n\t\t\t\t\tdeltaY = currentY - this.touchStartY;\n\n\t\t\t\tif( deltaX > SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.left();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaX < -SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.right();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY > SWIPE_THRESHOLD && availableRoutes.up ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.up();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY < -SWIPE_THRESHOLD && availableRoutes.down ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.down();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we're embedded, only block touch events if they have\n\t\t\t\t// triggered an action\n\t\t\t\tif( config.embedded ) {\n\t\t\t\t\tif( this.touchCaptured || this.Reveal.isVerticalSlide() ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\n\t\t\t\t// around of the viewport in iOS\n\t\t\t\telse {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t// There's a bug with swiping on some Android devices unless\n\t\t// the default action is always prevented\n\t\telse if( isAndroid ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the 'touchend' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchEnd( event ) {\n\n\t\tthis.touchCaptured = false;\n\n\t}\n\n\t/**\n\t * Convert pointer down to touch start.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerDown( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchStart( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer move to touch move.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerMove( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchMove( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer up to touch end.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerUp( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchEnd( event );\n\t\t}\n\n\t}\n\n}","import { closest } from '../utils/util.js'\n\n/**\n * Manages focus when a presentation is embedded. This\n * helps us only capture keyboard from the presentation\n * a user is currently interacting with in a page where\n * multiple presentations are embedded.\n */\n\nconst STATE_FOCUS = 'focus';\nconst STATE_BLUR = 'blur';\n\nexport default class Focus {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind( this );\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.embedded ) {\n\t\t\tthis.blur();\n\t\t}\n\t\telse {\n\t\t\tthis.focus();\n\t\t\tthis.unbind();\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().embedded ) {\n\t\t\tthis.Reveal.getRevealElement().addEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tthis.Reveal.getRevealElement().removeEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\n\t}\n\n\tfocus() {\n\n\t\tif( this.state !== STATE_FOCUS ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'focused' );\n\t\t\tdocument.addEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_FOCUS;\n\n\t}\n\n\tblur() {\n\n\t\tif( this.state !== STATE_BLUR ) {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\t\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_BLUR;\n\n\t}\n\n\tisFocused() {\n\n\t\treturn this.state === STATE_FOCUS;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\n\t}\n\n\tonRevealPointerDown( event ) {\n\n\t\tthis.focus();\n\n\t}\n\n\tonDocumentPointerDown( event ) {\n\n\t\tlet revealElement = closest( event.target, '.reveal' );\n\t\tif( !revealElement || revealElement !== this.Reveal.getRevealElement() ) {\n\t\t\tthis.blur();\n\t\t}\n\n\t}\n\n}","/**\n * Handles the showing of speaker notes\n */\nexport default class Notes {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'speaker-notes';\n\t\tthis.element.setAttribute( 'data-prevent-swipe', '' );\n\t\tthis.element.setAttribute( 'tabindex', '0' );\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.showNotes ) {\n\t\t\tthis.element.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Pick up notes from the current slide and display them\n\t * to the viewer.\n\t *\n\t * @see {@link config.showNotes}\n\t */\n\tupdate() {\n\n\t\tif( this.Reveal.getConfig().showNotes && this.element && this.Reveal.getCurrentSlide() && !this.Reveal.print.isPrintingPDF() ) {\n\n\t\t\tthis.element.innerHTML = this.getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the visibility of the speaker notes sidebar that\n\t * is used to share annotated slides. The notes sidebar is\n\t * only visible if showNotes is true and there are notes on\n\t * one or more slides in the deck.\n\t */\n\tupdateVisibility() {\n\n\t\tif( this.Reveal.getConfig().showNotes && this.hasNotes() && !this.Reveal.print.isPrintingPDF() ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'show-notes' );\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'show-notes' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if there are speaker notes for ANY slide in the\n\t * presentation.\n\t */\n\thasNotes() {\n\n\t\treturn this.Reveal.getSlidesElement().querySelectorAll( '[data-notes], aside.notes' ).length > 0;\n\n\t}\n\n\t/**\n\t * Checks if this presentation is running inside of the\n\t * speaker notes window.\n\t *\n\t * @return {boolean}\n\t */\n\tisSpeakerNotesWindow() {\n\n\t\treturn !!window.location.search.match( /receiver/gi );\n\n\t}\n\n\t/**\n\t * Retrieves the speaker notes from a slide. Notes can be\n\t * defined in two ways:\n\t * 1. As a data-notes attribute on the slide <section>\n\t * 2. With <aside class=\"notes\"> elements inside the slide\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {(string|null)}\n\t */\n\tgetSlideNotes( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\t// Notes can be specified via the data-notes attribute...\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\n\t\t\treturn slide.getAttribute( 'data-notes' );\n\t\t}\n\n\t\t// ... or using <aside class=\"notes\"> elements\n\t\tlet notesElements = slide.querySelectorAll( 'aside.notes' );\n\t\tif( notesElements ) {\n\t\t\treturn Array.from(notesElements).map( notesElement => notesElement.innerHTML ).join( '\\n' );\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * UI component that lets the use control auto-slide\n * playback via play/pause.\n */\nexport default class Playback {\n\n\t/**\n\t * @param {HTMLElement} container The component will append\n\t * itself to this\n\t * @param {function} progressCheck A method which will be\n\t * called frequently to get the current playback progress on\n\t * a range of 0-1\n\t */\n\tconstructor( container, progressCheck ) {\n\n\t\t// Cosmetics\n\t\tthis.diameter = 100;\n\t\tthis.diameter2 = this.diameter/2;\n\t\tthis.thickness = 6;\n\n\t\t// Flags if we are currently playing\n\t\tthis.playing = false;\n\n\t\t// Current progress on a 0-1 range\n\t\tthis.progress = 0;\n\n\t\t// Used to loop the animation smoothly\n\t\tthis.progressOffset = 1;\n\n\t\tthis.container = container;\n\t\tthis.progressCheck = progressCheck;\n\n\t\tthis.canvas = document.createElement( 'canvas' );\n\t\tthis.canvas.className = 'playback';\n\t\tthis.canvas.width = this.diameter;\n\t\tthis.canvas.height = this.diameter;\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\n\t\tthis.context = this.canvas.getContext( '2d' );\n\n\t\tthis.container.appendChild( this.canvas );\n\n\t\tthis.render();\n\n\t}\n\n\tsetPlaying( value ) {\n\n\t\tconst wasPlaying = this.playing;\n\n\t\tthis.playing = value;\n\n\t\t// Start repainting if we weren't already\n\t\tif( !wasPlaying && this.playing ) {\n\t\t\tthis.animate();\n\t\t}\n\t\telse {\n\t\t\tthis.render();\n\t\t}\n\n\t}\n\n\tanimate() {\n\n\t\tconst progressBefore = this.progress;\n\n\t\tthis.progress = this.progressCheck();\n\n\t\t// When we loop, offset the progress so that it eases\n\t\t// smoothly rather than immediately resetting\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\n\t\t\tthis.progressOffset = this.progress;\n\t\t}\n\n\t\tthis.render();\n\n\t\tif( this.playing ) {\n\t\t\trequestAnimationFrame( this.animate.bind( this ) );\n\t\t}\n\n\t}\n\n\t/**\n\t * Renders the current progress and playback state.\n\t */\n\trender() {\n\n\t\tlet progress = this.playing ? this.progress : 0,\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\n\t\t\tx = this.diameter2,\n\t\t\ty = this.diameter2,\n\t\t\ticonSize = 28;\n\n\t\t// Ease towards 1\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\n\n\t\tconst endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\n\t\tconst startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\n\n\t\tthis.context.save();\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\n\n\t\t// Solid background color\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\n\t\tthis.context.fill();\n\n\t\t// Draw progress track\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\n\t\tthis.context.lineWidth = this.thickness;\n\t\tthis.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\n\t\tthis.context.stroke();\n\n\t\tif( this.playing ) {\n\t\t\t// Draw progress on top of track\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\n\t\t\tthis.context.lineWidth = this.thickness;\n\t\t\tthis.context.strokeStyle = '#fff';\n\t\t\tthis.context.stroke();\n\t\t}\n\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\n\n\t\t// Draw play/pause icons\n\t\tif( this.playing ) {\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\n\t\t}\n\t\telse {\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.translate( 4, 0 );\n\t\t\tthis.context.moveTo( 0, 0 );\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\n\t\t\tthis.context.lineTo( 0, iconSize );\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fill();\n\t\t}\n\n\t\tthis.context.restore();\n\n\t}\n\n\ton( type, listener ) {\n\t\tthis.canvas.addEventListener( type, listener, false );\n\t}\n\n\toff( type, listener ) {\n\t\tthis.canvas.removeEventListener( type, listener, false );\n\t}\n\n\tdestroy() {\n\n\t\tthis.playing = false;\n\n\t\tif( this.canvas.parentNode ) {\n\t\t\tthis.container.removeChild( this.canvas );\n\t\t}\n\n\t}\n\n}","/**\n * The default reveal.js config object.\n */\nexport default {\n\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\n\t// when the presentation is scaled to fit different resolutions\n\twidth: 960,\n\theight: 700,\n\n\t// Factor of the display size that should remain empty around the content\n\tmargin: 0.04,\n\n\t// Bounds for smallest/largest possible scale to apply to content\n\tminScale: 0.2,\n\tmaxScale: 2.0,\n\n\t// Display presentation control arrows\n\tcontrols: true,\n\n\t// Help the user learn the controls by providing hints, for example by\n\t// bouncing the down arrow when they first encounter a vertical slide\n\tcontrolsTutorial: true,\n\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\n\tcontrolsLayout: 'bottom-right',\n\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n\t// or \"visible\"\n\tcontrolsBackArrows: 'faded',\n\n\t// Display a presentation progress bar\n\tprogress: true,\n\n\t// Display the page number of the current slide\n\t// - true:    Show slide number\n\t// - false:   Hide slide number\n\t//\n\t// Can optionally be set as a string that specifies the number formatting:\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\n\t// - \"h/v\":\t  Horizontal / vertical slide number\n\t// - \"c\":\t  Flattened slide number\n\t// - \"c/t\":\t  Flattened slide number / total slides\n\t//\n\t// Alternatively, you can provide a function that returns the slide\n\t// number for the current slide. The function should take in a slide\n\t// object and return an array with one string [slideNumber] or\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\n\tslideNumber: false,\n\n\t// Can be used to limit the contexts in which the slide number appears\n\t// - \"all\":      Always show the slide number\n\t// - \"print\":    Only when printing to PDF\n\t// - \"speaker\":  Only in the speaker view\n\tshowSlideNumber: 'all',\n\n\t// Use 1 based indexing for # links to match slide number (default is zero\n\t// based)\n\thashOneBasedIndex: false,\n\n\t// Add the current slide number to the URL hash so that reloading the\n\t// page/copying the URL will return you to the same slide\n\thash: false,\n\n\t// Flags if we should monitor the hash and change slides accordingly\n\trespondToHashChanges: true,\n\n\t// Enable support for jump-to-slide navigation shortcuts\n\tjumpToSlide: true,\n\n\t// Push each slide change to the browser history.  Implies `hash: true`\n\thistory: false,\n\n\t// Enable keyboard shortcuts for navigation\n\tkeyboard: true,\n\n\t// Optional function that blocks keyboard events when retuning false\n\t//\n\t// If you set this to 'focused', we will only capture keyboard events\n\t// for embedded decks when they are in focus\n\tkeyboardCondition: null,\n\n\t// Disables the default reveal.js slide layout (scaling and centering)\n\t// so that you can use custom CSS layout\n\tdisableLayout: false,\n\n\t// Enable the slide overview mode\n\toverview: true,\n\n\t// Vertical centering of slides\n\tcenter: true,\n\n\t// Enables touch navigation on devices with touch input\n\ttouch: true,\n\n\t// Loop the presentation\n\tloop: false,\n\n\t// Change the presentation direction to be RTL\n\trtl: false,\n\n\t// Changes the behavior of our navigation directions.\n\t//\n\t// \"default\"\n\t// Left/right arrow keys step between horizontal slides, up/down\n\t// arrow keys step between vertical slides. Space key steps through\n\t// all slides (both horizontal and vertical).\n\t//\n\t// \"linear\"\n\t// Removes the up/down arrows. Left/right arrows step through all\n\t// slides (both horizontal and vertical).\n\t//\n\t// \"grid\"\n\t// When this is enabled, stepping left/right from a vertical stack\n\t// to an adjacent vertical stack will land you at the same vertical\n\t// index.\n\t//\n\t// Consider a deck with six slides ordered in two vertical stacks:\n\t// 1.1    2.1\n\t// 1.2    2.2\n\t// 1.3    2.3\n\t//\n\t// If you're on slide 1.3 and navigate right, you will normally move\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\n\t// from 1.3 -> 2.3.\n\tnavigationMode: 'default',\n\n\t// Randomizes the order of slides each time the presentation loads\n\tshuffle: false,\n\n\t// Turns fragments on and off globally\n\tfragments: true,\n\n\t// Flags whether to include the current fragment in the URL,\n\t// so that reloading brings you to the same fragment position\n\tfragmentInURL: true,\n\n\t// Flags if the presentation is running in an embedded mode,\n\t// i.e. contained within a limited portion of the screen\n\tembedded: false,\n\n\t// Flags if we should show a help overlay when the question-mark\n\t// key is pressed\n\thelp: true,\n\n\t// Flags if it should be possible to pause the presentation (blackout)\n\tpause: true,\n\n\t// Flags if speaker notes should be visible to all viewers\n\tshowNotes: false,\n\n\t// Flags if slides with data-visibility=\"hidden\" should be kep visible\n\tshowHiddenSlides: false,\n\n\t// Global override for autoplaying embedded media (video/audio/iframe)\n\t// - null:   Media will only autoplay if data-autoplay is present\n\t// - true:   All media will autoplay, regardless of individual setting\n\t// - false:  No media will autoplay, regardless of individual setting\n\tautoPlayMedia: null,\n\n\t// Global override for preloading lazy-loaded iframes\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\n\t// - false:  All iframes with data-src will be loaded only when visible\n\tpreloadIframes: null,\n\n\t// Can be used to globally disable auto-animation\n\tautoAnimate: true,\n\n\t// Optionally provide a custom element matcher that will be\n\t// used to dictate which elements we can animate between.\n\tautoAnimateMatcher: null,\n\n\t// Default settings for our auto-animate transitions, can be\n\t// overridden per-slide or per-element via data arguments\n\tautoAnimateEasing: 'ease',\n\tautoAnimateDuration: 1.0,\n\tautoAnimateUnmatched: true,\n\n\t// CSS properties that can be auto-animated. Position & scale\n\t// is matched separately so there's no need to include styles\n\t// like top/right/bottom/left, width/height or margin.\n\tautoAnimateStyles: [\n\t\t'opacity',\n\t\t'color',\n\t\t'background-color',\n\t\t'padding',\n\t\t'font-size',\n\t\t'line-height',\n\t\t'letter-spacing',\n\t\t'border-width',\n\t\t'border-color',\n\t\t'border-radius',\n\t\t'outline',\n\t\t'outline-offset'\n\t],\n\n\t// Controls automatic progression to the next slide\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\n\t//           is present on the current slide or fragment\n\t// - 1+:     All slides will progress automatically at the given interval\n\t// - false:  No auto-sliding, even if data-autoslide is present\n\tautoSlide: 0,\n\n\t// Stop auto-sliding after user input\n\tautoSlideStoppable: true,\n\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\n\tautoSlideMethod: null,\n\n\t// Specify the average time in seconds that you think you will spend\n\t// presenting each slide. This is used to show a pacing timer in the\n\t// speaker view\n\tdefaultTiming: null,\n\n\t// Enable slide navigation via mouse wheel\n\tmouseWheel: false,\n\n\t// Opens links in an iframe preview overlay\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n\t// individually\n\tpreviewLinks: false,\n\n\t// Exposes the reveal.js API through window.postMessage\n\tpostMessage: true,\n\n\t// Dispatches all reveal.js events to the parent window through postMessage\n\tpostMessageEvents: false,\n\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\n\tfocusBodyOnPageVisibilityChange: true,\n\n\t// Transition style\n\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\n\n\t// Transition speed\n\ttransitionSpeed: 'default', // default/fast/slow\n\n\t// Transition style for full page slide backgrounds\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n\t// Parallax background image\n\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\n\n\t// Parallax background size\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\n\n\t// Parallax background repeat\n\tparallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\n\n\t// Parallax background position\n\tparallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\n\n\t// Amount of pixels to move the parallax background per slide step\n\tparallaxBackgroundHorizontal: null,\n\tparallaxBackgroundVertical: null,\n\n\t// The maximum number of pages a single slide can expand onto when printing\n\t// to PDF, unlimited by default\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n\n\t// Prints each fragment on a separate slide\n\tpdfSeparateFragments: true,\n\n\t// Offset used to reduce the height of content within exported PDF pages.\n\t// This exists to account for environment differences based on how you\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n\t// on precisely the total height of the document whereas in-browser\n\t// printing has to end one pixel before.\n\tpdfPageHeightOffset: -1,\n\n\t// Number of slides away from the current that are visible\n\tviewDistance: 3,\n\n\t// Number of slides away from the current that are visible on mobile\n\t// devices. It is advisable to set this to a lower number than\n\t// viewDistance in order to save resources.\n\tmobileViewDistance: 2,\n\n\t// The display mode that will be used to show slides\n\tdisplay: 'block',\n\n\t// Hide cursor if inactive\n\thideInactiveCursor: true,\n\n\t// Time before the cursor is hidden (in ms)\n\thideCursorTime: 5000,\n\n\t// Should we automatmically sort and set indices for fragments\n\t// at each sync? (See Reveal.sync)\n\tsortFragmentsOnSync: true,\n\n\t// Script dependencies to load\n\tdependencies: [],\n\n\t// Plugin objects to register and use for this presentation\n\tplugins: []\n\n}","import SlideContent from './controllers/slidecontent.js'\nimport SlideNumber from './controllers/slidenumber.js'\nimport JumpToSlide from './controllers/jumptoslide.js'\nimport Backgrounds from './controllers/backgrounds.js'\nimport AutoAnimate from './controllers/autoanimate.js'\nimport Fragments from './controllers/fragments.js'\nimport Overview from './controllers/overview.js'\nimport Keyboard from './controllers/keyboard.js'\nimport Location from './controllers/location.js'\nimport Controls from './controllers/controls.js'\nimport Progress from './controllers/progress.js'\nimport Pointer from './controllers/pointer.js'\nimport Plugins from './controllers/plugins.js'\nimport Print from './controllers/print.js'\nimport Touch from './controllers/touch.js'\nimport Focus from './controllers/focus.js'\nimport Notes from './controllers/notes.js'\nimport Playback from './components/playback.js'\nimport defaultConfig from './config.js'\nimport * as Util from './utils/util.js'\nimport * as Device from './utils/device.js'\nimport {\n\tSLIDES_SELECTOR,\n\tHORIZONTAL_SLIDES_SELECTOR,\n\tVERTICAL_SLIDES_SELECTOR,\n\tPOST_MESSAGE_METHOD_BLACKLIST\n} from './utils/constants.js'\n\n// The reveal.js version\nexport const VERSION = '4.6.0';\n\n/**\n * reveal.js\n * https://revealjs.com\n * MIT licensed\n *\n * Copyright (C) 2011-2022 Hakim El Hattab, https://hakim.se\n */\nexport default function( revealElement, options ) {\n\n\t// Support initialization with no args, one arg\n\t// [options] or two args [revealElement, options]\n\tif( arguments.length < 2 ) {\n\t\toptions = arguments[0];\n\t\trevealElement = document.querySelector( '.reveal' );\n\t}\n\n\tconst Reveal = {};\n\n\t// Configuration defaults, can be overridden at initialization time\n\tlet config = {},\n\n\t\t// Flags if reveal.js is loaded (has dispatched the 'ready' event)\n\t\tready = false,\n\n\t\t// The horizontal and vertical index of the currently active slide\n\t\tindexh,\n\t\tindexv,\n\n\t\t// The previous and current slide HTML elements\n\t\tpreviousSlide,\n\t\tcurrentSlide,\n\n\t\t// Remember which directions that the user has navigated towards\n\t\tnavigationHistory = {\n\t\t\thasNavigatedHorizontally: false,\n\t\t\thasNavigatedVertically: false\n\t\t},\n\n\t\t// Slides may have a data-state attribute which we pick up and apply\n\t\t// as a class to the body. This list contains the combined state of\n\t\t// all current slides.\n\t\tstate = [],\n\n\t\t// The current scale of the presentation (see width/height config)\n\t\tscale = 1,\n\n\t\t// CSS transform that is currently applied to the slides container,\n\t\t// split into two groups\n\t\tslidesTransform = { layout: '', overview: '' },\n\n\t\t// Cached references to DOM elements\n\t\tdom = {},\n\n\t\t// Flags if the interaction event listeners are bound\n\t\teventsAreBound = false,\n\n\t\t// The current slide transition state; idle or running\n\t\ttransition = 'idle',\n\n\t\t// The current auto-slide duration\n\t\tautoSlide = 0,\n\n\t\t// Auto slide properties\n\t\tautoSlidePlayer,\n\t\tautoSlideTimeout = 0,\n\t\tautoSlideStartTime = -1,\n\t\tautoSlidePaused = false,\n\n\t\t// Controllers for different aspects of our presentation. They're\n\t\t// all given direct references to this Reveal instance since there\n\t\t// may be multiple presentations running in parallel.\n\t\tslideContent = new SlideContent( Reveal ),\n\t\tslideNumber = new SlideNumber( Reveal ),\n\t\tjumpToSlide = new JumpToSlide( Reveal ),\n\t\tautoAnimate = new AutoAnimate( Reveal ),\n\t\tbackgrounds = new Backgrounds( Reveal ),\n\t\tfragments = new Fragments( Reveal ),\n\t\toverview = new Overview( Reveal ),\n\t\tkeyboard = new Keyboard( Reveal ),\n\t\tlocation = new Location( Reveal ),\n\t\tcontrols = new Controls( Reveal ),\n\t\tprogress = new Progress( Reveal ),\n\t\tpointer = new Pointer( Reveal ),\n\t\tplugins = new Plugins( Reveal ),\n\t\tprint = new Print( Reveal ),\n\t\tfocus = new Focus( Reveal ),\n\t\ttouch = new Touch( Reveal ),\n\t\tnotes = new Notes( Reveal );\n\n\t/**\n\t * Starts up the presentation.\n\t */\n\tfunction initialize( initOptions ) {\n\n\t\tif( !revealElement ) throw 'Unable to find presentation root (<div class=\"reveal\">).';\n\n\t\t// Cache references to key DOM elements\n\t\tdom.wrapper = revealElement;\n\t\tdom.slides = revealElement.querySelector( '.slides' );\n\n\t\tif( !dom.slides ) throw 'Unable to find slides container (<div class=\"slides\">).';\n\n\t\t// Compose our config object in order of increasing precedence:\n\t\t// 1. Default reveal.js options\n\t\t// 2. Options provided via Reveal.configure() prior to\n\t\t//    initialization\n\t\t// 3. Options passed to the Reveal constructor\n\t\t// 4. Options passed to Reveal.initialize\n\t\t// 5. Query params\n\t\tconfig = { ...defaultConfig, ...config, ...options, ...initOptions, ...Util.getQueryHash() };\n\n\t\tsetViewport();\n\n\t\t// Force a layout when the whole page, incl fonts, has loaded\n\t\twindow.addEventListener( 'load', layout, false );\n\n\t\t// Register plugins and load dependencies, then move on to #start()\n\t\tplugins.load( config.plugins, config.dependencies ).then( start );\n\n\t\treturn new Promise( resolve => Reveal.on( 'ready', resolve ) );\n\n\t}\n\n\t/**\n\t * Encase the presentation in a reveal.js viewport. The\n\t * extent of the viewport differs based on configuration.\n\t */\n\tfunction setViewport() {\n\n\t\t// Embedded decks use the reveal element as their viewport\n\t\tif( config.embedded === true ) {\n\t\t\tdom.viewport = Util.closest( revealElement, '.reveal-viewport' ) || revealElement;\n\t\t}\n\t\t// Full-page decks use the body as their viewport\n\t\telse {\n\t\t\tdom.viewport = document.body;\n\t\t\tdocument.documentElement.classList.add( 'reveal-full-page' );\n\t\t}\n\n\t\tdom.viewport.classList.add( 'reveal-viewport' );\n\n\t}\n\n\t/**\n\t * Starts up reveal.js by binding input events and navigating\n\t * to the current URL deeplink if there is one.\n\t */\n\tfunction start() {\n\n\t\tready = true;\n\n\t\t// Remove slides hidden with data-visibility\n\t\tremoveHiddenSlides();\n\n\t\t// Make sure we've got all the DOM elements we need\n\t\tsetupDOM();\n\n\t\t// Listen to messages posted to this window\n\t\tsetupPostMessage();\n\n\t\t// Prevent the slides from being scrolled out of view\n\t\tsetupScrollPrevention();\n\n\t\t// Adds bindings for fullscreen mode\n\t\tsetupFullscreen();\n\n\t\t// Resets all vertical slides so that only the first is visible\n\t\tresetVerticalSlides();\n\n\t\t// Updates the presentation to match the current configuration values\n\t\tconfigure();\n\n\t\t// Read the initial hash\n\t\tlocation.readURL();\n\n\t\t// Create slide backgrounds\n\t\tbackgrounds.update( true );\n\n\t\t// Notify listeners that the presentation is ready but use a 1ms\n\t\t// timeout to ensure it's not fired synchronously after #initialize()\n\t\tsetTimeout( () => {\n\t\t\t// Enable transitions now that we're loaded\n\t\t\tdom.slides.classList.remove( 'no-transition' );\n\n\t\t\tdom.wrapper.classList.add( 'ready' );\n\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'ready',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tcurrentSlide\n\t\t\t\t}\n\t\t\t});\n\t\t}, 1 );\n\n\t\t// Special setup and config is required when printing to PDF\n\t\tif( print.isPrintingPDF() ) {\n\t\t\tremoveEventListeners();\n\n\t\t\t// The document needs to have loaded for the PDF layout\n\t\t\t// measurements to be accurate\n\t\t\tif( document.readyState === 'complete' ) {\n\t\t\t\tprint.setupPDF();\n\t\t\t}\n\t\t\telse {\n\t\t\t\twindow.addEventListener( 'load', () => {\n\t\t\t\t\tprint.setupPDF();\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes all slides with data-visibility=\"hidden\". This\n\t * is done right before the rest of the presentation is\n\t * initialized.\n\t *\n\t * If you want to show all hidden slides, initialize\n\t * reveal.js with showHiddenSlides set to true.\n\t */\n\tfunction removeHiddenSlides() {\n\n\t\tif( !config.showHiddenSlides ) {\n\t\t\tUtil.queryAll( dom.wrapper, 'section[data-visibility=\"hidden\"]' ).forEach( slide => {\n\t\t\t\tconst parent = slide.parentNode;\n\n\t\t\t\t// If this slide is part of a stack and that stack will be\n\t\t\t\t// empty after removing the hidden slide, remove the entire\n\t\t\t\t// stack\n\t\t\t\tif( parent.childElementCount === 1 && /section/i.test( parent.nodeName ) ) {\n\t\t\t\t\tparent.remove();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslide.remove();\n\t\t\t\t}\n\n\t\t\t} );\n\t\t}\n\n\t}\n\n\t/**\n\t * Finds and stores references to DOM elements which are\n\t * required by the presentation. If a required element is\n\t * not found, it is created.\n\t */\n\tfunction setupDOM() {\n\n\t\t// Prevent transitions while we're loading\n\t\tdom.slides.classList.add( 'no-transition' );\n\n\t\tif( Device.isMobile ) {\n\t\t\tdom.wrapper.classList.add( 'no-hover' );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.classList.remove( 'no-hover' );\n\t\t}\n\n\t\tbackgrounds.render();\n\t\tslideNumber.render();\n\t\tjumpToSlide.render();\n\t\tcontrols.render();\n\t\tprogress.render();\n\t\tnotes.render();\n\n\t\t// Overlay graphic which is displayed during the paused mode\n\t\tdom.pauseOverlay = Util.createSingletonNode( dom.wrapper, 'div', 'pause-overlay', config.controls ? '<button class=\"resume-button\">Resume presentation</button>' : null );\n\n\t\tdom.statusElement = createStatusElement();\n\n\t\tdom.wrapper.setAttribute( 'role', 'application' );\n\t}\n\n\t/**\n\t * Creates a hidden div with role aria-live to announce the\n\t * current slide content. Hide the div off-screen to make it\n\t * available only to Assistive Technologies.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction createStatusElement() {\n\n\t\tlet statusElement = dom.wrapper.querySelector( '.aria-status' );\n\t\tif( !statusElement ) {\n\t\t\tstatusElement = document.createElement( 'div' );\n\t\t\tstatusElement.style.position = 'absolute';\n\t\t\tstatusElement.style.height = '1px';\n\t\t\tstatusElement.style.width = '1px';\n\t\t\tstatusElement.style.overflow = 'hidden';\n\t\t\tstatusElement.style.clip = 'rect( 1px, 1px, 1px, 1px )';\n\t\t\tstatusElement.classList.add( 'aria-status' );\n\t\t\tstatusElement.setAttribute( 'aria-live', 'polite' );\n\t\t\tstatusElement.setAttribute( 'aria-atomic','true' );\n\t\t\tdom.wrapper.appendChild( statusElement );\n\t\t}\n\t\treturn statusElement;\n\n\t}\n\n\t/**\n\t * Announces the given text to screen readers.\n\t */\n\tfunction announceStatus( value ) {\n\n\t\tdom.statusElement.textContent = value;\n\n\t}\n\n\t/**\n\t * Converts the given HTML element into a string of text\n\t * that can be announced to a screen reader. Hidden\n\t * elements are excluded.\n\t */\n\tfunction getStatusText( node ) {\n\n\t\tlet text = '';\n\n\t\t// Text node\n\t\tif( node.nodeType === 3 ) {\n\t\t\ttext += node.textContent;\n\t\t}\n\t\t// Element node\n\t\telse if( node.nodeType === 1 ) {\n\n\t\t\tlet isAriaHidden = node.getAttribute( 'aria-hidden' );\n\t\t\tlet isDisplayHidden = window.getComputedStyle( node )['display'] === 'none';\n\t\t\tif( isAriaHidden !== 'true' && !isDisplayHidden ) {\n\n\t\t\t\tArray.from( node.childNodes ).forEach( child => {\n\t\t\t\t\ttext += getStatusText( child );\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t\ttext = text.trim();\n\n\t\treturn text === '' ? '' : text + ' ';\n\n\t}\n\n\t/**\n\t * This is an unfortunate necessity. Some actions – such as\n\t * an input field being focused in an iframe or using the\n\t * keyboard to expand text selection beyond the bounds of\n\t * a slide – can trigger our content to be pushed out of view.\n\t * This scrolling can not be prevented by hiding overflow in\n\t * CSS (we already do) so we have to resort to repeatedly\n\t * checking if the slides have been offset :(\n\t */\n\tfunction setupScrollPrevention() {\n\n\t\tsetInterval( () => {\n\t\t\tif( dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0 ) {\n\t\t\t\tdom.wrapper.scrollTop = 0;\n\t\t\t\tdom.wrapper.scrollLeft = 0;\n\t\t\t}\n\t\t}, 1000 );\n\n\t}\n\n\t/**\n\t * After entering fullscreen we need to force a layout to\n\t * get our presentations to scale correctly. This behavior\n\t * is inconsistent across browsers but a force layout seems\n\t * to normalize it.\n\t */\n\tfunction setupFullscreen() {\n\n\t\tdocument.addEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.addEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\n\t}\n\n\t/**\n\t * Registers a listener to postMessage events, this makes it\n\t * possible to call all reveal.js API methods from another\n\t * window. For example:\n\t *\n\t * revealWindow.postMessage( JSON.stringify({\n\t *   method: 'slide',\n\t *   args: [ 2 ]\n\t * }), '*' );\n\t */\n\tfunction setupPostMessage() {\n\n\t\tif( config.postMessage ) {\n\t\t\twindow.addEventListener( 'message', onPostMessage, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies the configuration settings from the config\n\t * object. May be called multiple times.\n\t *\n\t * @param {object} options\n\t */\n\tfunction configure( options ) {\n\n\t\tconst oldConfig = { ...config }\n\n\t\t// New config options may be passed when this method\n\t\t// is invoked through the API after initialization\n\t\tif( typeof options === 'object' ) Util.extend( config, options );\n\n\t\t// Abort if reveal.js hasn't finished loading, config\n\t\t// changes will be applied automatically once ready\n\t\tif( Reveal.isReady() ===  false ) return;\n\n\t\tconst numberOfSlides = dom.wrapper.querySelectorAll( SLIDES_SELECTOR ).length;\n\n\t\t// The transition is added as a class on the .reveal element\n\t\tdom.wrapper.classList.remove( oldConfig.transition );\n\t\tdom.wrapper.classList.add( config.transition );\n\n\t\tdom.wrapper.setAttribute( 'data-transition-speed', config.transitionSpeed );\n\t\tdom.wrapper.setAttribute( 'data-background-transition', config.backgroundTransition );\n\n\t\t// Expose our configured slide dimensions as custom props\n\t\tdom.viewport.style.setProperty( '--slide-width', config.width + 'px' );\n\t\tdom.viewport.style.setProperty( '--slide-height', config.height + 'px' );\n\n\t\tif( config.shuffle ) {\n\t\t\tshuffle();\n\t\t}\n\n\t\tUtil.toggleClass( dom.wrapper, 'embedded', config.embedded );\n\t\tUtil.toggleClass( dom.wrapper, 'rtl', config.rtl );\n\t\tUtil.toggleClass( dom.wrapper, 'center', config.center );\n\n\t\t// Exit the paused mode if it was configured off\n\t\tif( config.pause === false ) {\n\t\t\tresume();\n\t\t}\n\n\t\t// Iframe link previews\n\t\tif( config.previewLinks ) {\n\t\t\tenablePreviewLinks();\n\t\t\tdisablePreviewLinks( '[data-preview-link=false]' );\n\t\t}\n\t\telse {\n\t\t\tdisablePreviewLinks();\n\t\t\tenablePreviewLinks( '[data-preview-link]:not([data-preview-link=false])' );\n\t\t}\n\n\t\t// Reset all changes made by auto-animations\n\t\tautoAnimate.reset();\n\n\t\t// Remove existing auto-slide controls\n\t\tif( autoSlidePlayer ) {\n\t\t\tautoSlidePlayer.destroy();\n\t\t\tautoSlidePlayer = null;\n\t\t}\n\n\t\t// Generate auto-slide controls if needed\n\t\tif( numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable ) {\n\t\t\tautoSlidePlayer = new Playback( dom.wrapper, () => {\n\t\t\t\treturn Math.min( Math.max( ( Date.now() - autoSlideStartTime ) / autoSlide, 0 ), 1 );\n\t\t\t} );\n\n\t\t\tautoSlidePlayer.on( 'click', onAutoSlidePlayerClick );\n\t\t\tautoSlidePaused = false;\n\t\t}\n\n\t\t// Add the navigation mode to the DOM so we can adjust styling\n\t\tif( config.navigationMode !== 'default' ) {\n\t\t\tdom.wrapper.setAttribute( 'data-navigation-mode', config.navigationMode );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.removeAttribute( 'data-navigation-mode' );\n\t\t}\n\n\t\tnotes.configure( config, oldConfig );\n\t\tfocus.configure( config, oldConfig );\n\t\tpointer.configure( config, oldConfig );\n\t\tcontrols.configure( config, oldConfig );\n\t\tprogress.configure( config, oldConfig );\n\t\tkeyboard.configure( config, oldConfig );\n\t\tfragments.configure( config, oldConfig );\n\t\tslideNumber.configure( config, oldConfig );\n\n\t\tsync();\n\n\t}\n\n\t/**\n\t * Binds all event listeners.\n\t */\n\tfunction addEventListeners() {\n\n\t\teventsAreBound = true;\n\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\t\tif( config.touch ) touch.bind();\n\t\tif( config.keyboard ) keyboard.bind();\n\t\tif( config.progress ) progress.bind();\n\t\tif( config.respondToHashChanges ) location.bind();\n\t\tcontrols.bind();\n\t\tfocus.bind();\n\n\t\tdom.slides.addEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.addEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.addEventListener( 'click', resume, false );\n\n\t\tif( config.focusBodyOnPageVisibilityChange ) {\n\t\t\tdocument.addEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Unbinds all event listeners.\n\t */\n\tfunction removeEventListeners() {\n\n\t\teventsAreBound = false;\n\n\t\ttouch.unbind();\n\t\tfocus.unbind();\n\t\tkeyboard.unbind();\n\t\tcontrols.unbind();\n\t\tprogress.unbind();\n\t\tlocation.unbind();\n\n\t\twindow.removeEventListener( 'resize', onWindowResize, false );\n\n\t\tdom.slides.removeEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.removeEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.removeEventListener( 'click', resume, false );\n\n\t}\n\n\t/**\n\t * Uninitializes reveal.js by undoing changes made to the\n\t * DOM and removing all event listeners.\n\t */\n\tfunction destroy() {\n\n\t\tremoveEventListeners();\n\t\tcancelAutoSlide();\n\t\tdisablePreviewLinks();\n\n\t\t// Destroy controllers\n\t\tnotes.destroy();\n\t\tfocus.destroy();\n\t\tplugins.destroy();\n\t\tpointer.destroy();\n\t\tcontrols.destroy();\n\t\tprogress.destroy();\n\t\tbackgrounds.destroy();\n\t\tslideNumber.destroy();\n\t\tjumpToSlide.destroy();\n\n\t\t// Remove event listeners\n\t\tdocument.removeEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\twindow.removeEventListener( 'message', onPostMessage, false );\n\t\twindow.removeEventListener( 'load', layout, false );\n\n\t\t// Undo DOM changes\n\t\tif( dom.pauseOverlay ) dom.pauseOverlay.remove();\n\t\tif( dom.statusElement ) dom.statusElement.remove();\n\n\t\tdocument.documentElement.classList.remove( 'reveal-full-page' );\n\n\t\tdom.wrapper.classList.remove( 'ready', 'center', 'has-horizontal-slides', 'has-vertical-slides' );\n\t\tdom.wrapper.removeAttribute( 'data-transition-speed' );\n\t\tdom.wrapper.removeAttribute( 'data-background-transition' );\n\n\t\tdom.viewport.classList.remove( 'reveal-viewport' );\n\t\tdom.viewport.style.removeProperty( '--slide-width' );\n\t\tdom.viewport.style.removeProperty( '--slide-height' );\n\n\t\tdom.slides.style.removeProperty( 'width' );\n\t\tdom.slides.style.removeProperty( 'height' );\n\t\tdom.slides.style.removeProperty( 'zoom' );\n\t\tdom.slides.style.removeProperty( 'left' );\n\t\tdom.slides.style.removeProperty( 'top' );\n\t\tdom.slides.style.removeProperty( 'bottom' );\n\t\tdom.slides.style.removeProperty( 'right' );\n\t\tdom.slides.style.removeProperty( 'transform' );\n\n\t\tArray.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) ).forEach( slide => {\n\t\t\tslide.style.removeProperty( 'display' );\n\t\t\tslide.style.removeProperty( 'top' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Adds a listener to one of our custom reveal.js events,\n\t * like slidechanged.\n\t */\n\tfunction on( type, listener, useCapture ) {\n\n\t\trevealElement.addEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Unsubscribes from a reveal.js event.\n\t */\n\tfunction off( type, listener, useCapture ) {\n\n\t\trevealElement.removeEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Applies CSS transforms to the slides container. The container\n\t * is transformed from two separate sources: layout and the overview\n\t * mode.\n\t *\n\t * @param {object} transforms\n\t */\n\tfunction transformSlides( transforms ) {\n\n\t\t// Pick up new transforms from arguments\n\t\tif( typeof transforms.layout === 'string' ) slidesTransform.layout = transforms.layout;\n\t\tif( typeof transforms.overview === 'string' ) slidesTransform.overview = transforms.overview;\n\n\t\t// Apply the transforms to the slides container\n\t\tif( slidesTransform.layout ) {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview );\n\t\t}\n\t\telse {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.overview );\n\t\t}\n\n\t}\n\n\t/**\n\t * Dispatches an event of the specified type from the\n\t * reveal DOM element.\n\t */\n\tfunction dispatchEvent({ target=dom.wrapper, type, data, bubbles=true }) {\n\n\t\tlet event = document.createEvent( 'HTMLEvents', 1, 2 );\n\t\tevent.initEvent( type, bubbles, true );\n\t\tUtil.extend( event, data );\n\t\ttarget.dispatchEvent( event );\n\n\t\tif( target === dom.wrapper ) {\n\t\t\t// If we're in an iframe, post each reveal.js event to the\n\t\t\t// parent window. Used by the notes plugin\n\t\t\tdispatchPostMessage( type );\n\t\t}\n\n\t\treturn event;\n\n\t}\n\n\t/**\n\t * Dispatched a postMessage of the given type from our window.\n\t */\n\tfunction dispatchPostMessage( type, data ) {\n\n\t\tif( config.postMessageEvents && window.parent !== window.self ) {\n\t\t\tlet message = {\n\t\t\t\tnamespace: 'reveal',\n\t\t\t\teventName: type,\n\t\t\t\tstate: getState()\n\t\t\t};\n\n\t\t\tUtil.extend( message, data );\n\n\t\t\twindow.parent.postMessage( JSON.stringify( message ), '*' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Bind preview frame links.\n\t *\n\t * @param {string} [selector=a] - selector for anchors\n\t */\n\tfunction enablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.addEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unbind preview frame links.\n\t */\n\tfunction disablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.removeEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Opens a preview window for the target URL.\n\t *\n\t * @param {string} url - url for preview iframe src\n\t */\n\tfunction showPreview( url ) {\n\n\t\tcloseOverlay();\n\n\t\tdom.overlay = document.createElement( 'div' );\n\t\tdom.overlay.classList.add( 'overlay' );\n\t\tdom.overlay.classList.add( 'overlay-preview' );\n\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\tdom.overlay.innerHTML =\n\t\t\t`<header>\n\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t<a class=\"external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\n\t\t\t</header>\n\t\t\t<div class=\"spinner\"></div>\n\t\t\t<div class=\"viewport\">\n\t\t\t\t<iframe src=\"${url}\"></iframe>\n\t\t\t\t<small class=\"viewport-inner\">\n\t\t\t\t\t<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\n\t\t\t\t</small>\n\t\t\t</div>`;\n\n\t\tdom.overlay.querySelector( 'iframe' ).addEventListener( 'load', event => {\n\t\t\tdom.overlay.classList.add( 'loaded' );\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t\tevent.preventDefault();\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.external' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t}, false );\n\n\t}\n\n\t/**\n\t * Open or close help overlay window.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * help is open, false means it's closed.\n\t */\n\tfunction toggleHelp( override ){\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? showHelp() : closeOverlay();\n\t\t}\n\t\telse {\n\t\t\tif( dom.overlay ) {\n\t\t\t\tcloseOverlay();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tshowHelp();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Opens an overlay window with help material.\n\t */\n\tfunction showHelp() {\n\n\t\tif( config.help ) {\n\n\t\t\tcloseOverlay();\n\n\t\t\tdom.overlay = document.createElement( 'div' );\n\t\t\tdom.overlay.classList.add( 'overlay' );\n\t\t\tdom.overlay.classList.add( 'overlay-help' );\n\t\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\t\tlet html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\n\n\t\t\tlet shortcuts = keyboard.getShortcuts(),\n\t\t\t\tbindings = keyboard.getBindings();\n\n\t\t\thtml += '<table><th>KEY</th><th>ACTION</th>';\n\t\t\tfor( let key in shortcuts ) {\n\t\t\t\thtml += `<tr><td>${key}</td><td>${shortcuts[ key ]}</td></tr>`;\n\t\t\t}\n\n\t\t\t// Add custom key bindings that have associated descriptions\n\t\t\tfor( let binding in bindings ) {\n\t\t\t\tif( bindings[binding].key && bindings[binding].description ) {\n\t\t\t\t\thtml += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thtml += '</table>';\n\n\t\t\tdom.overlay.innerHTML = `\n\t\t\t\t<header>\n\t\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"viewport\">\n\t\t\t\t\t<div class=\"viewport-inner\">${html}</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n\t\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\t\tcloseOverlay();\n\t\t\t\tevent.preventDefault();\n\t\t\t}, false );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Closes any currently open overlay.\n\t */\n\tfunction closeOverlay() {\n\n\t\tif( dom.overlay ) {\n\t\t\tdom.overlay.parentNode.removeChild( dom.overlay );\n\t\t\tdom.overlay = null;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Applies JavaScript-controlled layout rules to the\n\t * presentation.\n\t */\n\tfunction layout() {\n\n\t\tif( dom.wrapper && !print.isPrintingPDF() ) {\n\n\t\t\tif( !config.disableLayout ) {\n\n\t\t\t\t// On some mobile devices '100vh' is taller than the visible\n\t\t\t\t// viewport which leads to part of the presentation being\n\t\t\t\t// cut off. To work around this we define our own '--vh' custom\n\t\t\t\t// property where 100x adds up to the correct height.\n\t\t\t\t//\n\t\t\t\t// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n\t\t\t\tif( Device.isMobile && !config.embedded ) {\n\t\t\t\t\tdocument.documentElement.style.setProperty( '--vh', ( window.innerHeight * 0.01 ) + 'px' );\n\t\t\t\t}\n\n\t\t\t\tconst size = getComputedSlideSize();\n\n\t\t\t\tconst oldScale = scale;\n\n\t\t\t\t// Layout the contents of the slides\n\t\t\t\tlayoutSlideContents( config.width, config.height );\n\n\t\t\t\tdom.slides.style.width = size.width + 'px';\n\t\t\t\tdom.slides.style.height = size.height + 'px';\n\n\t\t\t\t// Determine scale of content to fit within available space\n\t\t\t\tscale = Math.min( size.presentationWidth / size.width, size.presentationHeight / size.height );\n\n\t\t\t\t// Respect max/min scale settings\n\t\t\t\tscale = Math.max( scale, config.minScale );\n\t\t\t\tscale = Math.min( scale, config.maxScale );\n\n\t\t\t\t// Don't apply any scaling styles if scale is 1\n\t\t\t\tif( scale === 1 ) {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '';\n\t\t\t\t\tdom.slides.style.top = '';\n\t\t\t\t\tdom.slides.style.bottom = '';\n\t\t\t\t\tdom.slides.style.right = '';\n\t\t\t\t\ttransformSlides( { layout: '' } );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '50%';\n\t\t\t\t\tdom.slides.style.top = '50%';\n\t\t\t\t\tdom.slides.style.bottom = 'auto';\n\t\t\t\t\tdom.slides.style.right = 'auto';\n\t\t\t\t\ttransformSlides( { layout: 'translate(-50%, -50%) scale('+ scale +')' } );\n\t\t\t\t}\n\n\t\t\t\t// Select all slides, vertical and horizontal\n\t\t\t\tconst slides = Array.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) );\n\n\t\t\t\tfor( let i = 0, len = slides.length; i < len; i++ ) {\n\t\t\t\t\tconst slide = slides[ i ];\n\n\t\t\t\t\t// Don't bother updating invisible slides\n\t\t\t\t\tif( slide.style.display === 'none' ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\t\t// Vertical stacks are not centred since their section\n\t\t\t\t\t\t// children will be\n\t\t\t\t\t\tif( slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\t\t\tslide.style.top = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslide.style.top = Math.max( ( size.height - slide.scrollHeight ) / 2, 0 ) + 'px';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tslide.style.top = '';\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif( oldScale !== scale ) {\n\t\t\t\t\tdispatchEvent({\n\t\t\t\t\t\ttype: 'resize',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\toldScale,\n\t\t\t\t\t\t\tscale,\n\t\t\t\t\t\t\tsize\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.style.setProperty( '--slide-scale', scale );\n\n\t\t\tprogress.update();\n\t\t\tbackgrounds.updateParallax();\n\n\t\t\tif( overview.isActive() ) {\n\t\t\t\toverview.update();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies layout logic to the contents of all slides in\n\t * the presentation.\n\t *\n\t * @param {string|number} width\n\t * @param {string|number} height\n\t */\n\tfunction layoutSlideContents( width, height ) {\n\n\t\t// Handle sizing of elements with the 'r-stretch' class\n\t\tUtil.queryAll( dom.slides, 'section > .stretch, section > .r-stretch' ).forEach( element => {\n\n\t\t\t// Determine how much vertical space we can use\n\t\t\tlet remainingHeight = Util.getRemainingHeight( element, height );\n\n\t\t\t// Consider the aspect ratio of media elements\n\t\t\tif( /(img|video)/gi.test( element.nodeName ) ) {\n\t\t\t\tconst nw = element.naturalWidth || element.videoWidth,\n\t\t\t\t\t  nh = element.naturalHeight || element.videoHeight;\n\n\t\t\t\tconst es = Math.min( width / nw, remainingHeight / nh );\n\n\t\t\t\telement.style.width = ( nw * es ) + 'px';\n\t\t\t\telement.style.height = ( nh * es ) + 'px';\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.width = width + 'px';\n\t\t\t\telement.style.height = remainingHeight + 'px';\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Calculates the computed pixel size of our slides. These\n\t * values are based on the width and height configuration\n\t * options.\n\t *\n\t * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n\t * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n\t */\n\tfunction getComputedSlideSize( presentationWidth, presentationHeight ) {\n\t\tlet width = config.width;\n\t\tlet height = config.height;\n\n\t\tif( config.disableLayout ) {\n\t\t\twidth = dom.slides.offsetWidth;\n\t\t\theight = dom.slides.offsetHeight;\n\t\t}\n\n\t\tconst size = {\n\t\t\t// Slide size\n\t\t\twidth: width,\n\t\t\theight: height,\n\n\t\t\t// Presentation size\n\t\t\tpresentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n\t\t\tpresentationHeight: presentationHeight || dom.wrapper.offsetHeight\n\t\t};\n\n\t\t// Reduce available space by margin\n\t\tsize.presentationWidth -= ( size.presentationWidth * config.margin );\n\t\tsize.presentationHeight -= ( size.presentationHeight * config.margin );\n\n\t\t// Slide width may be a percentage of available width\n\t\tif( typeof size.width === 'string' && /%$/.test( size.width ) ) {\n\t\t\tsize.width = parseInt( size.width, 10 ) / 100 * size.presentationWidth;\n\t\t}\n\n\t\t// Slide height may be a percentage of available height\n\t\tif( typeof size.height === 'string' && /%$/.test( size.height ) ) {\n\t\t\tsize.height = parseInt( size.height, 10 ) / 100 * size.presentationHeight;\n\t\t}\n\n\t\treturn size;\n\n\t}\n\n\t/**\n\t * Stores the vertical index of a stack so that the same\n\t * vertical slide can be selected when navigating to and\n\t * from the stack.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t * @param {string|number} [v=0] Index to memorize\n\t */\n\tfunction setPreviousVerticalIndex( stack, v ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' ) {\n\t\t\tstack.setAttribute( 'data-previous-indexv', v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieves the vertical index which was stored using\n\t * #setPreviousVerticalIndex() or 0 if no previous index\n\t * exists.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t */\n\tfunction getPreviousVerticalIndex( stack ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains( 'stack' ) ) {\n\t\t\t// Prefer manually defined start-indexv\n\t\t\tconst attributeName = stack.hasAttribute( 'data-start-indexv' ) ? 'data-start-indexv' : 'data-previous-indexv';\n\n\t\t\treturn parseInt( stack.getAttribute( attributeName ) || 0, 10 );\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is vertical\n\t * (nested within another slide).\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to check\n\t * orientation of\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalSlide( slide = currentSlide ) {\n\n\t\treturn slide && slide.parentNode && !!slide.parentNode.nodeName.match( /section/i );\n\n\t}\n\n\t/**\n\t * Returns true if we're on the last slide in the current\n\t * vertical stack.\n\t */\n\tfunction isLastVerticalSlide() {\n\n\t\tif( currentSlide && isVerticalSlide( currentSlide ) ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the first slide in\n\t * the presentation.\n\t */\n\tfunction isFirstSlide() {\n\n\t\treturn indexh === 0 && indexv === 0;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the last slide in\n\t * the presenation. If the last slide is a stack, we only\n\t * consider this the last slide if it's at the end of the\n\t * stack.\n\t */\n\tfunction isLastSlide() {\n\n\t\tif( currentSlide ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\t// If it's vertical, does its parent have a next sibling?\n\t\t\tif( isVerticalSlide( currentSlide ) && currentSlide.parentNode.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Enters the paused mode which fades everything on screen to\n\t * black.\n\t */\n\tfunction pause() {\n\n\t\tif( config.pause ) {\n\t\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\n\t\t\tcancelAutoSlide();\n\t\t\tdom.wrapper.classList.add( 'paused' );\n\n\t\t\tif( wasPaused === false ) {\n\t\t\t\tdispatchEvent({ type: 'paused' });\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Exits from the paused mode.\n\t */\n\tfunction resume() {\n\n\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\t\tdom.wrapper.classList.remove( 'paused' );\n\n\t\tcueAutoSlide();\n\n\t\tif( wasPaused ) {\n\t\t\tdispatchEvent({ type: 'resumed' });\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the paused mode on and off.\n\t */\n\tfunction togglePause( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? pause() : resume();\n\t\t}\n\t\telse {\n\t\t\tisPaused() ? resume() : pause();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if we are currently in the paused mode.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isPaused() {\n\n\t\treturn dom.wrapper.classList.contains( 'paused' );\n\n\t}\n\n\t/**\n\t * Toggles visibility of the jump-to-slide UI.\n\t */\n\tfunction toggleJumpToSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? jumpToSlide.show() : jumpToSlide.hide();\n\t\t}\n\t\telse {\n\t\t\tjumpToSlide.isVisible() ? jumpToSlide.hide() : jumpToSlide.show();\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the auto slide mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which sets the desired state.\n\t * True means autoplay starts, false means it stops.\n\t */\n\n\tfunction toggleAutoSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t\telse {\n\t\t\tautoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the auto slide mode is currently on.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isAutoSliding() {\n\n\t\treturn !!( autoSlide && !autoSlidePaused );\n\n\t}\n\n\t/**\n\t * Steps from the current point in the presentation to the\n\t * slide which matches the specified horizontal and vertical\n\t * indices.\n\t *\n\t * @param {number} [h=indexh] Horizontal index of the target slide\n\t * @param {number} [v=indexv] Vertical index of the target slide\n\t * @param {number} [f] Index of a fragment within the\n\t * target slide to activate\n\t * @param {number} [origin] Origin for use in multimaster environments\n\t */\n\tfunction slide( h, v, f, origin ) {\n\n\t\t// Dispatch an event before the slide\n\t\tconst slidechange = dispatchEvent({\n\t\t\ttype: 'beforeslidechange',\n\t\t\tdata: {\n\t\t\t\tindexh: h === undefined ? indexh : h,\n\t\t\t\tindexv: v === undefined ? indexv : v,\n\t\t\t\torigin\n\t\t\t}\n\t\t});\n\n\t\t// Abort if this slide change was prevented by an event listener\n\t\tif( slidechange.defaultPrevented ) return;\n\n\t\t// Remember where we were at before\n\t\tpreviousSlide = currentSlide;\n\n\t\t// Query all horizontal slides in the deck\n\t\tconst horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR );\n\n\t\t// Abort if there are no slides\n\t\tif( horizontalSlides.length === 0 ) return;\n\n\t\t// If no vertical index is specified and the upcoming slide is a\n\t\t// stack, resume at its previous vertical index\n\t\tif( v === undefined && !overview.isActive() ) {\n\t\t\tv = getPreviousVerticalIndex( horizontalSlides[ h ] );\n\t\t}\n\n\t\t// If we were on a vertical stack, remember what vertical index\n\t\t// it was on so we can resume at the same position when returning\n\t\tif( previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains( 'stack' ) ) {\n\t\t\tsetPreviousVerticalIndex( previousSlide.parentNode, indexv );\n\t\t}\n\n\t\t// Remember the state before this slide\n\t\tconst stateBefore = state.concat();\n\n\t\t// Reset the state array\n\t\tstate.length = 0;\n\n\t\tlet indexhBefore = indexh || 0,\n\t\t\tindexvBefore = indexv || 0;\n\n\t\t// Activate and transition to the new slide\n\t\tindexh = updateSlides( HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h );\n\t\tindexv = updateSlides( VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v );\n\n\t\t// Dispatch an event if the slide changed\n\t\tlet slideChanged = ( indexh !== indexhBefore || indexv !== indexvBefore );\n\n\t\t// Ensure that the previous slide is never the same as the current\n\t\tif( !slideChanged ) previousSlide = null;\n\n\t\t// Find the current horizontal slide and any possible vertical slides\n\t\t// within it\n\t\tlet currentHorizontalSlide = horizontalSlides[ indexh ],\n\t\t\tcurrentVerticalSlides = currentHorizontalSlide.querySelectorAll( 'section' );\n\n\t\t// Store references to the previous and current slides\n\t\tcurrentSlide = currentVerticalSlides[ indexv ] || currentHorizontalSlide;\n\n\t\tlet autoAnimateTransition = false;\n\n\t\t// Detect if we're moving between two auto-animated slides\n\t\tif( slideChanged && previousSlide && currentSlide && !overview.isActive() ) {\n\n\t\t\t// If this is an auto-animated transition, we disable the\n\t\t\t// regular slide transition\n\t\t\t//\n\t\t\t// Note 20-03-2020:\n\t\t\t// This needs to happen before we update slide visibility,\n\t\t\t// otherwise transitions will still run in Safari.\n\t\t\tif( previousSlide.hasAttribute( 'data-auto-animate' ) && currentSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t\t&& previousSlide.getAttribute( 'data-auto-animate-id' ) === currentSlide.getAttribute( 'data-auto-animate-id' )\n\t\t\t\t\t&& !( ( indexh > indexhBefore || indexv > indexvBefore ) ? currentSlide : previousSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t\tautoAnimateTransition = true;\n\t\t\t\tdom.slides.classList.add( 'disable-slide-transitions' );\n\t\t\t}\n\n\t\t\ttransition = 'running';\n\n\t\t}\n\n\t\t// Update the visibility of slides now that the indices have changed\n\t\tupdateSlidesVisibility();\n\n\t\tlayout();\n\n\t\t// Update the overview if it's currently active\n\t\tif( overview.isActive() ) {\n\t\t\toverview.update();\n\t\t}\n\n\t\t// Show fragment, if specified\n\t\tif( typeof f !== 'undefined' ) {\n\t\t\tfragments.goto( f );\n\t\t}\n\n\t\t// Solves an edge case where the previous slide maintains the\n\t\t// 'present' class when navigating between adjacent vertical\n\t\t// stacks\n\t\tif( previousSlide && previousSlide !== currentSlide ) {\n\t\t\tpreviousSlide.classList.remove( 'present' );\n\t\t\tpreviousSlide.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t// Reset all slides upon navigate to home\n\t\t\tif( isFirstSlide() ) {\n\t\t\t\t// Launch async task\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tgetVerticalStacks().forEach( slide => {\n\t\t\t\t\t\tsetPreviousVerticalIndex( slide, 0 );\n\t\t\t\t\t} );\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t}\n\n\t\t// Apply the new state\n\t\tstateLoop: for( let i = 0, len = state.length; i < len; i++ ) {\n\t\t\t// Check if this state existed on the previous slide. If it\n\t\t\t// did, we will avoid adding it repeatedly\n\t\t\tfor( let j = 0; j < stateBefore.length; j++ ) {\n\t\t\t\tif( stateBefore[j] === state[i] ) {\n\t\t\t\t\tstateBefore.splice( j, 1 );\n\t\t\t\t\tcontinue stateLoop;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.classList.add( state[i] );\n\n\t\t\t// Dispatch custom event matching the state's name\n\t\t\tdispatchEvent({ type: state[i] });\n\t\t}\n\n\t\t// Clean up the remains of the previous state\n\t\twhile( stateBefore.length ) {\n\t\t\tdom.viewport.classList.remove( stateBefore.pop() );\n\t\t}\n\n\t\tif( slideChanged ) {\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidechanged',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tpreviousSlide,\n\t\t\t\t\tcurrentSlide,\n\t\t\t\t\torigin\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Handle embedded content\n\t\tif( slideChanged || !previousSlide ) {\n\t\t\tslideContent.stopEmbeddedContent( previousSlide );\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\t// Announce the current slide contents to screen readers\n\t\t// Use animation frame to prevent getComputedStyle in getStatusText\n\t\t// from triggering layout mid-frame\n\t\trequestAnimationFrame( () => {\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\n\t\t});\n\n\t\tprogress.update();\n\t\tcontrols.update();\n\t\tnotes.update();\n\t\tbackgrounds.update();\n\t\tbackgrounds.updateParallax();\n\t\tslideNumber.update();\n\t\tfragments.update();\n\n\t\t// Update the URL hash\n\t\tlocation.writeURL();\n\n\t\tcueAutoSlide();\n\n\t\t// Auto-animation\n\t\tif( autoAnimateTransition ) {\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tdom.slides.classList.remove( 'disable-slide-transitions' );\n\t\t\t}, 0 );\n\n\t\t\tif( config.autoAnimate ) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Syncs the presentation with the current DOM. Useful\n\t * when new slides or control elements are added or when\n\t * the configuration has changed.\n\t */\n\tfunction sync() {\n\n\t\t// Subscribe to input\n\t\tremoveEventListeners();\n\t\taddEventListeners();\n\n\t\t// Force a layout to make sure the current config is accounted for\n\t\tlayout();\n\n\t\t// Reflect the current autoSlide value\n\t\tautoSlide = config.autoSlide;\n\n\t\t// Start auto-sliding if it's enabled\n\t\tcueAutoSlide();\n\n\t\t// Re-create all slide backgrounds\n\t\tbackgrounds.create();\n\n\t\t// Write the current hash to the URL\n\t\tlocation.writeURL();\n\n\t\tif( config.sortFragmentsOnSync === true ) {\n\t\t\tfragments.sortAll();\n\t\t}\n\n\t\tcontrols.update();\n\t\tprogress.update();\n\n\t\tupdateSlidesVisibility();\n\n\t\tnotes.update();\n\t\tnotes.updateVisibility();\n\t\tbackgrounds.update( true );\n\t\tslideNumber.update();\n\t\tslideContent.formatEmbeddedContent();\n\n\t\t// Start or stop embedded content depending on global config\n\t\tif( config.autoPlayMedia === false ) {\n\t\t\tslideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } );\n\t\t}\n\t\telse {\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\tif( overview.isActive() ) {\n\t\t\toverview.layout();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates reveal.js to keep in sync with new slide attributes. For\n\t * example, if you add a new `data-background-image` you can call\n\t * this to have reveal.js render the new background image.\n\t *\n\t * Similar to #sync() but more efficient when you only need to\n\t * refresh a specific slide.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tfunction syncSlide( slide = currentSlide ) {\n\n\t\tbackgrounds.sync( slide );\n\t\tfragments.sync( slide );\n\n\t\tslideContent.load( slide );\n\n\t\tbackgrounds.update();\n\t\tnotes.update();\n\n\t}\n\n\t/**\n\t * Resets all vertical slides so that only the first\n\t * is visible.\n\t */\n\tfunction resetVerticalSlides() {\n\n\t\tgetHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tUtil.queryAll( horizontalSlide, 'section' ).forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tif( y > 0 ) {\n\t\t\t\t\tverticalSlide.classList.remove( 'present' );\n\t\t\t\t\tverticalSlide.classList.remove( 'past' );\n\t\t\t\t\tverticalSlide.classList.add( 'future' );\n\t\t\t\t\tverticalSlide.setAttribute( 'aria-hidden', 'true' );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Randomly shuffles all slides in the deck.\n\t */\n\tfunction shuffle( slides = getHorizontalSlides() ) {\n\n\t\tslides.forEach( ( slide, i ) => {\n\n\t\t\t// Insert the slide next to a randomly picked sibling slide\n\t\t\t// slide. This may cause the slide to insert before itself,\n\t\t\t// but that's not an issue.\n\t\t\tlet beforeSlide = slides[ Math.floor( Math.random() * slides.length ) ];\n\t\t\tif( beforeSlide.parentNode === slide.parentNode ) {\n\t\t\t\tslide.parentNode.insertBefore( slide, beforeSlide );\n\t\t\t}\n\n\t\t\t// Randomize the order of vertical slides (if there are any)\n\t\t\tlet verticalSlides = slide.querySelectorAll( 'section' );\n\t\t\tif( verticalSlides.length ) {\n\t\t\t\tshuffle( verticalSlides );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates one dimension of slides by showing the slide\n\t * with the specified index.\n\t *\n\t * @param {string} selector A CSS selector that will fetch\n\t * the group of slides we are working with\n\t * @param {number} index The index of the slide that should be\n\t * shown\n\t *\n\t * @return {number} The index of the slide that is now shown,\n\t * might differ from the passed in index if it was out of\n\t * bounds.\n\t */\n\tfunction updateSlides( selector, index ) {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet slides = Util.queryAll( dom.wrapper, selector ),\n\t\t\tslidesLength = slides.length;\n\n\t\tlet printMode = print.isPrintingPDF();\n\t\tlet loopedForwards = false;\n\t\tlet loopedBackwards = false;\n\n\t\tif( slidesLength ) {\n\n\t\t\t// Should the index loop?\n\t\t\tif( config.loop ) {\n\t\t\t\tif( index >= slidesLength ) loopedForwards = true;\n\n\t\t\t\tindex %= slidesLength;\n\n\t\t\t\tif( index < 0 ) {\n\t\t\t\t\tindex = slidesLength + index;\n\t\t\t\t\tloopedBackwards = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Enforce max and minimum index bounds\n\t\t\tindex = Math.max( Math.min( index, slidesLength - 1 ), 0 );\n\n\t\t\tfor( let i = 0; i < slidesLength; i++ ) {\n\t\t\t\tlet element = slides[i];\n\n\t\t\t\tlet reverse = config.rtl && !isVerticalSlide( element );\n\n\t\t\t\t// Avoid .remove() with multiple args for IE11 support\n\t\t\t\telement.classList.remove( 'past' );\n\t\t\t\telement.classList.remove( 'present' );\n\t\t\t\telement.classList.remove( 'future' );\n\n\t\t\t\t// http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n\t\t\t\telement.setAttribute( 'hidden', '' );\n\t\t\t\telement.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t\t// If this element contains vertical slides\n\t\t\t\tif( element.querySelector( 'section' ) ) {\n\t\t\t\t\telement.classList.add( 'stack' );\n\t\t\t\t}\n\n\t\t\t\t// If we're printing static slides, all slides are \"present\"\n\t\t\t\tif( printMode ) {\n\t\t\t\t\telement.classList.add( 'present' );\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif( i < index ) {\n\t\t\t\t\t// Any element previous to index is given the 'past' class\n\t\t\t\t\telement.classList.add( reverse ? 'future' : 'past' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Show all fragments in prior slides\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( i > index ) {\n\t\t\t\t\t// Any element subsequent to index is given the 'future' class\n\t\t\t\t\telement.classList.add( reverse ? 'past' : 'future' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Hide all fragments in future slides\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Update the visibility of fragments when a presentation loops\n\t\t\t\t// in either direction\n\t\t\t\telse if( i === index && config.fragments ) {\n\t\t\t\t\tif( loopedForwards ) {\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t\telse if( loopedBackwards ) {\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet slide = slides[index];\n\t\t\tlet wasPresent = slide.classList.contains( 'present' );\n\n\t\t\t// Mark the current slide as present\n\t\t\tslide.classList.add( 'present' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\n\t\t\tif( !wasPresent ) {\n\t\t\t\t// Dispatch an event indicating the slide is now visible\n\t\t\t\tdispatchEvent({\n\t\t\t\t\ttarget: slide,\n\t\t\t\t\ttype: 'visible',\n\t\t\t\t\tbubbles: false\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If this slide has a state associated with it, add it\n\t\t\t// onto the current state of the deck\n\t\t\tlet slideState = slide.getAttribute( 'data-state' );\n\t\t\tif( slideState ) {\n\t\t\t\tstate = state.concat( slideState.split( ' ' ) );\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\t// Since there are no slides we can't be anywhere beyond the\n\t\t\t// zeroth index\n\t\t\tindex = 0;\n\t\t}\n\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * Shows all fragment elements within the given contaienr.\n\t */\n\tfunction showFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment' ).forEach( fragment => {\n\t\t\tfragment.classList.add( 'visible' );\n\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Hides all fragment elements within the given contaienr.\n\t */\n\tfunction hideFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment.visible' ).forEach( fragment => {\n\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Optimization method; hide all slides that are far away\n\t * from the present slide.\n\t */\n\tfunction updateSlidesVisibility() {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet horizontalSlides = getHorizontalSlides(),\n\t\t\thorizontalSlidesLength = horizontalSlides.length,\n\t\t\tdistanceX,\n\t\t\tdistanceY;\n\n\t\tif( horizontalSlidesLength && typeof indexh !== 'undefined' ) {\n\n\t\t\t// The number of steps away from the present slide that will\n\t\t\t// be visible\n\t\t\tlet viewDistance = overview.isActive() ? 10 : config.viewDistance;\n\n\t\t\t// Shorten the view distance on devices that typically have\n\t\t\t// less resources\n\t\t\tif( Device.isMobile ) {\n\t\t\t\tviewDistance = overview.isActive() ? 6 : config.mobileViewDistance;\n\t\t\t}\n\n\t\t\t// All slides need to be visible when exporting to PDF\n\t\t\tif( print.isPrintingPDF() ) {\n\t\t\t\tviewDistance = Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tfor( let x = 0; x < horizontalSlidesLength; x++ ) {\n\t\t\t\tlet horizontalSlide = horizontalSlides[x];\n\n\t\t\t\tlet verticalSlides = Util.queryAll( horizontalSlide, 'section' ),\n\t\t\t\t\tverticalSlidesLength = verticalSlides.length;\n\n\t\t\t\t// Determine how far away this slide is from the present\n\t\t\t\tdistanceX = Math.abs( ( indexh || 0 ) - x ) || 0;\n\n\t\t\t\t// If the presentation is looped, distance should measure\n\t\t\t\t// 1 between the first and last slides\n\t\t\t\tif( config.loop ) {\n\t\t\t\t\tdistanceX = Math.abs( ( ( indexh || 0 ) - x ) % ( horizontalSlidesLength - viewDistance ) ) || 0;\n\t\t\t\t}\n\n\t\t\t\t// Show the horizontal slide if it's within the view distance\n\t\t\t\tif( distanceX < viewDistance ) {\n\t\t\t\t\tslideContent.load( horizontalSlide );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslideContent.unload( horizontalSlide );\n\t\t\t\t}\n\n\t\t\t\tif( verticalSlidesLength ) {\n\n\t\t\t\t\tlet oy = getPreviousVerticalIndex( horizontalSlide );\n\n\t\t\t\t\tfor( let y = 0; y < verticalSlidesLength; y++ ) {\n\t\t\t\t\t\tlet verticalSlide = verticalSlides[y];\n\n\t\t\t\t\t\tdistanceY = x === ( indexh || 0 ) ? Math.abs( ( indexv || 0 ) - y ) : Math.abs( y - oy );\n\n\t\t\t\t\t\tif( distanceX + distanceY < viewDistance ) {\n\t\t\t\t\t\t\tslideContent.load( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslideContent.unload( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Flag if there are ANY vertical slides, anywhere in the deck\n\t\t\tif( hasVerticalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-vertical-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-vertical-slides' );\n\t\t\t}\n\n\t\t\t// Flag if there are ANY horizontal slides, anywhere in the deck\n\t\t\tif( hasHorizontalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-horizontal-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-horizontal-slides' );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Determine what available routes there are for navigation.\n\t *\n\t * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n\t */\n\tfunction availableRoutes({ includeFragments = false } = {}) {\n\n\t\tlet horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ),\n\t\t\tverticalSlides = dom.wrapper.querySelectorAll( VERTICAL_SLIDES_SELECTOR );\n\n\t\tlet routes = {\n\t\t\tleft: indexh > 0,\n\t\t\tright: indexh < horizontalSlides.length - 1,\n\t\t\tup: indexv > 0,\n\t\t\tdown: indexv < verticalSlides.length - 1\n\t\t};\n\n\t\t// Looped presentations can always be navigated as long as\n\t\t// there are slides available\n\t\tif( config.loop ) {\n\t\t\tif( horizontalSlides.length > 1 ) {\n\t\t\t\troutes.left = true;\n\t\t\t\troutes.right = true;\n\t\t\t}\n\n\t\t\tif( verticalSlides.length > 1 ) {\n\t\t\t\troutes.up = true;\n\t\t\t\troutes.down = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( horizontalSlides.length > 1 && config.navigationMode === 'linear' ) {\n\t\t\troutes.right = routes.right || routes.down;\n\t\t\troutes.left = routes.left || routes.up;\n\t\t}\n\n\t\t// If includeFragments is set, a route will be considered\n\t\t// available if either a slid OR fragment is available in\n\t\t// the given direction\n\t\tif( includeFragments === true ) {\n\t\t\tlet fragmentRoutes = fragments.availableRoutes();\n\t\t\troutes.left = routes.left || fragmentRoutes.prev;\n\t\t\troutes.up = routes.up || fragmentRoutes.prev;\n\t\t\troutes.down = routes.down || fragmentRoutes.next;\n\t\t\troutes.right = routes.right || fragmentRoutes.next;\n\t\t}\n\n\t\t// Reverse horizontal controls for rtl\n\t\tif( config.rtl ) {\n\t\t\tlet left = routes.left;\n\t\t\troutes.left = routes.right;\n\t\t\troutes.right = left;\n\t\t}\n\n\t\treturn routes;\n\n\t}\n\n\t/**\n\t * Returns the number of past slides. This can be used as a global\n\t * flattened index for slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\n\t *\n\t * @return {number} Past slide count\n\t */\n\tfunction getSlidePastCount( slide = currentSlide ) {\n\n\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t// The number of past slides\n\t\tlet pastCount = 0;\n\n\t\t// Step through all slides and count the past ones\n\t\tmainLoop: for( let i = 0; i < horizontalSlides.length; i++ ) {\n\n\t\t\tlet horizontalSlide = horizontalSlides[i];\n\t\t\tlet verticalSlides = horizontalSlide.querySelectorAll( 'section' );\n\n\t\t\tfor( let j = 0; j < verticalSlides.length; j++ ) {\n\n\t\t\t\t// Stop as soon as we arrive at the present\n\t\t\t\tif( verticalSlides[j] === slide ) {\n\t\t\t\t\tbreak mainLoop;\n\t\t\t\t}\n\n\t\t\t\t// Don't count slides with the \"uncounted\" class\n\t\t\t\tif( verticalSlides[j].dataset.visibility !== 'uncounted' ) {\n\t\t\t\t\tpastCount++;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Stop as soon as we arrive at the present\n\t\t\tif( horizontalSlide === slide ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Don't count the wrapping section for vertical slides and\n\t\t\t// slides marked as uncounted\n\t\t\tif( horizontalSlide.classList.contains( 'stack' ) === false && horizontalSlide.dataset.visibility !== 'uncounted' ) {\n\t\t\t\tpastCount++;\n\t\t\t}\n\n\t\t}\n\n\t\treturn pastCount;\n\n\t}\n\n\t/**\n\t * Returns a value ranging from 0-1 that represents\n\t * how far into the presentation we have navigated.\n\t *\n\t * @return {number}\n\t */\n\tfunction getProgress() {\n\n\t\t// The number of past and total slides\n\t\tlet totalCount = getTotalSlides();\n\t\tlet pastCount = getSlidePastCount();\n\n\t\tif( currentSlide ) {\n\n\t\t\tlet allFragments = currentSlide.querySelectorAll( '.fragment' );\n\n\t\t\t// If there are fragments in the current slide those should be\n\t\t\t// accounted for in the progress.\n\t\t\tif( allFragments.length > 0 ) {\n\t\t\t\tlet visibleFragments = currentSlide.querySelectorAll( '.fragment.visible' );\n\n\t\t\t\t// This value represents how big a portion of the slide progress\n\t\t\t\t// that is made up by its fragments (0-1)\n\t\t\t\tlet fragmentWeight = 0.9;\n\n\t\t\t\t// Add fragment progress to the past slide count\n\t\t\t\tpastCount += ( visibleFragments.length / allFragments.length ) * fragmentWeight;\n\t\t\t}\n\n\t\t}\n\n\t\treturn Math.min( pastCount / ( totalCount - 1 ), 1 );\n\n\t}\n\n\t/**\n\t * Retrieves the h/v location and fragment of the current,\n\t * or specified, slide.\n\t *\n\t * @param {HTMLElement} [slide] If specified, the returned\n\t * index will be for this slide rather than the currently\n\t * active one\n\t *\n\t * @return {{h: number, v: number, f: number}}\n\t */\n\tfunction getIndices( slide ) {\n\n\t\t// By default, return the current indices\n\t\tlet h = indexh,\n\t\t\tv = indexv,\n\t\t\tf;\n\n\t\t// If a slide is specified, return the indices of that slide\n\t\tif( slide ) {\n\t\t\tlet isVertical = isVerticalSlide( slide );\n\t\t\tlet slideh = isVertical ? slide.parentNode : slide;\n\n\t\t\t// Select all horizontal slides\n\t\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t\t// Now that we know which the horizontal slide is, get its index\n\t\t\th = Math.max( horizontalSlides.indexOf( slideh ), 0 );\n\n\t\t\t// Assume we're not vertical\n\t\t\tv = undefined;\n\n\t\t\t// If this is a vertical slide, grab the vertical index\n\t\t\tif( isVertical ) {\n\t\t\t\tv = Math.max( Util.queryAll( slide.parentNode, 'section' ).indexOf( slide ), 0 );\n\t\t\t}\n\t\t}\n\n\t\tif( !slide && currentSlide ) {\n\t\t\tlet hasFragments = currentSlide.querySelectorAll( '.fragment' ).length > 0;\n\t\t\tif( hasFragments ) {\n\t\t\t\tlet currentFragment = currentSlide.querySelector( '.current-fragment' );\n\t\t\t\tif( currentFragment && currentFragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\tf = parseInt( currentFragment.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf = currentSlide.querySelectorAll( '.fragment.visible' ).length - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { h, v, f };\n\n\t}\n\n\t/**\n\t * Retrieves all slides in this presentation.\n\t */\n\tfunction getSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])' );\n\n\t}\n\n\t/**\n\t * Returns a list of all horizontal slides in the deck. Each\n\t * vertical stack is included as one horizontal slide in the\n\t * resulting array.\n\t */\n\tfunction getHorizontalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR );\n\n\t}\n\n\t/**\n\t * Returns all vertical slides that exist within this deck.\n\t */\n\tfunction getVerticalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, '.slides>section>section' );\n\n\t}\n\n\t/**\n\t * Returns all vertical stacks (each stack can contain multiple slides).\n\t */\n\tfunction getVerticalStacks() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.stack');\n\n\t}\n\n\t/**\n\t * Returns true if there are at least two horizontal slides.\n\t */\n\tfunction hasHorizontalSlides() {\n\n\t\treturn getHorizontalSlides().length > 1;\n\t}\n\n\t/**\n\t * Returns true if there are at least two vertical slides.\n\t */\n\tfunction hasVerticalSlides() {\n\n\t\treturn getVerticalSlides().length > 1;\n\n\t}\n\n\t/**\n\t * Returns an array of objects where each object represents the\n\t * attributes on its respective slide.\n\t */\n\tfunction getSlidesAttributes() {\n\n\t\treturn getSlides().map( slide => {\n\n\t\t\tlet attributes = {};\n\t\t\tfor( let i = 0; i < slide.attributes.length; i++ ) {\n\t\t\t\tlet attribute = slide.attributes[ i ];\n\t\t\t\tattributes[ attribute.name ] = attribute.value;\n\t\t\t}\n\t\t\treturn attributes;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Retrieves the total number of slides in this presentation.\n\t *\n\t * @return {number}\n\t */\n\tfunction getTotalSlides() {\n\n\t\treturn getSlides().length;\n\n\t}\n\n\t/**\n\t * Returns the slide element matching the specified index.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction getSlide( x, y ) {\n\n\t\tlet horizontalSlide = getHorizontalSlides()[ x ];\n\t\tlet verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll( 'section' );\n\n\t\tif( verticalSlides && verticalSlides.length && typeof y === 'number' ) {\n\t\t\treturn verticalSlides ? verticalSlides[ y ] : undefined;\n\t\t}\n\n\t\treturn horizontalSlide;\n\n\t}\n\n\t/**\n\t * Returns the background element for the given slide.\n\t * All slides, even the ones with no background properties\n\t * defined, have a background element so as long as the\n\t * index is valid an element will be returned.\n\t *\n\t * @param {mixed} x Horizontal background index OR a slide\n\t * HTML element\n\t * @param {number} y Vertical background index\n\t * @return {(HTMLElement[]|*)}\n\t */\n\tfunction getSlideBackground( x, y ) {\n\n\t\tlet slide = typeof x === 'number' ? getSlide( x, y ) : x;\n\t\tif( slide ) {\n\t\t\treturn slide.slideBackgroundElement;\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\t/**\n\t * Retrieves the current state of the presentation as\n\t * an object. This state can then be restored at any\n\t * time.\n\t *\n\t * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n\t */\n\tfunction getState() {\n\n\t\tlet indices = getIndices();\n\n\t\treturn {\n\t\t\tindexh: indices.h,\n\t\t\tindexv: indices.v,\n\t\t\tindexf: indices.f,\n\t\t\tpaused: isPaused(),\n\t\t\toverview: overview.isActive()\n\t\t};\n\n\t}\n\n\t/**\n\t * Restores the presentation to the given state.\n\t *\n\t * @param {object} state As generated by getState()\n\t * @see {@link getState} generates the parameter `state`\n\t */\n\tfunction setState( state ) {\n\n\t\tif( typeof state === 'object' ) {\n\t\t\tslide( Util.deserialize( state.indexh ), Util.deserialize( state.indexv ), Util.deserialize( state.indexf ) );\n\n\t\t\tlet pausedFlag = Util.deserialize( state.paused ),\n\t\t\t\toverviewFlag = Util.deserialize( state.overview );\n\n\t\t\tif( typeof pausedFlag === 'boolean' && pausedFlag !== isPaused() ) {\n\t\t\t\ttogglePause( pausedFlag );\n\t\t\t}\n\n\t\t\tif( typeof overviewFlag === 'boolean' && overviewFlag !== overview.isActive() ) {\n\t\t\t\toverview.toggle( overviewFlag );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Cues a new automated slide if enabled in the config.\n\t */\n\tfunction cueAutoSlide() {\n\n\t\tcancelAutoSlide();\n\n\t\tif( currentSlide && config.autoSlide !== false ) {\n\n\t\t\tlet fragment = currentSlide.querySelector( '.current-fragment[data-autoslide]' );\n\n\t\t\tlet fragmentAutoSlide = fragment ? fragment.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet slideAutoSlide = currentSlide.getAttribute( 'data-autoslide' );\n\n\t\t\t// Pick value in the following priority order:\n\t\t\t// 1. Current fragment's data-autoslide\n\t\t\t// 2. Current slide's data-autoslide\n\t\t\t// 3. Parent slide's data-autoslide\n\t\t\t// 4. Global autoSlide setting\n\t\t\tif( fragmentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( fragmentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( slideAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( slideAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( parentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( parentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tautoSlide = config.autoSlide;\n\n\t\t\t\t// If there are media elements with data-autoplay,\n\t\t\t\t// automatically set the autoSlide duration to the\n\t\t\t\t// length of that media. Not applicable if the slide\n\t\t\t\t// is divided up into fragments.\n\t\t\t\t// playbackRate is accounted for in the duration.\n\t\t\t\tif( currentSlide.querySelectorAll( '.fragment' ).length === 0 ) {\n\t\t\t\t\tUtil.queryAll( currentSlide, 'video, audio' ).forEach( el => {\n\t\t\t\t\t\tif( el.hasAttribute( 'data-autoplay' ) ) {\n\t\t\t\t\t\t\tif( autoSlide && (el.duration * 1000 / el.playbackRate ) > autoSlide ) {\n\t\t\t\t\t\t\t\tautoSlide = ( el.duration * 1000 / el.playbackRate ) + 1000;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Cue the next auto-slide if:\n\t\t\t// - There is an autoSlide value\n\t\t\t// - Auto-sliding isn't paused by the user\n\t\t\t// - The presentation isn't paused\n\t\t\t// - The overview isn't active\n\t\t\t// - The presentation isn't over\n\t\t\tif( autoSlide && !autoSlidePaused && !isPaused() && !overview.isActive() && ( !isLastSlide() || fragments.availableRoutes().next || config.loop === true ) ) {\n\t\t\t\tautoSlideTimeout = setTimeout( () => {\n\t\t\t\t\tif( typeof config.autoSlideMethod === 'function' ) {\n\t\t\t\t\t\tconfig.autoSlideMethod()\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnavigateNext();\n\t\t\t\t\t}\n\t\t\t\t\tcueAutoSlide();\n\t\t\t\t}, autoSlide );\n\t\t\t\tautoSlideStartTime = Date.now();\n\t\t\t}\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( autoSlideTimeout !== -1 );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Cancels any ongoing request to auto-slide.\n\t */\n\tfunction cancelAutoSlide() {\n\n\t\tclearTimeout( autoSlideTimeout );\n\t\tautoSlideTimeout = -1;\n\n\t}\n\n\tfunction pauseAutoSlide() {\n\n\t\tif( autoSlide && !autoSlidePaused ) {\n\t\t\tautoSlidePaused = true;\n\t\t\tdispatchEvent({ type: 'autoslidepaused' });\n\t\t\tclearTimeout( autoSlideTimeout );\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( false );\n\t\t\t}\n\t\t}\n\n\t}\n\n\tfunction resumeAutoSlide() {\n\n\t\tif( autoSlide && autoSlidePaused ) {\n\t\t\tautoSlidePaused = false;\n\t\t\tdispatchEvent({ type: 'autoslideresumed' });\n\t\t\tcueAutoSlide();\n\t\t}\n\n\t}\n\n\tfunction navigateLeft({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().left ) {\n\t\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().left ) {\n\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateRight({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().right ) {\n\t\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().right ) {\n\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateUp({skipFragments=false}={}) {\n\n\t\t// Prioritize hiding fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().up ) {\n\t\t\tslide( indexh, indexv - 1 );\n\t\t}\n\n\t}\n\n\tfunction navigateDown({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().down ) {\n\t\t\tslide( indexh, indexv + 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Navigates backwards, prioritized in the following order:\n\t * 1) Previous fragment\n\t * 2) Previous vertical slide\n\t * 3) Previous horizontal slide\n\t */\n\tfunction navigatePrev({skipFragments=false}={}) {\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.prev() === false ) {\n\t\t\tif( availableRoutes().up ) {\n\t\t\t\tnavigateUp({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Fetch the previous horizontal slide, if there is one\n\t\t\t\tlet previousSlide;\n\n\t\t\t\tif( config.rtl ) {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.future' ).pop();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.past' ).pop();\n\t\t\t\t}\n\n\t\t\t\t// When going backwards and arriving on a stack we start\n\t\t\t\t// at the bottom of the stack\n\t\t\t\tif( previousSlide && previousSlide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tlet v = ( previousSlide.querySelectorAll( 'section' ).length - 1 ) || undefined;\n\t\t\t\t\tlet h = indexh - 1;\n\t\t\t\t\tslide( h, v );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * The reverse of #navigatePrev().\n\t */\n\tfunction navigateNext({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.next() === false ) {\n\n\t\t\tlet routes = availableRoutes();\n\n\t\t\t// When looping is enabled `routes.down` is always available\n\t\t\t// so we need a separate check for when we've reached the\n\t\t\t// end of a stack and should move horizontally\n\t\t\tif( routes.down && routes.right && config.loop && isLastVerticalSlide() ) {\n\t\t\t\troutes.down = false;\n\t\t\t}\n\n\t\t\tif( routes.down ) {\n\t\t\t\tnavigateDown({skipFragments});\n\t\t\t}\n\t\t\telse if( config.rtl ) {\n\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnavigateRight({skipFragments});\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ----------------------------- EVENTS -------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t/**\n\t * Called by all event handlers that are based on user\n\t * input.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onUserInput( event ) {\n\n\t\tif( config.autoSlideStoppable ) {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t* Listener for post message events posted to this window.\n\t*/\n\tfunction onPostMessage( event ) {\n\n\t\tlet data = event.data;\n\n\t\t// Make sure we're dealing with JSON\n\t\tif( typeof data === 'string' && data.charAt( 0 ) === '{' && data.charAt( data.length - 1 ) === '}' ) {\n\t\t\tdata = JSON.parse( data );\n\n\t\t\t// Check if the requested method can be found\n\t\t\tif( data.method && typeof Reveal[data.method] === 'function' ) {\n\n\t\t\t\tif( POST_MESSAGE_METHOD_BLACKLIST.test( data.method ) === false ) {\n\n\t\t\t\t\tconst result = Reveal[data.method].apply( Reveal, data.args );\n\n\t\t\t\t\t// Dispatch a postMessage event with the returned value from\n\t\t\t\t\t// our method invocation for getter functions\n\t\t\t\t\tdispatchPostMessage( 'callback', { method: data.method, result: result } );\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.warn( 'reveal.js: \"'+ data.method +'\" is is blacklisted from the postMessage API' );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Event listener for transition end on the current slide.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onTransitionEnd( event ) {\n\n\t\tif( transition === 'running' && /section/gi.test( event.target.nodeName ) ) {\n\t\t\ttransition = 'idle';\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidetransitionend',\n\t\t\t\tdata: { indexh, indexv, previousSlide, currentSlide }\n\t\t\t});\n\t\t}\n\n\t}\n\n\t/**\n\t * A global listener for all click events inside of the\n\t * .slides container.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onSlidesClicked( event ) {\n\n\t\tconst anchor = Util.closest( event.target, 'a[href^=\"#\"]' );\n\n\t\t// If a hash link is clicked, we find the target slide\n\t\t// and navigate to it. We previously relied on 'hashchange'\n\t\t// for links like these but that prevented media with\n\t\t// audio tracks from playing in mobile browsers since it\n\t\t// wasn't considered a direct interaction with the document.\n\t\tif( anchor ) {\n\t\t\tconst hash = anchor.getAttribute( 'href' );\n\t\t\tconst indices = location.getIndicesFromHash( hash );\n\n\t\t\tif( indices ) {\n\t\t\t\tReveal.slide( indices.h, indices.v, indices.f );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the window level 'resize' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onWindowResize( event ) {\n\n\t\tlayout();\n\n\t}\n\n\t/**\n\t * Handle for the window level 'visibilitychange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onPageVisibilityChange( event ) {\n\n\t\t// If, after clicking a link or similar and we're coming back,\n\t\t// focus the document.body to ensure we can use keyboard shortcuts\n\t\tif( document.hidden === false && document.activeElement !== document.body ) {\n\t\t\t// Not all elements support .blur() - SVGs among them.\n\t\t\tif( typeof document.activeElement.blur === 'function' ) {\n\t\t\t\tdocument.activeElement.blur();\n\t\t\t}\n\t\t\tdocument.body.focus();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'fullscreenchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onFullscreenChange( event ) {\n\n\t\tlet element = document.fullscreenElement || document.webkitFullscreenElement;\n\t\tif( element === dom.wrapper ) {\n\t\t\tevent.stopImmediatePropagation();\n\n\t\t\t// Timeout to avoid layout shift in Safari\n\t\t\tsetTimeout( () => {\n\t\t\t\tReveal.layout();\n\t\t\t\tReveal.focus.focus(); // focus.focus :'(\n\t\t\t}, 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles clicks on links that are set to preview in the\n\t * iframe overlay.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onPreviewLinkClicked( event ) {\n\n\t\tif( event.currentTarget && event.currentTarget.hasAttribute( 'href' ) ) {\n\t\t\tlet url = event.currentTarget.getAttribute( 'href' );\n\t\t\tif( url ) {\n\t\t\t\tshowPreview( url );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles click on the auto-sliding controls element.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onAutoSlidePlayerClick( event ) {\n\n\t\t// Replay\n\t\tif( isLastSlide() && config.loop === false ) {\n\t\t\tslide( 0, 0 );\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Resume\n\t\telse if( autoSlidePaused ) {\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Pause\n\t\telse {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ------------------------------- API --------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t// The public reveal.js API\n\tconst API = {\n\t\tVERSION,\n\n\t\tinitialize,\n\t\tconfigure,\n\t\tdestroy,\n\n\t\tsync,\n\t\tsyncSlide,\n\t\tsyncFragments: fragments.sync.bind( fragments ),\n\n\t\t// Navigation methods\n\t\tslide,\n\t\tleft: navigateLeft,\n\t\tright: navigateRight,\n\t\tup: navigateUp,\n\t\tdown: navigateDown,\n\t\tprev: navigatePrev,\n\t\tnext: navigateNext,\n\n\t\t// Navigation aliases\n\t\tnavigateLeft, navigateRight, navigateUp, navigateDown, navigatePrev, navigateNext,\n\n\t\t// Fragment methods\n\t\tnavigateFragment: fragments.goto.bind( fragments ),\n\t\tprevFragment: fragments.prev.bind( fragments ),\n\t\tnextFragment: fragments.next.bind( fragments ),\n\n\t\t// Event binding\n\t\ton,\n\t\toff,\n\n\t\t// Legacy event binding methods left in for backwards compatibility\n\t\taddEventListener: on,\n\t\tremoveEventListener: off,\n\n\t\t// Forces an update in slide layout\n\t\tlayout,\n\n\t\t// Randomizes the order of slides\n\t\tshuffle,\n\n\t\t// Returns an object with the available routes as booleans (left/right/top/bottom)\n\t\tavailableRoutes,\n\n\t\t// Returns an object with the available fragments as booleans (prev/next)\n\t\tavailableFragments: fragments.availableRoutes.bind( fragments ),\n\n\t\t// Toggles a help overlay with keyboard shortcuts\n\t\ttoggleHelp,\n\n\t\t// Toggles the overview mode on/off\n\t\ttoggleOverview: overview.toggle.bind( overview ),\n\n\t\t// Toggles the \"black screen\" mode on/off\n\t\ttogglePause,\n\n\t\t// Toggles the auto slide mode on/off\n\t\ttoggleAutoSlide,\n\n\t\t// Toggles visibility of the jump-to-slide UI\n\t\ttoggleJumpToSlide,\n\n\t\t// Slide navigation checks\n\t\tisFirstSlide,\n\t\tisLastSlide,\n\t\tisLastVerticalSlide,\n\t\tisVerticalSlide,\n\n\t\t// State checks\n\t\tisPaused,\n\t\tisAutoSliding,\n\t\tisSpeakerNotes: notes.isSpeakerNotesWindow.bind( notes ),\n\t\tisOverview: overview.isActive.bind( overview ),\n\t\tisFocused: focus.isFocused.bind( focus ),\n\t\tisPrintingPDF: print.isPrintingPDF.bind( print ),\n\n\t\t// Checks if reveal.js has been loaded and is ready for use\n\t\tisReady: () => ready,\n\n\t\t// Slide preloading\n\t\tloadSlide: slideContent.load.bind( slideContent ),\n\t\tunloadSlide: slideContent.unload.bind( slideContent ),\n\n\t\t// Media playback\n\t\tstartEmbeddedContent: () => slideContent.startEmbeddedContent( currentSlide ),\n\t\tstopEmbeddedContent: () => slideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } ),\n\n\t\t// Preview management\n\t\tshowPreview,\n\t\thidePreview: closeOverlay,\n\n\t\t// Adds or removes all internal event listeners\n\t\taddEventListeners,\n\t\tremoveEventListeners,\n\t\tdispatchEvent,\n\n\t\t// Facility for persisting and restoring the presentation state\n\t\tgetState,\n\t\tsetState,\n\n\t\t// Presentation progress on range of 0-1\n\t\tgetProgress,\n\n\t\t// Returns the indices of the current, or specified, slide\n\t\tgetIndices,\n\n\t\t// Returns an Array of key:value maps of the attributes of each\n\t\t// slide in the deck\n\t\tgetSlidesAttributes,\n\n\t\t// Returns the number of slides that we have passed\n\t\tgetSlidePastCount,\n\n\t\t// Returns the total number of slides\n\t\tgetTotalSlides,\n\n\t\t// Returns the slide element at the specified index\n\t\tgetSlide,\n\n\t\t// Returns the previous slide element, may be null\n\t\tgetPreviousSlide: () => previousSlide,\n\n\t\t// Returns the current slide element\n\t\tgetCurrentSlide: () => currentSlide,\n\n\t\t// Returns the slide background element at the specified index\n\t\tgetSlideBackground,\n\n\t\t// Returns the speaker notes string for a slide, or null\n\t\tgetSlideNotes: notes.getSlideNotes.bind( notes ),\n\n\t\t// Returns an Array of all slides\n\t\tgetSlides,\n\n\t\t// Returns an array with all horizontal/vertical slides in the deck\n\t\tgetHorizontalSlides,\n\t\tgetVerticalSlides,\n\n\t\t// Checks if the presentation contains two or more horizontal\n\t\t// and vertical slides\n\t\thasHorizontalSlides,\n\t\thasVerticalSlides,\n\n\t\t// Checks if the deck has navigated on either axis at least once\n\t\thasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\n\t\thasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\n\n\t\t// Adds/removes a custom key binding\n\t\taddKeyBinding: keyboard.addKeyBinding.bind( keyboard ),\n\t\tremoveKeyBinding: keyboard.removeKeyBinding.bind( keyboard ),\n\n\t\t// Programmatically triggers a keyboard event\n\t\ttriggerKey: keyboard.triggerKey.bind( keyboard ),\n\n\t\t// Registers a new shortcut to include in the help overlay\n\t\tregisterKeyboardShortcut: keyboard.registerKeyboardShortcut.bind( keyboard ),\n\n\t\tgetComputedSlideSize,\n\n\t\t// Returns the current scale of the presentation content\n\t\tgetScale: () => scale,\n\n\t\t// Returns the current configuration object\n\t\tgetConfig: () => config,\n\n\t\t// Helper method, retrieves query string as a key:value map\n\t\tgetQueryHash: Util.getQueryHash,\n\n\t\t// Returns the path to the current slide as represented in the URL\n\t\tgetSlidePath: location.getHash.bind( location ),\n\n\t\t// Returns reveal.js DOM elements\n\t\tgetRevealElement: () => revealElement,\n\t\tgetSlidesElement: () => dom.slides,\n\t\tgetViewportElement: () => dom.viewport,\n\t\tgetBackgroundsElement: () => backgrounds.element,\n\n\t\t// API for registering and retrieving plugins\n\t\tregisterPlugin: plugins.registerPlugin.bind( plugins ),\n\t\thasPlugin: plugins.hasPlugin.bind( plugins ),\n\t\tgetPlugin: plugins.getPlugin.bind( plugins ),\n\t\tgetPlugins: plugins.getRegisteredPlugins.bind( plugins )\n\n\t};\n\n\t// Our internal API which controllers have access to\n\tUtil.extend( Reveal, {\n\t\t...API,\n\n\t\t// Methods for announcing content to screen readers\n\t\tannounceStatus,\n\t\tgetStatusText,\n\n\t\t// Controllers\n\t\tprint,\n\t\tfocus,\n\t\tprogress,\n\t\tcontrols,\n\t\tlocation,\n\t\toverview,\n\t\tfragments,\n\t\tslideContent,\n\t\tslideNumber,\n\n\t\tonUserInput,\n\t\tcloseOverlay,\n\t\tupdateSlidesVisibility,\n\t\tlayoutSlideContents,\n\t\ttransformSlides,\n\t\tcueAutoSlide,\n\t\tcancelAutoSlide\n\t} );\n\n\treturn API;\n\n};\n","import Deck, { VERSION } from './reveal.js'\n\n/**\n * Expose the Reveal class to the window. To create a\n * new instance:\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\n *   controls: false\n * } );\n * deck.initialize().then(() => {\n *   // reveal.js is ready\n * });\n */\nlet Reveal = Deck;\n\n\n/**\n * The below is a thin shell that mimics the pre 4.0\n * reveal.js API and ensures backwards compatibility.\n * This API only allows for one Reveal instance per\n * page, whereas the new API above lets you run many\n * presentations on the same page.\n *\n * Reveal.initialize( { controls: false } ).then(() => {\n *   // reveal.js is ready\n * });\n */\n\nlet enqueuedAPICalls = [];\n\nReveal.initialize = options => {\n\n\t// Create our singleton reveal.js instance\n\tObject.assign( Reveal, new Deck( document.querySelector( '.reveal' ), options ) );\n\n\t// Invoke any enqueued API calls\n\tenqueuedAPICalls.map( method => method( Reveal ) );\n\n\treturn Reveal.initialize();\n\n}\n\n/**\n * The pre 4.0 API let you add event listener before\n * initializing. We maintain the same behavior by\n * queuing up premature API calls and invoking all\n * of them when Reveal.initialize is called.\n */\n[ 'configure', 'on', 'off', 'addEventListener', 'removeEventListener', 'registerPlugin' ].forEach( method => {\n\tReveal[method] = ( ...args ) => {\n\t\tenqueuedAPICalls.push( deck => deck[method].call( null, ...args ) );\n\t}\n} );\n\nReveal.isReady = () => false;\n\nReveal.VERSION = VERSION;\n\nexport default Reveal;"],"names":["extend","a","b","i","queryAll","el","selector","Array","from","querySelectorAll","toggleClass","className","value","classList","add","remove","deserialize","match","parseFloat","transformElement","element","transform","style","matches","target","matchesMethod","matchesSelector","msMatchesSelector","call","closest","parentNode","createStyleSheet","tag","document","createElement","type","length","styleSheet","cssText","appendChild","createTextNode","head","getQueryHash","query","location","search","replace","split","shift","pop","unescape","fileExtensionToMimeMap","mp4","m4a","ogv","mpeg","webm","UA","navigator","userAgent","isMobile","test","platform","maxTouchPoints","isAndroid","Object","defineProperty","fitty_module","_extends","assign","arguments","source","key","prototype","hasOwnProperty","w","DrawState","IDLE","DIRTY_CONTENT","DIRTY_LAYOUT","DIRTY","fitties","redrawFrame","requestRedraw","cancelAnimationFrame","requestAnimationFrame","redraw","filter","f","dirty","active","redrawAll","forEach","styleComputed","computeStyle","shouldPreStyle","applyStyle","fittiesToRedraw","shouldRedraw","calculateStyles","markAsClean","dispatchFitEvent","availableWidth","clientWidth","currentWidth","scrollWidth","previousFontSize","currentFontSize","Math","min","max","minSize","maxSize","whiteSpace","multiLine","getComputedStyle","parseInt","getPropertyValue","display","preStyle","preStyleTestCompleted","originalStyle","getAttribute","dispatchEvent","CustomEvent","detail","oldValue","newValue","scaleFactor","fit","init","observeMutations","newbie","push","destroy","_","observer","disconnect","subscribe","unsubscribe","MutationObserver","observe","defaultOptions","subtree","childList","characterData","resizeDebounce","onWindowResized","clearTimeout","setTimeout","fitty","observeWindowDelay","events","set","enabled","method","e","observeWindow","fitAll","fittyCreate","elements","options","fittyOptions","publicFitties","map","unfreeze","freeze","nl","undefined","slice","window","SlideContent","constructor","Reveal","this","startEmbeddedIframe","bind","shouldPreload","preload","getConfig","preloadIframes","hasAttribute","load","slide","tagName","setAttribute","removeAttribute","media","sources","background","slideBackgroundElement","backgroundContent","slideBackgroundContentElement","backgroundIframe","backgroundImage","backgroundVideo","backgroundVideoLoop","backgroundVideoMuted","trim","encodeRFC3986URI","url","encodeURI","c","charCodeAt","toString","toUpperCase","decodeURI","join","isSpeakerNotes","video","muted","getMimeTypeFromFile","filename","innerHTML","excludeIframes","iframe","width","height","maxHeight","maxWidth","backgroundIframeElement","querySelector","layout","scopeElement","unload","getSlideBackground","formatEmbeddedContent","_appendParamToIframeSource","sourceAttribute","sourceURL","param","getSlidesElement","src","indexOf","startEmbeddedContent","autoplay","autoPlayMedia","play","readyState","startEmbeddedMedia","promise","catch","controls","addEventListener","removeEventListener","event","isAttachedToDOM","isVisible","currentTime","contentWindow","postMessage","stopEmbeddedContent","unloadIframes","pause","SlideNumber","render","getRevealElement","configure","config","oldConfig","slideNumberDisplay","slideNumber","isPrintingPDF","showSlideNumber","update","getSlideNumber","getCurrentSlide","format","getHorizontalSlides","horizontalOffset","dataset","visibility","getSlidePastCount","getTotalSlides","indices","getIndices","h","sep","isVerticalSlide","v","getHash","formatNumber","delimiter","isNaN","JumpToSlide","onInput","onBlur","onKeyDown","jumpInput","placeholder","show","indicesOnShow","focus","hide","jumpTimeout","jump","getIndicesFromHash","oneBasedIndex","jumpAfter","delay","regex","RegExp","getSlides","find","innerText","cancel","confirm","keyCode","stopImmediatePropagation","colorToRgb","color","hex3","r","charAt","g","hex6","rgb","rgba","Backgrounds","create","slideh","backgroundStack","createBackground","slidev","parallaxBackgroundImage","backgroundSize","parallaxBackgroundSize","backgroundRepeat","parallaxBackgroundRepeat","backgroundPosition","parallaxBackgroundPosition","container","contentElement","sync","data","backgroundColor","backgroundGradient","backgroundTransition","backgroundOpacity","dataPreload","opacity","contrastColor","computedBackgroundStyle","includeAll","currentSlide","currentBackground","horizontalPast","rtl","horizontalFuture","childNodes","backgroundh","backgroundv","previousBackground","slideContent","currentBackgroundContent","backgroundImageURL","previousBackgroundHash","currentBackgroundHash","classToBubble","contains","updateParallax","backgroundWidth","backgroundHeight","horizontalSlides","verticalSlides","getVerticalSlides","horizontalOffsetMultiplier","slideWidth","offsetWidth","horizontalSlideCount","parallaxBackgroundHorizontal","verticalOffsetMultiplier","verticalOffset","slideHeight","offsetHeight","verticalSlideCount","parallaxBackgroundVertical","SLIDES_SELECTOR","HORIZONTAL_SLIDES_SELECTOR","VERTICAL_SLIDES_SELECTOR","POST_MESSAGE_METHOD_BLACKLIST","FRAGMENT_STYLE_REGEX","autoAnimateCounter","AutoAnimate","run","fromSlide","toSlide","reset","allSlides","toSlideIndex","fromSlideIndex","autoAnimateStyleSheet","animationOptions","getAutoAnimateOptions","autoAnimate","slideDirection","fromSlideIsHidden","css","getAutoAnimatableElements","autoAnimateElements","to","autoAnimateUnmatched","defaultUnmatchedDuration","duration","defaultUnmatchedDelay","getUnmatchedAutoAnimateElements","unmatchedElement","unmatchedOptions","id","autoAnimateTarget","fontWeight","sheet","removeChild","elementOptions","easing","fromProps","getAutoAnimatableProperties","toProps","styles","translate","scale","presentationScale","getScale","delta","x","y","scaleX","scaleY","round","propertyName","toValue","fromValue","explicitValue","toStyleProperties","keys","inheritedOptions","autoAnimateEasing","autoAnimateDuration","autoAnimatedParent","autoAnimateDelay","direction","properties","bounds","measure","center","getBoundingClientRect","offsetLeft","offsetTop","computedStyles","autoAnimateStyles","property","pairs","autoAnimateMatcher","getAutoAnimatePairs","reserved","pair","index","textNodes","findAutoAnimateMatches","node","nodeName","textContent","getLocalBoundingBox","fromScope","toScope","serializer","fromMatches","toMatches","fromElement","primaryIndex","secondaryIndex","rootElement","children","reduce","result","containsAnimatedElements","concat","Fragments","fragments","disable","enable","availableRoutes","hiddenFragments","prev","next","sort","grouped","ordered","unordered","sorted","fragment","group","sortAll","horizontalSlide","verticalSlide","changedFragments","shown","hidden","maxIndex","currentFragment","wasVisible","announceStatus","getStatusText","bubbles","goto","offset","lastVisibleFragment","progress","fragmentInURL","writeURL","Overview","onSlideClicked","activate","overview","isActive","cancelAutoSlide","getBackgroundsElement","margin","slideSize","getComputedSlideSize","overviewSlideWidth","overviewSlideHeight","updateSlidesVisibility","indexh","indexv","hslide","vslide","hbackground","vbackground","vmin","innerWidth","innerHeight","transformSlides","deactivate","cueAutoSlide","toggle","override","preventDefault","Keyboard","shortcuts","bindings","onDocumentKeyDown","onDocumentKeyPress","navigationMode","unbind","addKeyBinding","binding","callback","description","removeKeyBinding","triggerKey","registerKeyboardShortcut","getShortcuts","getBindings","shiftKey","charCode","toggleHelp","keyboardCondition","isFocused","autoSlideWasPaused","isAutoSliding","onUserInput","activeElementIsCE","activeElement","isContentEditable","activeElementIsInput","activeElementIsNotes","unusedModifier","altKey","ctrlKey","metaKey","resumeKeyCodes","keyboard","isPaused","useLinearMode","hasHorizontalSlides","hasVerticalSlides","triggered","apply","action","skipFragments","left","right","up","Number","MAX_VALUE","down","togglePause","requestMethod","documentElement","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","enterFullscreen","embedded","getViewportElement","autoSlideStoppable","toggleAutoSlide","jumpToSlide","toggleJumpToSlide","closeOverlay","Location","MAX_REPLACE_STATE_FREQUENCY","writeURLTimeout","replaceStateTimestamp","onWindowHashChange","hash","name","bits","hashIndexBase","hashOneBasedIndex","getElementById","decodeURIComponent","error","readURL","currentIndices","newIndices","history","debouncedReplaceState","pathname","replaceState","Date","now","replaceStateTimeout","s","encodeURIComponent","Controls","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","revealElement","controlsLeft","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","controlsRightArrow","controlsLeftArrow","controlsDownArrow","controlsLayout","controlsBackArrows","pointerEvents","eventName","routes","fragmentsRoutes","controlsTutorial","hasNavigatedVertically","hasNavigatedHorizontally","Progress","onProgressClicked","bar","getProgress","getMaxWidth","slides","slidesTotal","slideIndex","floor","clientX","targetIndices","Pointer","lastMouseWheelStep","cursorHidden","cursorInactiveTimeout","onDocumentCursorActive","onDocumentMouseScroll","mouseWheel","hideInactiveCursor","showCursor","cursor","hideCursor","hideCursorTime","wheelDelta","loadScript","script","async","defer","onload","onreadystatechange","onerror","err","Error","insertBefore","lastChild","Plugins","reveal","state","registeredPlugins","asyncDependencies","plugins","dependencies","registerPlugin","Promise","resolve","scripts","scriptsToLoad","condition","scriptLoadedCallback","initPlugins","then","console","warn","pluginValues","values","pluginsToInitialize","loadAsync","initNextPlugin","afterPlugInitialized","plugin","hasPlugin","getPlugin","getRegisteredPlugins","Print","setupPDF","injectPageNumbers","pageWidth","pageHeight","body","viewportElement","presentationBackground","viewportStyles","layoutSlideContents","slideScrollHeights","scrollHeight","pages","pageContainer","top","contentHeight","numberOfPages","ceil","pdfMaxPagesPerSlide","page","pdfPageHeightOffset","showNotes","notes","getSlideNotes","notesSpacing","notesLayout","notesElement","bottom","numberElement","pdfSeparateFragments","fragmentGroups","previousFragmentStep","clonedPage","cloneNode","fragmentNumber","Touch","touchStartX","touchStartY","touchStartCount","touchCaptured","onPointerDown","onPointerMove","onPointerUp","onTouchStart","onTouchMove","onTouchEnd","msPointerEnabled","isSwipePrevented","touches","clientY","currentX","currentY","includeFragments","deltaX","deltaY","abs","pointerType","MSPOINTER_TYPE_TOUCH","STATE_FOCUS","STATE_BLUR","Focus","onRevealPointerDown","onDocumentPointerDown","blur","Notes","print","updateVisibility","hasNotes","isSpeakerNotesWindow","notesElements","Playback","progressCheck","diameter","diameter2","thickness","playing","progressOffset","canvas","context","getContext","setPlaying","wasPlaying","animate","progressBefore","radius","iconSize","endAngle","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","fillRect","moveTo","lineTo","restore","on","listener","off","minScale","maxScale","respondToHashChanges","disableLayout","touch","loop","shuffle","help","showHiddenSlides","autoSlide","autoSlideMethod","defaultTiming","previewLinks","postMessageEvents","focusBodyOnPageVisibilityChange","transition","transitionSpeed","POSITIVE_INFINITY","viewDistance","mobileViewDistance","sortFragmentsOnSync","VERSION","previousSlide","autoSlidePlayer","ready","navigationHistory","slidesTransform","dom","autoSlideTimeout","autoSlideStartTime","autoSlidePaused","backgrounds","pointer","start","Util","wrapper","parent","childElementCount","Device","pauseOverlay","createSingletonNode","tagname","classname","nodes","testNode","statusElement","position","overflow","clip","createStatusElement","setupDOM","onPostMessage","setInterval","scrollTop","scrollLeft","onFullscreenChange","removeEventListeners","text","nodeType","isAriaHidden","isDisplayHidden","child","isReady","numberOfSlides","viewport","setProperty","resume","enablePreviewLinks","disablePreviewLinks","onAutoSlidePlayerClick","addEventListeners","onWindowResize","onSlidesClicked","onTransitionEnd","onPageVisibilityChange","useCapture","transforms","createEvent","initEvent","dispatchPostMessage","self","message","namespace","getState","JSON","stringify","onPreviewLinkClicked","showPreview","overlay","showHelp","html","size","oldScale","presentationWidth","presentationHeight","zoom","len","remainingHeight","getRemainingHeight","newHeight","oldHeight","removeProperty","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","setPreviousVerticalIndex","stack","getPreviousVerticalIndex","attributeName","isLastVerticalSlide","nextElementSibling","isFirstSlide","isLastSlide","wasPaused","origin","defaultPrevented","stateBefore","indexhBefore","indexvBefore","updateSlides","slideChanged","currentHorizontalSlide","currentVerticalSlides","autoAnimateTransition","stateLoop","j","splice","beforeSlide","random","slidesLength","printMode","loopedForwards","loopedBackwards","reverse","showFragmentsIn","hideFragmentsIn","wasPresent","slideState","distanceX","distanceY","horizontalSlidesLength","verticalSlidesLength","oy","fragmentRoutes","pastCount","mainLoop","isVertical","getSlide","indexf","paused","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","playbackRate","navigateNext","pauseAutoSlide","resumeAutoSlide","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","parse","args","anchor","fullscreenElement","webkitFullscreenElement","currentTarget","API","initialize","initOptions","defaultConfig","setViewport","syncSlide","syncFragments","navigateFragment","prevFragment","nextFragment","availableFragments","toggleOverview","isOverview","loadSlide","unloadSlide","hidePreview","setState","pausedFlag","overviewFlag","totalCount","allFragments","fragmentWeight","getSlidesAttributes","attributes","attribute","getPreviousSlide","getSlidePath","getPlugins","Deck","enqueuedAPICalls","deck"],"mappings":"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"}